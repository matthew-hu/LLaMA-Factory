[
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Should Match Regexp  ${text}  \\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}:\\\\d{2}",
        "output": "这段代码主要作用是：验证 ${text} 是否符合年-月-日 时:分:秒（四位数字-两位数字-两位数字 两位数字:两位数字:两位数字）的时间格式。\n\n其中用到了以下关键字：Should Match Regexp\n\n这个关键字的用法是：Should Match Regexp 是RobotFramework内置的关键字，用于对字符串进行正则表达式匹配。在这个测试脚本中，它被用来检查变量 ${text} 是否符合预期的时间格式。其中，\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}:\\\\d{2} 是一个正则表达式，\\\\d 代表匹配数字，{4}代表重复4次，-和：是用来分隔年月日时分秒的。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找div元素，class包含acro，内容包含‘所属指标分组’\n${elem}  FindElem | div[class*=acro]:contains(所属指标分组)",
        "output": "这段代码的主要作用是：查找页面中的某个特定div元素，这个元素的class属性中包含'acro'字符串，且这个元素的内容中包含'所属指标分组'的文字。\n\n其中用到了以下关键字：FindElem\n\n这个关键字的用法是：FindElem 关键字用于通过提供的JQuery选择器查找特定的元素。在这个例子中，它试图查找一个div元素，其class属性中包含'acro'，并且包含文字'所属指标分组'。如果在指定超时时间内找到符合条件的元素，那么它将返回该元素；否则，它将引发异常。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 姓名 | 李四",
        "output": "这段代码主要作用是：设置页面上的“姓名”字段为“李四”。\n\n其中用到了以下关键字：SetField。\n\nSetField的用法是：操作页面上的某一字段，具体表现为在该字段输入设定的值。在这段代码中，'姓名'是要操作的字段，'李四'是要输入的值。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入姓名张三\nSetField | 姓名 | 张三\n\n# 输入密码\nSetField | 密码 | ${pss}\n\n# 点击登录\nClick | 登录\n\n# 等待页面出现 welcome\nWaitText | welcome",
        "output": "这段代码主要作用是：实现用户登录功能，输入姓名、密码并点击登录，最后等待页面出现welcome字样。\n其中用到了以下关键字：SetField、Click、WaitText\n这些关键字的用法是：\n- SetField：设置页面上的一个或多个字段值，填入需要的文本。例如，设置姓名字段为张三，设置密码字段为${pss}\n- Click：点击页面上的某个文本或元素，例如点击登录按钮\n- WaitText：等待页面上出现指定的文本，例如等待页面出现welcome字样。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Screenshot",
        "output": "这段代码主要作用是：使用Screenshot关键字进行屏幕截图。\n\n其中用到了以下关键字：Screenshot\n\n这些关键字的用法是：Screenshot用于在测试过程中进行屏幕截图。一般用于记录测试过程中的关键步骤，或者当测试用例失败时记录失败时的屏幕状态。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找class=xyz并且内容包含“所属指标分组”的div元素\n${elem}  FindElem | div[class=xyz]:contains(所属指标分组)",
        "output": "这段代码的主要作用是：查找class=xyz并且内容包含“所属指标分组”的div元素。\n\n其中用到了以下关键字：FindElem\n\n这个关键字的用法是：使用jquery选择器查找或定位元素，selector是需要查找的元素的jquery选择器，timeout是超时时间，默认是10秒。在这段代码中，selector是\"div[class=xyz]:contains(所属指标分组)\"，表示查找第一个class=xyz并且文本内容包含“所属指标分组”的div元素。如果在10秒内找不到这样的元素，测试将失败。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找placeholder为\"请选择事件\"的div元素\n${elem}  FindElem | div[placeholder=请选择事件]\n\n# 填写内容为“12345”\nFillArea | ${elem} | 12345",
        "output": "这段代码主要作用是：在页面上查找placeholder为\"请选择事件\"的div元素，并往该元素中填写内容“12345”。\n其中用到了以下关键字：FindElem、FillArea。\n这些关键字的用法是：\n1. FindElem：通过jQuery选择器查找页面上特定的元素。本例中，通过`div[placeholder=请选择事件]`选择器查找具有`placeholder`属性值为`请选择事件`的div元素。\n2. FillArea：往指定的元素区域填写一个或多个值。本例中，将“12345”填写到找到的div元素中。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找文本为 Appid 的 span 的下一个元素\n${elem}  FindElem | span:contains(Appid) + *\n\n# 点击找到的元素\nClickElem | ${elem}",
        "output": "这段代码主要作用是：首先查找到文本为 \"Appid\" 的span元素的紧跟着的下一个元素，并把这个元素赋值给变量${elem}，然后点击这个找到的元素。\n\n其中用到了以下关键字：FindElem, ClickElem。\n\n这些关键字的用法是：\n\n- `FindElem`：用于查找/定位/获取jquery选择器表示的元素，语法是 `FindElem | selector | timeout=10`，其中selector是jquery选择器，timeout是查找元素的超时时间，默认为10秒。在本段代码中，`FindElem | span:contains(Appid) + *` 是查找文本为 \"Appid\" 的 span 元素的下一个元素，无论这个元素是什么类型。\n\n- `ClickElem`：用于点击jquery选择器表示的元素，语法是 `ClickElem | selector | base=`，其中selector是jquery选择器，base是基准元素(特殊值POPUP表示弹出层/弹窗)。在本段代码中，`ClickElem | ${elem}` 是点击刚刚通过FindElem找到的元素。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找文本为 Appid 的 span 的下一个 button 元素\n${elem}  FindElem | span:contains(Appid) + button\n\n# 点击找到的元素\nClickElem | ${elem}",
        "output": "这段代码主要作用是：查找文本为\"Appid\"的span元素的下一个button元素，并点击这个button元素。\n其中用到了以下关键字：FindElem, ClickElem\n这些关键字的用法是：\n- FindElem：查找/定位/获取jquery选择器表示的元素，本例中，查找文本为\"Appid\"的span元素的下一个button元素\n- ClickElem：点击jquery选择器表示的元素，本例中，点击查找到的button元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击按钮 abc\nClick | abc",
        "output": "这段代码主要作用是：点击文本内容为abc的按钮。\n\n其中用到了以下关键字：Click。\n\n这个关键字的用法是：点击指定文本内容的元素，如按钮、链接等。在本段代码中，关键字作用于文本内容为 \"abc\" 的元素。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${elem}  FindElem |  div[class*=metric-group-list-table-name]:contains('12345')",
        "output": "这段代码主要作用是：查找包含'12345'的class包含metric-group-list-table-name的div元素，并将这个元素赋值给变量${elem}。\n\n其中用到了以下关键字：FindElem。\n\nFindElem的用法是：查找符合jQuery选择器的元素。在这段代码中，使用了div[class*=metric-group-list-table-name]:contains('12345')作为选择器，表示查找class属性中包含metric-group-list-table-name，且元素文本包含'12345'的div元素。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${elem}  FindElem |  div[class*=\"arco-pagination-total-text\"]",
        "output": "这段代码主要作用是：查找包含特定类名的div元素。\n其中用到了以下关键字：FindElem。\n这些关键字的用法是：FindElem用于查找与给定jQuery选择器匹配的元素。在这个示例中，查找类名包含\"arco-pagination-total-text\"的div元素，并将找到的元素存储在变量${elem}中。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${elem}  FindElem |  div[class*=\"table-name-block-content-title\"]",
        "output": "这段代码主要作用是：在自动化测试中查找并定位到特定的HTML元素，具体是查找class属性包含\"table-name-block-content-title\"的div元素。\n\n其中用到了以下关键字：FindElem。\n\n这个关键字的用法是：FindElem关键字用于查找或定位或获取jquery选择器所表示的元素。在这段代码中，使用的选择器是div元素，它的class属性包含了\"table-name-block-content-title\"，所以关键字会返回这个元素。如果在给定的超时时间（默认是10秒）内没有找到符合条件的元素，该关键字会抛出一个异常。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${elem}  FindElem |  svg[class*=\"arco-icon-edit\"]",
        "output": "这段代码主要的作用是：查找class属性中包含\"arco-icon-edit\"的svg元素。\n\n其中用到了以下关键字：\"FindElem\"。\n\n这个关键字的用法是：通过传入对应的jquery选择器作为参数，寻找满足此选择器定义属性的元素。在这段代码中，传入的选择器是\"svg[class*=\"arco-icon-edit\"]\"，表示寻找页面中class属性包含\"arco-icon-edit\"的svg元素。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${elem}  FindElem |  div:contains(确定) + button[id*='x']",
        "output": "这段代码主要作用是：查找包含文本“确定”的div元素，并定位紧邻其后的id包含'x'的button元素。\n\n其中用到了以下关键字：FindElem\n这些关键字的用法是：FindElem关键字用于通过jQuery选择器来查找指定元素。在这里，选择器\"div:contains(确定) + button[id*='x']\"表示查找包含文本\"确定\"的div元素，并找到紧邻其后的id包含'x'的button元素。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找文本包含确定的div的下一个id*=x的button元素\n${elem}  FindElem | div:contains(确定) + button[id*=x]\n\n# 点击找到的元素\nClickElem | ${elem}",
        "output": "这段代码主要作用是：首先查找文本包含确定的div的下一个id包含x的button元素，然后点击这个找到的元素。\n\n其中用到了以下关键字：FindElem，ClickElem。\n\n这些关键字的用法是：\n- FindElem：查找/定位/获取jquery选择器selector表示的元素。在这里，它是用来找到文本包含确定的div的下一个id包含x的button元素的。\n- ClickElem：点击jquery选择器表示的元素。在这里，它用于点击在上一步中找到的元素。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 打开主页\nOpenUrl | ${MAIN_PAGE}",
        "output": "这段代码主要作用是：打开定义的主页。\n\n其中用到了以下关键字：OpenUrl。\n\n这个关键字的用法是：OpenUrl | url | timeout=80，其中url是你需要打开的网页地址，timeout表示打开页面的超时时间，单位为秒。在这段代码中，url被替换为了${MAIN_PAGE}，也就是主页的地址。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "IF  \"${sub_username}\"\n    Click  子用户登录\nELSE\n    Click  XX\nEND",
        "output": "这段代码主要的作用是：根据 \"${sub_username}\" 是否存在，决定点击哪个按钮。如果 \"${sub_username}\" 存在，那么会点击 \"子用户登录\" 按钮，否则会点击 \"XX\" 按钮。\n\n其中用到了以下关键字：\"IF\", \"ELSE\", \"END\", \"Click\"。\n\n这些关键字的用法是：\n1. \"IF\" : IF 关键字用于开始一个条件判断。在这个例子中，IF 后面的条件是 \"${sub_username}\" 是否存在。如果 \"${sub_username}\" 存在，那么执行 IF 语句后面的 \"Click  子用户登录\"。\n2. \"ELSE\" : ELSE 关键字用于在 IF 语句的条件不满足时，执行 ELSE 语句后面的代码。在这个例子中，如果 \"${sub_username}\" 不存在，那么执行 \"Click  XX\"。\n3. \"END\" : END 关键字用于结束一个条件判断。\n4. \"Click\" : Click 是一个关键字，用于点击某个文本。在这个例子中，Click 后面跟随的是要点击的具体文本。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "IF  ${sub_username}\n    Click  子用户登录\n    SetField | 主账号用户名 | ${user_name}\n    SetField | 子用户 | ${sub_username}\n    SetField | 密码 | ${password}\nEND",
        "output": "这段代码主要作用是：子用户登录的操作。先判断是否有子用户，如果有子用户，则点击\"子用户登录\"，然后设置主账号用户名为${user_name}，接着设置子用户为${sub_username}，最后设置密码为${password}。如果没有子用户，则不做任何操作。\n\n其中用到了以下关键字：\n- IF/END 用于判断是否有子用户的用户名，有则执行后面的操作，没有则不执行。\n- Click 用于执行点击操作，点击\"子用户登录\"。\n- SetField 用来设置具体的字段值。本段代码中，该关键字用来设置主账号用户名、子用户和密码。\n\n这些关键字的用法是：\n- IF/END 是RobotFramework内置的关键字，用于逻辑判断。IF后跟判断条件，中间是满足条件后要执行的操作，END表示条件判断的结束。\n- Click 关键字用来模拟用户点击操作，后面跟要点击的元素的文本。\n- SetField 关键字用来设置某个字段的值，第一个参数是要设置的字段名，第二个参数是要设置的值。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 调用关键字 ‘事件名称字符串’\n${event_name}=  事件名称字符串\n\n# 将其返回值填写到姓名字段中\nSetField | 姓名 | ${event_name}",
        "output": "这段代码主要作用是：调用关键字“事件名称字符串”，并将其返回的值填写到网页中的“姓名”字段中。\n\n其中用到了以下关键字：“事件名称字符串”和“SetField”。\n\n这些关键字的用法如下：\n- “事件名称字符串”：这是自定义的关键字，用于获取事件名称的字符串。具体的实现方式和返回的内容我们无法从这段代码中得知。\n- “SetField”：这是RF框架中的关键字，用于操作页面字段的控件区域。这里用它将“事件名称字符串”关键字获取到的字符串填入“姓名”字段中。\"${event_name}\"是变量的写法，表示将“事件名称字符串”关键字的返回值作为输入值。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击登录按钮\nClick | 登录\n\n# 等待登录按钮消失\nWaitElemDisappear | button:contains(登录)",
        "output": "这段代码主要作用是：首先点击登录按钮，然后等待登录按钮消失。\n\n其中用到了以下关键字：Click 和 WaitElemDisappear。\n\n这些关键字的用法是：\n- Click 是点击指定的文本或元素，这里是点击文本\"登录\"。\n- WaitElemDisappear 是等待jquery选择器表示的元素消失，这里是等待登录按钮消失。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Click | 数据查询",
        "output": "这段代码主要作用是：点击名为\"数据查询\"的元素。\n\n其中用到了以下关键字：Click\n\n这个关键字的用法是：首先指定要点击的元素的文本，即\"数据查询\"，然后执行点击操作。如果同名的元素有多个，该关键字默认会点击第一个。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "FillArea | [class=\"arco-menu-inner\"] | ${cluster}",
        "output": "这段代码主要作用是：在网页上找到类名为\"arco-menu-inner\"的元素区域，并在该区域填入变量${cluster}的值。\n\n其中用到了以下关键字：\"FillArea\"。\n\n这个关键字的用法是：通过给定的jquery选择器，找到对应的元素控件区域，在这里是类名含有\"arco-menu-inner\"的元素，并在这个元素区域内依次填入一个或多个值。在该段脚本中，填入的值为变量${cluster}。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "FillArea | div[class=\"arco-menu-inner\"]:last | ${cluster}",
        "output": "这段代码主要作用是：在符合“div[class=\"arco-menu-inner\"]:last”这一选择器要求的HTML区域内填入变量${cluster}所代表的值。\":last\"表示选择该选择器代表的元素中的最后一个元素。\n\n其中用到了以下关键字：FillArea。\n\n这个关键字的用法是：在页面上用jquery选择器代表的控件区域，依次填入一个或多个值到控件中。这里，\"div[class=\"arco-menu-inner\"]:last\"是jquery选择器，${cluster}是填入的值。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 搜索 | auto_test",
        "output": "这段代码主要作用是：在界面上查找到名为“搜索”的字段，然后在这个字段中填入“auto_test”。\n\n其中用到了以下关键字：SetField。 \n\n这个关键字的用法是：操作页面字段name关联的控件区域，填入一个或多个值到控件中。在这段代码中，name值为“搜索”，填入的值为“auto_test”。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在搜索中输入auto_test并回车\nSetField | 搜索 | auto_test | enter=True",
        "output": "这段代码主要作用是：在搜索框中输入\"auto_test\"字符串，并模拟回车操作。\n\n其中用到了以下关键字：SetField。\n\n这个关键字的用法是：操作页面字段\"搜索\"关联的控件区域，输入字符串\"auto_test\"，并模拟输入回车键的操作。其中，\"搜索\"是字段名，\"auto_test\"是要填写的内容，\"enter=True\"表示模拟输入回车键的操作。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${a}  Set Variable  123",
        "output": "这段代码主要作用是：设置变量a的值为123。\n\n其中用到了以下关键字：Set Variable。\n\n这个关键字的用法是：Set Variable用于声明一个变量并赋值。在这段代码中，变量名为a，值为123。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Sleep | 2",
        "output": "这段代码主要作用是：使自动化测试脚本暂停执行2秒钟\n\n其中用到了以下关键字：Sleep\n\n这个关键字的用法是：Sleep | seconds 这个关键字的主要作用是使自动化测试脚本暂停执行指定的秒数。在这里，Sleep | 2 的作用是让测试脚本暂停执行2秒钟。在自动化测试中，有时需要通过人为添加一些等待时间来模拟用户的实际操作情况，或因为一些操作需要等待一段时间才能完成。例如，提交表单后可能需要等待服务器处理，页面可能需要一些时间来加载等。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Click | 数据对象",
        "output": "这段代码主要作用是：点击页面上的\"数据对象\"文本。\n其中用到了以下关键字：Click。\n这个关键字的用法是：点击页面上指定的文本。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickElem | svg[class*=\"plus\"]",
        "output": "这段代码主要作用是：点击页面上的包含\"plus\"的svg元素。\n其中用到了以下关键字：ClickElem。\n这个关键字的用法是：点击jquery选择器表示的元素。在这里是点击包含\"plus\"的svg元素。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Click | 创建指标组",
        "output": "这段代码主要作用是：点击创建指标组。\n\n其中用到了以下关键字：Click。\n\n这些关键字的用法是：Click关键字用于点击页面上的文本元素。在这段代码中，点击页面上的\"创建指标组\"文本。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "FillArea | div[class=\"publish-target-wrapper\"] | 应用ID | = | 10000006",
        "output": "这段代码主要作用是：在页面中找到具有 \"publish-target-wrapper\" 类的 div 元素，并在其相应的控件中填入 \"应用ID\" \"=\" \"10000006\"。\n\n其中用到了以下关键字：FillArea。\n\n这个关键字的用法是：操作页面上jquery选择器代表的控件区域，依次填入一个或多个值到控件中（这里通过扩展符“@”将不定数量的参数一并传入）。指定的jquery选择器是 \"div[class=\"publish-target-wrapper\"]\"，表示匹配页面上具有 \"publish-target-wrapper\" 类的 div 元素。填入的值依次为 \"应用ID\" \"=\" \"10000006\"。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "FillArea | div.logic-wrapper-item div.arco-formily-item-control:eq(-1) | 应用ID | = | 10000006",
        "output": "这段代码主要作用是：在指定的区域内填写\"应用ID\"和\"10000006\"，然后等待。\n\n其中用到了以下关键字：\"FillArea\"。\n\n\"FillArea\"关键字的用法是：操作页面上jquery选择器代表的控件区域，依次填入一个或多个值到控件中。在本段代码中，该关键字用于在最后一个'class=logic-wrapper-item'且'class=arco-formily-item-control'的div元素中填入\"应用ID\"和\"10000006\"。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Click | 添加或条件",
        "output": "这段代码主要作用是：点击文本\"添加或条件\"。\n\n其中用到了以下关键字：Click。\n\n这个关键字的用法是：接收文本参数，用于在web页面中找到匹配该文本的元素并执行点击操作。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${line} | Set Variable | div.logic-wrapper-item div.arco-formily-item-control:eq(-1)",
        "output": "这段代码主要作用是：设置一个名为line的变量，其值为\"div.logic-wrapper-item div.arco-formily-item-control:eq(-1)\"。这句代码表示在页面中找到符合 \"div.logic-wrapper-item div.arco-formily-item-control\" 这个选择器的元素，并且获取到最后一个元素。这种情况下，通常用于后续的元素操作，如点击、填入内容等。\n\n其中用到了以下关键字：Set Variable。\nSet Variable的作用是设置一个变量，命令后面的所有值都将作为该变量的值。在这个场景下，其值为 \"div.logic-wrapper-item div.arco-formily-item-control:eq(-1)\"，这是一个特定的元素选择器。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${line}     Set Variable    div.logic-wrapper-item div.arco-formily-item-control:eq(-1)\nFillArea | ${line} | 应用ID | = | 10000006",
        "output": "这段代码主要作用是：在页面上的logic-wrapper-item控件区域中的最后一个arco-formily-item-control控件，填入应用ID=10000006，并等待结果。\n其中用到了以下关键字：Set Variable，FillArea\n这些关键字的用法是：\n- Set Variable：将变量${line}的值设为\"div.logic-wrapper-item div.arco-formily-item-control:eq(-1)\"\n- FillArea：在${line}代表的控件区域中，填入\"应用ID\"、\"=\"和\"10000006\"。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${args}    Create List    应用ID    =    10000006",
        "output": "这段代码主要作用是：创建一个列表并赋值给变量 args。\n其中用到了以下关键字：Create List\n这些关键字的用法是：创建一个列表，列表中的元素为 \"应用ID\"、\"=\"、\"10000006\"。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ABC\n    [Arguments]  ${user}  ${password}  ${token}\n    SetField | 用户名 | ${user}\n    SetField | 密码 | ${password}\n    Click | 登录\n    ${success}  IsAnyTextExisting | welcome\n    [Return]  ${success}",
        "output": "这段代码主要作用是：定义一个名为\"ABC\"的测试用例，用于登录操作。其中首先填入用户名和密码，然后点击登录按钮，最后检查页面上是否存在\"welcome\"文本，以此判断登录操作是否成功。\n\n其中用到了以下关键字：\"SetField\", \"Click\", \"IsAnyTextExisting\"。\n\n这些关键字的用法是：\n- \"SetField\"用于操作页面字段name关联的控件区域，依次填入一个或多个值到控件中。这里用于填入用户名和密码。\n- \"Click\"用于点击文本。这里用于点击登录按钮。\n- \"IsAnyTextExisting\"用于检查某个文本是否在页面上存在。这里用于检查\"welcome\"文本是否存在，以此判断登录是否成功。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "FindElem | button[id='a']",
        "output": "这段代码主要作用是：查找页面上id为'a'的按钮元素。\n\n其中用到了以下关键字：FindElem。\n\n这个关键字的用法是：FindElem | selector。其中，selector参数为一个jquery选择器，代表要查找元素的定位。如在代码实例中，使用id为'a'的按钮元素作为查询标准。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找 id 为 a 的 button\n${button}  FindElem | button[id=\"a\"]\n\n# 获取 button 的文本\n${text}  GetElemText | ${button}",
        "output": "这段代码主要作用是：查找id为a的button元素，获取并输出它的文本。\n其中用到了以下关键字：FindElem、GetElemText\n这些关键字的用法是：\n1. FindElem：查找/定位/获取jquery选择器selector表示的元素。在此例中，查找id为a的button元素。\n2. GetElemText：获取jquery selector所示元素的文本。在此例中，获取刚刚查找到的id为a的button元素的文本。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${exist}  IsAnyElemExisting  button[id='a']",
        "output": "这段代码主要作用是：首先通过`IsAnyElemExisting`关键字检查id为'a'的button元素是否存在，然后将结果赋值给变量`${exist}`。\n\n其中用到了以下关键字：`IsAnyElemExisting`。\n\n这些关键字的用法是：`IsAnyElemExisting`关键字用于检查页面上是否存在指定元素，这里是检查页面上是否存在id为'a'的button元素。如果存在则返回True，不存在则返回False。返回的结果被赋值给了`${exist}`变量。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找id为x的button元素\n${button}  FindElem | button[id=x]\n\n# 查找该元素的一个name为y的祖先元素\n${parent}  FindParentElem | ${button} | [name=y]",
        "output": "这段代码主要作用是：首先定位到页面上id为x的button元素，接着找到它的一个祖先元素，这个祖先元素的name属性值为y。\n\n其中用到了以下关键字：\n1. FindElem：查找/定位/获取jquery选择器表示的元素。\n2. FindParentElem：查找某个元素的父元素，或者祖先元素。\n\n这些关键字的用法是：\n1. FindElem关键字后面接的是jquery选择器，这里选择器为id为x的button元素。所以这条语句查找的是页面上id为x的button元素。\n2. FindParentElem关键字用于查找某个元素的父元素或祖先元素，第一个参数是要查找父元素的元素，第二个参数是父元素的选择器。所以这条语句查找的是${button}元素的一个name为y的祖先元素。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${elem}  FindElem | div[class*='xxx']",
        "output": "这段代码主要作用是：在页面上找到一个包含指定类名的div元素，并将找到的元素赋值给变量elem。\n\n其中用到了以下关键字：FindElem。\n\n这些关键字的用法是：FindElem关键字用于查找页面上满足jquery选择器条件的元素，本例中查找class属性包含'xxx'的div元素。将找到的元素赋值给变量elem。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "用户登录\n    [Arguments]  ${user}  ${password}  ${token}\n    SetField | 用户名 | ${user}\n    SetField | 密码 | ${password}\n    Click | 登录\n    ${exist}  IsExisting | welcome\n    ${success} =  Set Variable If  ${exist}  True  False\n    [Return]  ${success}",
        "output": "这段代码主要作用是：实现用户的登录操作，具体步骤为填写用户名和密码，点击登录按钮，然后检查登录是否成功（根据是否出现\"welcome\"文字判断），如果登录成功返回True，否则返回False。\n\n其中用到了以下关键字：SetField、Click、IsExisting、Set Variable If和[Return]。\n\n这些关键字的用法是：\n- SetField关键字：用于填入页面字段关联的控件区域的值，这里用于填写登录的用户名和密码。\n- Click关键字：用于点击页面上的特定文本，这里用于点击登录按钮。\n- IsExisting关键字：用于检查某个元素是否存在，这里用于检查是否出现\"welcome\"，来判断是否登录成功。\n- Set Variable If关键字：用于设置变量的值，这里用于根据是否登录成功来设置变量${success}的值。\n- [Return]关键字：用于定义测试用例的返回值，这里用于返回登录是否成功的结果。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ToNewWindow",
        "output": "这段代码主要作用是：切换至新打开的窗口。\n\n其中用到了以下关键字：ToNewWindow。\n\n这个关键字的用法是：在打开多个浏览器窗口或标签页的情况下，可以通过使用此关键字将焦点切换到上新打开的窗口或标签页。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Click | 确定 | idx=1",
        "output": "这段代码的主要作用是：在页面上点击第二个\"确定\"按钮。\n\n其中用到了以下关键字：\"Click\"。\n\n\"Click\"关键字的用法是：标识在页面上要点击的按钮或链接的文本，idx是按钮或链接在一系列同名元素中的位置（从0开始计数，所以idx=1代表点击第二个元素）。所以Click | 确定 | idx=1表示点击页面上第二个显示为\"确定\"的按钮或链接。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 搜索框 | 李四",
        "output": "这段代码主要作用是：在搜索框中填入“李四”。\n\n其中用到了以下关键字：SetField。\n\n这个关键字的用法是：操作页面字段关联的控件区域，填入一个或多个值到控件中。在这段代码中，其将搜索框中填入了“李四”。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "OpenUrl | ${TESTER_MAIN_PAGE}",
        "output": "这段代码主要作用是：打开测试主页面。\n\n其中用到了以下关键字：OpenUrl。\n\n这个关键字的用法是：OpenUrl关键字用来打开指定的URL。在这个例子中，它打开的URL是一个变量\"${TESTER_MAIN_PAGE}\"，这个变量在其他地方被定义，并被赋予了一个实际的URL地址。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 版本类型 | 实验组",
        "output": "这段代码主要作用是：设置版本类型为实验组。\n其中用到了以下关键字：SetField。\n这个关键字的用法是：操作页面字段name关联的控件区域，依次填入一个或多个值到控件中。在这里，字段名为“版本类型”，要填入的值为“实验组”。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "用户登录\n    [Arguments]  ${user}=${ADMIN_ACCOUNT}  ${password}=${ADMIN_PASSWORD}\n    SetField  |  用户名  |  ${user}\n    SetField  |  密码  |  ${password}\n    Click  |  登录\n    WaitText  |  个人中心",
        "output": "这段代码主要作用是：进行用户登录操作。包括填写用户名和密码，点击登录按钮，并等待个人中心的文本出现，以确认登录成功。\n\n其中用到了以下关键字：SetField、Click、WaitText。\n\n这些关键字的用法是：\n- SetField：操作页面字段name关联的控件区域，依次填入一个或多个值到控件中。在这段代码中，分别对应用户名和密码的输入字段，将给定的用户信息填入。\n- Click：点击页面上的文本。在这段代码中，点击登录按钮。\n- WaitText：等待页面上出现args中的任一文本。在这段代码中，等待页面上出现“个人中心”这个文本，以确认登录操作已经成功。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "打开浏览器\n    [Arguments]  ${url}=${MAIN_PAGE}\n    OpenUrl | ${url}\n    WaitLoading | timeout=60",
        "output": "这段代码主要作用是：打开指定的网页链接并等待其加载完成。其中，脚本接受一个可选的参数URL，默认值为常量MAIN_PAGE。\n\n其中用到了以下关键字：OpenUrl，WaitLoading。\n\n这些关键字的用法是：\n- OpenUrl | ${url}：使用浏览器打开指定的url。\n- WaitLoading | timeout=60：等待页面加载完成，最多等待时间为60秒。如果在指定时间内页面没有加载完成，则会抛出超时异常。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickMenu | 分析工具 | 事件分析",
        "output": "这段代码主要作用是：在分析工具菜单中，选择并点击事件分析子菜单。\n\n其中用到了以下关键字：ClickMenu\n\n这个关键字的用法是：依次点击菜单，例如这里会首先点击分析工具菜单，然后在弹出的二级菜单中点击事件分析。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Click | 登录 | idx=-1",
        "output": "这段代码主要作用是：在页面上查找到最后一个名为\"登录\"的元素并执行点击操作。\n\n其中用到了以下关键字：Click。\n\n这个关键字的用法是：Click | txt | idx=0 | exclude= | base= | timeout=。其中，txt是你想要点击的文本，idx表示相同txt中的第几个（0表示第一个，-1表示最后一个），exclude是你想排除的文本，base是基准元素（特殊值POPUP表示弹出层/弹窗），timeout是超时时间。在这段代码中，txt被设置为\"登录\"，idx被设置为-1，表示点击最后一个名为\"登录\"的元素，其他参数未设置。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置事件指标\n    [Arguments]  ${name}  @{config}\n    SetField  |  ${name}  |  @{config}",
        "output": "写一个设置事件指标关键字，接受 ${name}, @{config} 参数，分别表示事件名称和事件配置，关键字会向事件名字段中输入给定的一个或多个事件参数"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "进入高级分析子页面\n    [Arguments]  ${menu}\n    OpenUrl  ${MAIN_PAGE}/datafinder/project/${PROJECT_ID}/event-analysis\n    WaitLoading\n    ClickMenu  ${menu}",
        "output": "这段代码主要作用是：进入高级分析子页面。\n\n其中用到了以下关键字：OpenUrl，WaitLoading，ClickMenu。\n\n这些关键字的用法是：\n- OpenUrl：使用指定的URL打开一个网页，本代码中的URL是主页面的URL加上/datafinder/project/${PROJECT_ID}/event-analysis，PROJECT_ID是需要传入的参数，代表项目ID。\n- WaitLoading：等待页面加载完成，等待时间默认为30秒，如果在30秒内页面加载完成则继续执行下一步，否则报错。\n- ClickMenu：点击菜单，本代码中传入的参数是${menu}，代表要点击的菜单名称。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置属性筛选条件\n    [Arguments]  ${line_no}  @{config}\n    ${exist}  IsAnyTextExisting  ${line_no}\n    IF  not $exist\n        FOR   ${i}  IN RANGE  1  10\n            Ui Click  对照组\n            ${exist}  IsAnyTextExisting  ${line_no}\n            IF   $exist\n                Exit For Loop\n            END\n        END\n    END\n    SetField  ${line_no}  @{config}",
        "output": "这段代码主要作用是：设置属性筛选条件，首先通过IsAnyTextExisting判断文本${line_no}是否存在，如果不存在，会点击“对照组”按钮，再次判断文本${line_no}是否存在，如果存在就结束循环。最后通过SetField设置属性筛选条件。\n\n其中用到了以下关键字：IsAnyTextExisting，SetField，FOR，IN RANGE，Exit For Loop\n\n这些关键字的用法是：\n- IsAnyTextExisting：用来判断给定的参数中的任何文本是否存在。\n- SetField：设置给定名称的字段的值。例如SetField | 姓名 | 张三，将姓名字段设置为张三。\n- FOR 和 IN RANGE：在RobotFramework中用来进行循环操作。例如FOR ${i} IN RANGE 1 10，表示${i}从1到10的范围内进行循环。\n- Exit For Loop：在满足某个条件时，提前退出当前的循环。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${exist}  IsElemExisting | div.InlineFirstItem__outer-container__TQuRy:eq(1)",
        "output": "这段代码的主要作用是：检查页面上第二个具有\"InlineFirstItem__outer-container__TQuRy\"类名的div元素是否存在，并且将结果赋值给变量\"${exist}\"。\n\n其中用到了以下关键字：\"IsElemExisting\"。\n\n这个关键字的用法是：IsElemExisting | selector。selector是用于查找元素的jquery选择器。如果元素存在，返回True，否则返回False。在这个例子中，选择器是div.InlineFirstItem__outer-container__TQuRy:eq(1)，表示寻找页面上第二个具有\"InlineFirstItem__outer-container__TQuRy\"类名的div元素。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "FillArea | div[class=\"InlineFirstItem__outer-container__TQuRy\"]:eq(${line_no}-1) | @{config}",
        "output": "这段代码主要作用是：在页面上的第line_no个class为\"InlineFirstItem__outer-container__TQuRy\"的div区域内，依次填入config列表中给定的一个或多个值。\n\n其中用到了以下关键字：FillArea\n\n这些关键字的用法是：FillArea关键字用于操作页面上jquery选择器代表的控件区域，依次填入一个或多个值到控件中。在这个例子中，选择器为\"div[class=\"InlineFirstItem__outer-container__TQuRy\"]:eq(${line_no}-1)\"，表示第line_no个class为\"InlineFirstItem__outer-container__TQuRy\"的div元素，然后将config列表中的值依次填入该元素中。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "@{config}  Create List  事件属性  国家  =  中国",
        "output": "这段代码主要作用是：创建一个名为config的列表，该列表包含以下元素：\"事件属性\"、\"国家\"、\"=\"，和\"中国\"。\n\n其中用到了以下关键字：Create List。\n\n这个关键字的用法是：Create List 是RF的内置关键字，用于创建一个列表。在这个关键字后面的各个参数都将被视为列表的元素。在这个示例中，\"事件属性\"、\"国家\"、\"=\"，和\"中国\"都是这个列表的元素。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${index}    Evaluate    ${line_no} - 1",
        "output": "这段代码主要作用是：计算行号减一的值，并将结果赋值给变量`${index}`。\n\n其中用到了以下关键字：`Evaluate`\n\n这个关键字的用法是：RobotFramework中的`Evaluate`是一个执行Python代码的内建关键字，它允许测试人员直接在测试脚本中嵌入并执行Python代码，返回结果可以赋值给变量。在这段代码中，`${line_no} - 1`这段Python代码被执行，并把结果赋值给`${index}`。`Evaluate`关键字可以使用在任何需要执行复杂计算或调用Python内建函数的场景。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${exist}  IsAnyTextExisting  帮助中心  timeout=3\nIF   $exist\n   ClickElem svg[class*\\=close]\nEND",
        "output": "这段代码主要作用是：检查当前页面中是否存在\"帮助中心\"文本，如果存在的话，则点击页面上的关闭按钮（该按钮用svg图标并包含“close”类）。\n\n其中用到了以下关键字：\"IsAnyTextExisting\"、\"IF\"、\"ClickElem\"和\"END\"。\n\n这些关键字的用法是：\n- \"IsAnyTextExisting\": 用于检查指定的文本是否存在于当前页面中。如果存在，则返回真（True），否则返回假（False）。在这里，该关键字主要用于检查\"帮助中心\"文本是否存在并将其结果保存在\"exist\"变量中，等待后续判断和操作。\"timeout\"参数指示等待时间为3秒。\n\n- \"IF\" 和 \"END\": \"IF\" 和 \"END\" 关键字用于构建条件判断结构，在\"IF\"与\"END\"之间的语句会在满足\"IF\"后的条件时执行。在这里，如果\"exist\"变量为真，即\"帮助中心\"文本存在，则执行\"IF\"与\"END\"之间的\"ClickElem\"关键字。\n\n- \"ClickElem\": 用于点击满足给定选择器条件的元素。在这里，选择器\"svg[class*\\=close]\"用于选取页面上类名中包含 \"close\" 的 svg 图标元素（即关闭按钮），然后模拟用户点击行为去关闭可能存在的帮助中心。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "PageDown  3",
        "output": "这段代码的主要作用是：模拟键盘按下PageDown键3次，即将页面向下滚动3次。\n\n其中用到了以下关键字：PageDown\n\n这个关键字的用法是：PageDown | num ， num是整数，表示需要按下PageDown键的次数。例如，PageDown | 3表示按下PageDown键3次。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "CheckRowHas | 1 | 应用启动 | 总次数 | tbl=详细数据",
        "output": "这段代码主要作用是：检查表格“详细数据”中的第一行是否同时包含“应用启动”和“总次数”这两个文本。\n\n其中用到了以下关键字：CheckRowHas\n\n这个关键字的用法是：检查指定的表格行是否包含给定的一个或多个文本，用法是 CheckRowHas | row_name_or_id | txt1 | txt2 | ... | tbl= | base=。参数中 row_name_or_id 表示表格行中的文本或行号，tbl 是表格名，base 是基准元素。这个关键字会检查该行是否同时包含所有给定的文本。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickElem  button:contains(登录)",
        "output": "这段代码主要作用是：点击页面上包含\"登录\"文本的按钮。\n\n其中用到了以下关键字：'ClickElem'。\n\n这个关键字的用法是：'ClickElem'是用来点击页面上jquery选择器表示的元素。在这里，选择器是'button:contains(登录)'，这表示选择页面上包含\"登录\"文字的按钮。所以整个命令的操作就是点击页面上包含\"登录\"文字的按钮。\n"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "FillArea | ${elem} | @{config}",
        "output": "这段代码主要作用是：在指定的元素区域内填入一个或多个值。\n其中用到了以下关键字：FillArea。\n这个关键字的用法是：操作页面上 jquery 选择器代表的控件区域，依次填入一个或多个值到控件中，config 可为特殊值 OPTIONS_i，表示选中第 i 个选项，i 从 1 开始。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | A | appid | 总人数",
        "output": "这段代码主要作用是：在页面字段A上设置或输入值 \"appid\" 和 \"总人数\"。\n\n其中用到了以下关键字：SetField\n\n这个关键字的用法是：操作页面字段name关联的控件区域，依次填入一个或多个值到控件中。在这里，name是\"A\"，需要填入的值分别为\"appid\"和\"总人数\"。这个操作默认会找到页面上第一个名为\"A\"的字段进行操作，除非指定idx参数。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${title}  Get Title",
        "output": "这段代码的主要作用是：获取当前活动窗口的标题。\n\n其中用到了以下关键字：\n- Get Title\n\n这个关键字的用法是：返回当前活动窗口的标题。这里把获取到的标题储存在变量 ${title} 中，后续可以使用这个变量进行其他操作"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 支持名称 | ${param_name_1}",
        "output": "这段代码主要作用是：为网页上的“支持名称”字段设置一个值，该值来自于一个名为param_name_1的变量。\n\n其中用到了以下关键字：SetField\n\n这个关键字的用法是：SetField 是一个针对网页的输入框字段进行值设定的操作关键字。它首先接受一个参数，该参数是网页字段的显示名称；然后接受一个或多个值作为参数，会依次将这些值填入到网页的输入框中。SetField 关键字还接受其他几个可选参数：idx表示第几个name字段（0:第一个，-1:最后一个）；enter表示是否在完成输入后自动按回车键，另外两个参数base和near都是用来表示操作的目标字段相对网页的位置。在这段代码中，SetField 仅用到了基础的设值功能，将变量param_name_1的值填入到名为“支持名称”的字段中。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 转化窗口期 | 自定义时间 | 20 | 天",
        "output": "这段代码主要作用是：在名为“转化窗口期”的字段下，设置自定义时间为20天。\n\n其中用到了以下关键字：SetField\n\n这个关键字的用法是：操作页面字段name关联的控件区域，依次填入一个或多个值到控件中。在本段代码中，字段名称为\"转化窗口期\"，需要填入的值为\"自定义时间\"、\"20\"、\"天\"，因此，这段代码的意义是设置转化窗口期为自定义的20天。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | A | 应用启动 | 总次数",
        "output": "这段代码主要作用是：在名称为“A”的字段中填入两个值\"应用启动\"和\"总次数\"。\n\n其中用到了以下关键字：SetField。\n\n这个关键字的用法是：操作页面字段name关联的控件区域，依次填入一个或多个值到控件中。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "FillRow | 1 | 1 | 2 | 3 | 4 | 5 | tbl=1",
        "output": "这段代码主要作用是：在页面的标识为1的表格的第一行中，依次填入数据1, 2, 3, 4, 5。 `FillRow` 关键字是用来批量填充表格行的数据。\n\n其中用到了以下关键字： `FillRow`\n\n这个关键字的用法是：`FillRow`关键字后面跟着的是要填入表格的数据，在这个例子中，它们被定义为1，2，3，4，5。然后，`tbl=1` 指定了要填充的表格的标识。表格的行索引通过第一个参数（在这个例子中是1）来指定。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "FillRow | 1 | 1 | 2 | 3 | 4 | 5 | tbl=10",
        "output": "这段代码主要作用是：调用关键字\"FillRow\"来填充表格的一行，填充的值为1，2，3，4，5，填充的是表格的第1行，表格的标识为10。\n\n其中用到了以下关键字：\"FillRow\"\n\n这个关键字的用法是：FillRow | row | value1 | value2 | ... | tbl=tableId，功能是填充表格中的一行，row为要填充的行数，value1, value2,...为要填充的值，tbl为表格的标识。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Should Not Be Equal  ${A}  ${B}",
        "output": "这段代码主要作用是：判断两个变量${A}和${B}的值是否不相等。\n其中用到了以下关键字：Should Not Be Equal。\n这个关键字的用法是：Should Not Be Equal是RobotFramework内置的关键字，用于断言两个参数是否不相等。如果两个参数相等，则会报错，反之则继续执行。在这个例子中，关键字在执行时会将${A}和${B}的值进行比较，如果两者的值相等则测试失败，如果两者的值不相等则测试通过。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Should Not Be Empty  ${A}",
        "output": "这段代码主要作用是：校验变量A不为空。\n\n其中用到了以下关键字：Should Not Be Empty。\n\n这些关键字的用法是：Should Not Be Empty 是RF框架中Builtin库提供的一个校验关键字，它用于校验输入的参数（这里是变量A），不应该为空。如果为空，则测试用例失败。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Should Be True  ${A} ",
        "output": "这段代码主要作用是：判断变量A的值是否为True。\n\n其中用到了以下关键字：Should Be True。\n\n这些关键字的用法是：Should Be True关键字用于判断给定的表达式结果是否为True，如果不为True，则测试失败。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${A}   Evaluate  ${xx} - 1",
        "output": "这段代码主要作用是：计算变量xx减1的结果，并将结果赋值给变量A。\n其中用到了以下关键字：Evaluate。\n这些关键字的用法是：使用Evaluate关键字在Python环境中执行表达式，并将执行结果赋值给指定的变量。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "FOR  ${i}  IN RANGE  3\n    Log  Hello\nEND",
        "output": "这段代码主要作用是：在一个循环中打印日志信息\"Hello\"三次。\n\n其中用到了以下关键字：\"FOR\"、\"IN RANGE\"、\"Log\" 和 \"END\"。\n\n这些关键字的用法是：\n- \"FOR\"：Robot Framework中的循环开始关键字，配合\"END\"使用，用于控制循环的开始和结束。\n- \"IN RANGE\"：配合\"FOR\"关键字，定义循环的次数范围，这里是3，表示循环3次。\n- \"Log\"：Robot Framework中的日志打印关键字，用于记录日志信息，这里打印的信息是\"Hello\"。\n- \"END\"：Robot Framework中的循环结束关键字，配合\"FOR\"使用，用于控制循环的开始和结束。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "填写参数\n    [Arguments]  @{paramList}\n    # 获取id为params的div的class为arco-card-body的后代元素的直接div后代元素\n    ${elem}  FindElem | div[id=params] .arco-card-body > div\n    # 获取参数列表长度\n    ${length} =  Get Length  ${paramList}\n    # 循环读取参数列表\n    FOR  ${i}  IN RANGE  ${length}\n        # 获取参数列表中的参数\n        ${param} =  Get From List  ${paramList}  ${i}\n        # 使用参数填写到对应的元素中\n        FillArea | ${elem}:eq(${i}) | ${param}\n    END",
        "output": "这段代码主要作用是：在id为params的div中获取class为arco-card-body的后代元素的直接div后代元素，并通过参数列表中的参数将其填充。\n\n其中用到了以下关键字：\"FindElem\", \"Get Length\", \"FOR IN RANGE\", \"Get From List\" 和 \"FillArea\"。\n\n这些关键字的用法是：\n- \"FindElem | selector\" 是用来查找满足给定jquery选择器的元素。\n- \"Get Length | list\" 是获取列表的长度。\n- \"FOR ${i} IN RANGE ${length}\" 是一个循环，其中 ${i} 是循环变量， ${length} 是循环执行的次数。\n- \"Get From List | list | index\" 是从指定列表中获取索引处的元素。\n- \"FillArea | selector | @args\" 是用来在满足给定jquery选择器的元素中填入一个或多个值。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "填写参数\n    [Arguments]  @{paramList}\n    ${index}=  Set Variable  0\n    FOR  ${param}  IN  @{paramList}\n        ${exist}=  IsAnyElemExisting | #params .arco-card-body > div:eq(${index})\n        IF  ${exist}\n            FillArea | #params .arco-card-body > div:eq(${index}) | ${param}\n        ELSE\n            Click | 增加参数\n            Sleep  1s\n            FillArea | #params .arco-card-body > div:eq(${index}) | ${param}\n        END\n        ${index}=  Evaluate  ${index} + 1\n    END",
        "output": "这段代码主要作用是：填写参数列表中的参数值。\n\n其中用到了以下关键字：Set Variable, FOR, IsAnyElemExisting, IF, FillArea, ELSE, Click, Sleep, Evaluate, END。\n\n这些关键字的用法是：\n- Set Variable：设置变量的值；\n- FOR：遍历参数列表；\n- IsAnyElemExisting：判断某个元素是否存在；\n- IF：条件判断语句；\n- FillArea：在指定的元素区域填写一个或多个值；\n- ELSE：条件判断语句中的分支；\n- Click：点击指定文本；\n- Sleep：等待指定时间；\n- Evaluate：执行Python代码；\n- END：条件判断语句的结束。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickAny | 确认 | 下一步",
        "output": "这段代码主要作用是：点击“确认”或“下一步”其中任一按钮。\n\n其中用到了以下关键字：ClickAny\n\n这个关键字的用法是：点击给定的一个或多个文本代表的元素中的任一元素。在这里，它尝试点击“确认”或“下一步”其中的任一按钮。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${elem}  FindByText | 确定 | 下一步",
        "output": "这段代码主要作用是：查找文本为 \"确定\" 或 \"下一步\" 的元素，并将元素存储到变量 ${elem} 中。\n其中用到了以下关键字：FindByText\n这些关键字的用法是：\n- FindByText | 确定 | 下一步：根据给定的文本 \"确定\" 或 \"下一步\" 查找页面中相应的元素，并将找到的元素赋值给变量 ${elem}。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${elem}  FindElem | button:contains(确定),button:contains(下一步)",
        "output": "这段代码的主要作用是：查找包含文字“确定”或者“下一步”的按钮元素，并将找到的元素赋值给变量\"${elem}\"。\n\n其中用到了以下关键字：FindElem。\n\n这个关键字的用法是：\nFindElem | selector | base= ：在页面中查找jquery选择器所表示的元素，若找到，则赋值给指定的变量以供后续步骤中使用。其中selector对应页面元素的jquery选择器，base是基准元素（特殊值POPUP表示弹出层/弹窗）。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取当前URL\n${url}  GetCurrentUrl\n\n# 等待URL包含/home\nWaitURLContainsAll  | /home",
        "output": "这段代码主要作用是：首先获取当前页面的URL，然后等待URL中包含\"/home\"字样。\n\n其中用到了以下关键字：GetCurrentUrl、WaitURLContainsAll。\n\n这些关键字的用法是：\n- GetCurrentUrl：获取当前页面的URL。\n- WaitURLContainsAll：等待页面URL同时包含给定的所有文本。这里等待页面的URL中包含\"/home\"。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${exist}  IsURLContains | /home\nShould Be True  ${exist}",
        "output": "这段代码主要作用是：判断当前页面的URL是否包含'/home'。\n\n其中用到了以下关键字：IsURLContains 和 Should Be True。\n\n这些关键字的用法是：\n- IsURLContains：用于判断当前页面的URL是否包含指定的字符串。在这里，我们检查URL中是否包含'/home'。\n- Should Be True：用于断言给定的表达式的值为True。在这里，我们断言之前获取的判断结果（${exist}）为True，说明URL确实包含'/home'。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "CheckHasText | hell",
        "output": "这段代码主要作用是：检查页面上是否包含文本\"hell\"。\n\n其中用到了以下关键字：CheckHasText。\n\n这些关键字的用法是：CheckHasText用于校验页面同时包含给定的一个或多个文本。在这个示例中，它用于检查页面是否包含文本\"hell\"。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "火山登录\n    [Arguments]  ${user}=${ADMIN_ACCOUNT}  ${password}=${ADMIN_PASSWORD}  ${sub_account}=${SUB_ACCOUNT}\n    WaitLoading\n    IF  \"${sub_account}\"\n        Click  子用户登录\n        SetField  主账号用户名  ${user}\n        SetField  子用户用户名  ${sub_account}\n    ELSE\n        SetField  用户名  ${user}\n    END\n    SetField  密码  ${password}\n    Click  登录\n    WaitText  快捷导航",
        "output": "这段代码主要作用是：实现了火山的登录功能，包括主账号登录和子用户登录两种情况。主账号登录时需要输入的是用户名和密码，子用户登录时需要输入的是主账号用户名、子用户用户名和密码，随后点击登录按钮，等待页面出现\"快捷导航\"字样，表示登录成功。\n\n其中用到了以下关键字：WaitLoading，Click，SetField，WaitText，IF，ELSE，END\n\n这些关键字的用法是：\n- `WaitLoading`: 等待页面加载完成\n- `Click`: 点击页面上的某个元素，通过文本来定位元素，例如 Click  登录，就是点击页面上文本为'登录'的元素\n- `SetField`: 设置页面字段的值，第一个参数是字段的名字，第二个参数是要设置的值，例如 SetField  密码  ${password}，就是将密码字段设置为${password}变量的值\n- `WaitText`: 等待页面出现某个文本，例如 WaitText 快捷导航，就是等待页面出现'快捷导航'字样\n- `IF/ELSE/END`: 用来做条件判断和流程控制，例如这里是根据${sub_account}变量是否为空来判断是进行主账号登录还是子用户登录"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "IF  ${x}\n    Click  确定 \nEND",
        "output": "这段代码的主要作用是：如果变量${x}为真，则点击确定按钮。\n\n其中用到了以下关键字：\"IF\"，\"Click\" 和 \"END\"。\n\n这些关键字的用法是：\n- \"IF\"关键字用于判断条件，如果条件满足，则执行IF后面的语句块。\n- \"Click\"关键字用于点击指定文本，如按钮或链接等。\n- \"END\"关键字用于表示条件判断语句的结束。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断变量x是否存在\n${exist}  IsVarExisting | x\n\n# 如果存在变量 ${x}，就点击确定\nIF  ${exist}\n    Click  确定\nEND",
        "output": "这段代码主要作用是：\n首先，检查变量x是否存在，然后如果存在这个变量，就点击确定按钮。\n\n其中用到了以下关键字：\n- IsVarExisting\n- IF\n- Click\n\n这些关键字的用法是：\n- IsVarExisting：这个关键字用于判断名为x的变量是否存在。如果存在，返回True，否则，返回值为False。\n- IF：这是Robot Framework的条件语句关键字。如果IF后面的表达式为真，就会执行IF和END之间的代码。\n- Click：这个关键字用于点击页面上的特定文本。在这里，如果变量存在，就会点击页面上的“确定”按钮。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面上是否存在帮助中心\n${exist}  IsExisting | 帮助中心\nIF  ${exist}\n    # 如果存在就点击最后一个叉号\n    ClickIcon | close | idx=-1\nEND",
        "output": "这段代码主要作用是：判断页面上是否存在“帮助中心”文本，如果存在则点击最后一个关闭图标。\n\n其中用到了以下关键字：IsExisting, ClickIcon 和 IF/ELSE 判断语句。\n\n这些关键字的用法是：\n- IsExisting：用于判断页面上是否存在给定的文本，如果存在返回True，否则返回False。\n- ClickIcon：用于点击指定名称的图标，可以通过idx参数指定是第几个或最后一个图标。\n- IF/ELSE：Robot Framework提供的条件判断语句，根据条件选择性地执行关键字。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "生成报告\n    [Arguments]  ${reportName}  ${content}\n    SetField  ${reportName}  ${content}",
        "output": "这段代码的主要作用是：生成一个带有内容的报告。\n\n其中用到了以下关键字：SetField\n\n这个关键字的用法是：操作页面字段name关联的控件区域，填入一个或多个值到控件中。在这段代码中，字段名为`${reportName}`，填入的值为`${content}`，它表示在对应名字的字段里填入相应的内容。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置属性筛选条件\n    [Arguments]  ${line_no}  @{config}\n    ${counter}  Set Variable  3\n    FOR  ${i}  IN RANGE  ${counter}\n        ${exist}  IsAnyElemExisting | div[class*=InlineFirstItem__outer-container__TQuRy]:eq(${line_no - 1})\n        IF  ${exist}\n            Exit For Loop\n        ELSE\n            Click  对照组\n            Sleep  1s\n        END\n    END\n    SetField  ${line_no}  @{config}",
        "output": "这段代码主要作用是：设置属性筛选条件。\n其中用到了以下关键字：Set Variable, FOR, IN RANGE, IsAnyElemExisting, IF, ELSE, Exit For Loop, END, Click, Sleep, SetField。\n这些关键字的用法是：\n- Set Variable：设置变量的值。\n- FOR：执行一个循环，常与 IN RANGE 一起使用。\n- IN RANGE：定义循环的范围，从一个整数开始到另一个整数结束。\n- IsAnyElemExisting：检查是否存在符合指定选择器的元素。\n- IF, ELSE, END：表示条件控制结构，根据条件执行相应的代码块。\n- Exit For Loop：退出当前循环。\n- Click：点击指定文本。\n- Sleep：等待指定时间。\n- SetField：设置指定名称的字段的值。\n\n代码逻辑如下：\n1. 设置变量 counter 的值为 3。\n2. 遍历一个长度为 3 的整数范围。\n3. 检查指定选择器的元素是否存在。\n4. 如果存在，则退出循环，否则点击\"对照组\"并等待1秒。\n5. 设置属性筛选条件，传入参数 line_no 和 config。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${exist}  IsExisting | 查询\nIF  ${exist}\n    Click  | 查询\nEND",
        "output": "这段代码主要作用是：检查\"查询\"是否存在，如果存在就执行点击操作。\n\n其中用到了以下关键字：\"IsExisting\"，\"IF\"，\"Click\" 和 \"END\"。\n\n这些关键字的用法是：\n- \"IsExisting\"：检查指定的元素（在这里是\"查询\"）是否存在，返回布尔值。\n- \"IF\"：根据条件（在这里是\"${exist}\"，代表\"IsExisting | 查询\"的返回值）来决定是否执行子句中的代码。\n- \"Click\"：点击指定的元素（在这里是\"查询\"）。\n- \"END\"：表示if语句的结束。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断查询的 button 元素是否存在\n${exist}  IsElemExisting | button:contains(查询)\n# 如果存在就点击\nIF  ${exist}\n    ClickElem  | button:contains(查询)\nEND",
        "output": "这段代码主要作用是：判断页面中是否存在查询按钮，如果存在就点击该按钮。\n\n其中用到了以下关键字：\"IsElemExisting\", \"ClickElem\", \"IF\" 和 \"END\"。\n\n这些关键字的用法是：\n- \"IsElemExisting\"：用于判断给定的jquery选择器表示的元素是否存在。在这里，它判断是否存在文本为\"查询\"的按钮元素。\n- \"ClickElem\"：用于点击jquery选择器表示的元素。在这里，它用于点击文本为\"查询\"的按钮。\n- \"IF\"和\"END\"：RobotFramework的条件控制语句，用于执行条件判断和相应的操作。在这里，它用于判断如果查询按钮存在，则点击该按钮。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "CheckHasText | Libra-功能模块管理",
        "output": "这段代码主要作用是：检查网页是否包含文本\"Libra-功能模块管理\"。\n\n其中用到了以下关键字：CheckHasText。\n\n这个关键字的用法是：校验页面同时包含给定的文本，这里是\"Libra-功能模块管理\"。如果页面上存在这个文本，测试通过，否则测试失败。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "CheckHasText | 新增实验 | 调参实验",
        "output": "这段代码主要作用是：检查页面上是否同时包含\"新增实验\"和\"调参实验\"两个文本。\n\n其中用到了以下关键字：CheckHasText。\n\n这个关键字的用法是：校验页面同时包含文本 txt1，txt2，... ，在这里，txt1是\"新增实验\"，txt2是\"调参实验\"。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找包含\"close\"的svg元素\n${selector}  Set Variable  |  svg:contains(close)\n# 获取元素数量\n${cnt}  GetElemCount  |  ${selector}\n# 打印元素数量\nLog  |  ${cnt}",
        "output": "这段代码主要作用是查找页面上包含\"close\"文本的svg元素，获取这些元素的数量，并打印出数量。\n\n其中用到了以下关键字：\n- Set Variable：Robot Framework自带的设置变量关键字，用于创建一个新的变量并赋值。\n- GetElemCount：自定义关键字，用于获取页面上特定jQuery选择器对应的元素数量。\n- Log：Robot Framework自带的日志打印关键字，用于将信息打印到日志中。\n\n这些关键字的用法是：\n- Set Variable用法是 \"变量值 | Set Variable  |  变量名\"，作用是设置一个新的变量，将它的值设置为指定的变量值。\n- GetElemCount的用法是 \"GetElemCount  |  jQuery选择器\"，作用是获取页面上jQuery选择器所选择的元素数量。\n- Log的用法是 \"Log | 需要打印的信息\"，作用是将指定的信息打印到日志中。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "PrintElemRect | ${elem}",
        "output": "这段代码主要作用是：打印出指定元素 ${elem} 的矩形信息，如其位置、宽度和高度等。\n\n其中用到的关键字是：PrintElemRect\n\nPrintElemRect 的用法是：获取指定元素的矩形信息（例如，位置、宽度和高度等），并将这些信息打印出来。其中，${elem} 表示的是按照jQuery规则指定的元素。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 页面向下滚动\nPageDown\n\n# 校验详细数据表格中第一行包含 \"A1 页面访问（总次数）\"、\"总次数\"、\"中国\"\nCheckRowHas | 1 | A1 页面访问（总次数） | 总次数 | 中国 | tbl=详细数据",
        "output": "这段代码主要作用是：首先将页面向下滚动，然后在名为“详细数据”的表格中校验第一行是否包含\"A1 页面访问（总次数）\"， \"总次数\"和\"中国\"这几个字段。\n\n其中用到了以下关键字：PageDown, CheckRowHas\n\n这些关键字的用法是：\n1. PageDown：这个指令可以让页面向下滚动，无需额外参数。\n2. CheckRowHas：这个关键字用于检查指定表格的指定行是否含有某些文本。这里指定的表格是“详细数据”，指定的行是第一行，要检查的文本包括\"A1 页面访问（总次数）\"， \"总次数\"，\"中国\"。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "详细数据表格校验\n    [Arguments]  ${line_no}  @{args}\n    PageDown | 1\n    CheckRowHas | ${line_no} | @{args} | tbl=详细数据",
        "output": "这段代码主要作用是：校验详细数据表格中特定行包含给定的文本。\n\n其中用到了以下关键字：PageDown, CheckRowHas。\n\n这些关键字的用法是：\n- PageDown：将页面向下滚动指定的次数。\n- CheckRowHas：校验表格中指定行包含给定的文本。这里校验的是详细数据表中的${line_no}行，包含@{args}中的所有文本。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${elem}  FindByText | 项目接入测试实验- | test experiment for app access- | tag=div",
        "output": "这段代码主要作用是：根据文本\"项目接入测试实验-\"或者\"test experiment for app access-\"找到页面上标签为div的元素，并将该元素存储到变量\"${elem}\"中。\n\n其中用到了以下关键字：FindByText\n\n这个关键字的用法是：FindByText | txt1 | txt2 | ... | tag= | idx=0 | exclude= | base= | timeout= 。通过一个或多个文本在页面中查找一个元素，tag参数表示HTML标签，默认为任意标签，idx表示相同文本的第几个元素，0表示第一个，-1表示最后一个，exclude参数用于排除包含特定文本的元素，base参数表示基准元素，timeout参数表示查找元素的超时时间。在这段代码中，FindByText用了两个文本参数，并指定了tag为div，所以是在div标签的元素中查找含有这两个文本之一的元素。\n"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${elem}  FindElem | div:contains('项目接入测试实验-'),div:contains('test experiment for app access-')",
        "output": "这段代码主要作用是：搜索并找到包含 \"项目接入测试实验-\" 或 \"test experiment for app access-\" 文本的 div 元素，并将该元素存储在变量 \"${elem}\" 中。\n\n其中用到了以下关键字：FindElem\n\n这个关键字的用法是：FindElem | selector，它表示搜索并找到符合 jQuery 选择器 \"selector\" 的元素。在这段代码中，\"selector\" 是 \"div:contains('项目接入测试实验-'),div:contains('test experiment for app access-')\"，表示匹配包含 \"项目接入测试实验-\" 或 \"test experiment for app access-\" 文本的 div 元素。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "OpenUrl | abc | timeout=30",
        "output": "这段代码主要作用是：打开URL地址abc，最多等待30秒。\n\n其中用到了以下关键字：OpenUrl\n\n这个关键字的用法是：OpenUrl关键字用于打开指定的URL地址，后面可以跟随timeout参数，用于设置打开URL的最大等待时间。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | abc | ON",
        "output": "这段代码主要作用是：为名为 abc 的字段设置值为 \"ON\"。\n其中用到了以下关键字：SetField。\n这个关键字的用法是：操作页面字段name关联的控件区域，填入一个值到控件中（本例中为 \"ON\"）。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${button}  FindElem | button.arco-btn-text:has(svg.arco-icon-edit)",
        "output": "这句代码的作用是找到一个按钮元素，它的类名是 `arco-btn-text`，并且这个按钮里面包含了一个 `svg` 图标，这个图标的类名是 `arco-icon-edit`。\n\n其中用到了以下关键字：FindElem\n这个关键字的用法是：FindElem是RF中用于查找元素的关键字，这里他被用于定位一个具有\"class=arco-btn-text\"的按钮元素，该元素还含有\"svg.arco-icon-edit\"元素，找到的元素结果被赋值给变量${button}。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${elem}  FindByText  OK  下一步  idx=1  tag=span",
        "output": "这段代码主要作用是：查找/定位/获取页面上第二个文本为\"OK\"或\"下一步\"的span标签元素。\n\n其中用到了以下关键字：FindByText\n\n这些关键字的用法是：通过给定的一个或多个文本、HTML标签、索引值，来查找/定位/获取满足条件的元素。本例中，获取的是第二个（idx=1）文本为\"OK\"或\"下一步\"的span标签元素。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickElem | button[name='dd'],button[id='dd']",
        "output": "这段代码主要作用是：点击名字为'dd'的按钮或ID为'dd'的按钮。\n其中用到了以下关键字：ClickElem。\n这些关键字的用法是：点击通过给定的jquery选择器参数选中的元素，这里的选择器是\"button[name='dd'],button[id='dd']\"，表示名字为'dd'的按钮或ID为'dd'的按钮。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "校验非0数字个数\n    [Arguments]  @{str_list}  ${count}\n    ${non_zero_count}=  Set Variable  0\n    FOR  ${str}  IN  @{str_list}\n        ${str}=  Replace String  ${str}  ,  ${EMPTY}\n        ${is_num}=  Run Keyword And Return Status  Should Be True  ${str}.isnumeric()\n        IF  ${is_num}\n            ${num}=  Convert To Number  ${str}\n            IF  ${num} != 0\n                ${non_zero_count}=  Evaluate  ${non_zero_count} + 1\n            END\n        END\n    END\n    Should Be True  ${non_zero_count} >= ${count}  # 校验非0数字的数量是否大于等于 count",
        "output": "这段代码主要作用是：输入一个字符串列表和一个计数值，该脚本会校验字符串列表中非0数字的数量是否大于等于给定的计数值。\n\n其中用到了以下关键字：\n- Set Variable\n- FOR\n- Replace String\n- Run Keyword And Return Status\n- Should Be True\n- IF\n- Convert To Number\n- Evaluate\n- Should Be True\n\n这些关键字的用法是：\n- Set Variable：设置变量值。\n- FOR：用于循环执行一系列关键字。\n- Replace String：用于替换字符串中的一部分。\n- Run Keyword And Return Status：运行一个关键字，并返回其状态（成功或失败）。\n- Should Be True：校验一个表达式是否为真。\n- IF：用于条件判断。\n- Convert To Number：将字符串转换为数字。\n- Evaluate：计算一个表达式的值。\n- Should Be True：校验一个表达式是否为真。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "@{row_data}  GetRowValues | ${line_no}",
        "output": "这段代码的主要作用是：获取表格中指定行的数据，其中${line_no}是指定的行号。\n\n其中用到了以下关键字：GetRowValues\n\nGetRowValues关键字的用法是：它用于获取表格中指定行的数据，参数row_name/id表示指定的行。在这个示例中，参数是一个变量${line_no}，代表想要获取的行号。执行后，会将获取的值以列表的形式返回，这里将返回的数据赋值给了变量@{row_data}。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "校验表格行中非0数字个数\n    [Arguments]  ${line_no}  ${count}  ${table}=\n    @{vals}  GetRowValues | ${line_no} | tbl=${table}\n    ${num}  Set Variable  0\n    FOR  ${val}  IN  @{vals}\n        ${val}  Replace String  ${val}  ,  ''\n        ${is_num}  Run Keyword And Return Status  Should Be True  ${val}.isdigit()\n        IF  ${is_num} AND ${val} != 0\n            ${num}  Set Variable  ${num+1}\n        END\n    END\n    Should Be True  ${num} >= ${count}",
        "output": "这段代码主要作用是：校验表格行中非0数字的个数。它接受一行的行号，一个数字，和一个可选的表格名参数。首先，它获取指定行的所有值，并将每个值放入列表。然后，对列表中的每个值，它首先去除所有逗号，然后检查剩余的字符串是否是数字。如果是并且该数字不为0，它就计数。最后，检查非零数字的数量是否大于或等于给定的数字。\n\n其中用到了以下关键字：\n- GetRowValues：获取表格行的值。\n- Set Variable：设置变量。\n- FOR：循环操作，将列表中的元素依次赋值给循环变量，并执行循环体中的操作。\n- Replace String：替换字符串中的子字符串。\n- Run Keyword And Return Status：运行关键字并返回状态，主要用于判断关键字执行的成功与否。\n- Should Be True：确认表达式的结果是 True，否则发生失败。\n- IF-END：执行条件判断。\n\n这些关键字的用法是：\n- GetRowValues | ${line_no} | tbl=${table}：获取指定表格行的值。\n- Set Variable  0：将0赋值给变量。\n- FOR  ${val}  IN  @{vals}：遍历vals列表，将列表中的元素依次赋值给val并执行循环体中的操作。\n- Replace String  ${val}  ,  ''：将val中的所有逗号替换为空字符串。\n- Run Keyword And Return Status  Should Be True  ${val}.isdigit()：运行Should Be True关键字，判断val是否为数字，如果是则返回True，否则返回False。\n- IF  ${is_num} AND ${val} != 0：如果is_num为True且val不等于0，那么执行IF和END之间的代码块。\n- Should Be True  ${num} >= ${count}：确认num大于等于count，否则发生失败。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将 ${val} 中的 , 和 . 都替换成空字符串\n${result}   Evaluate  $val.replace(\",\", \"\").replace(\".\", \"\")",
        "output": "这段代码主要作用是：将变量`${val}`中的逗号`,`和点`.`都替换成空字符串，并将结果赋值给变量`${result}`。\n\n其中用到了以下关键字：`Evaluate`。\n\n这个关键字的用法是：执行Python代码，这里使用了字符串的`replace`方法进行替换操作。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "IF  ${is_num}\n    ${val} =  Evaluate  int(${val})\nEND",
        "output": "这段代码主要作用是：判断变量is_num的值，如果为真，则执行字符串转整数操作。\n\n其中用到了以下关键字：\n1. IF \n2. Evaluate\n3. END\n\n这些关键字的用法是：\n- IF：Robot Framework的内置关键字，用于做条件判断，类似于Python中的if语句。\n- Evaluate：Robot Framework的内置关键字，用于执行Python代码。这里用于将字符串类型的val转换为整数。\n- END：Robot Framework的内置关键字，用于结束IF语句块。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 访问页面\nOpenUrl | https://data.bytedance.net/libra/config-center/launch-config/2122051/7445393",
        "output": "这段代码主要作用是：访问特定的网页。\n\n其中用到了以下关键字：OpenUrl。\n\n这个关键字的用法是：OpenUrl 关键字用于直接通过链接访问特定的网页。在这个例子中，它用于访问\"https://data.bytedance.net/libra/config-center/launch-config/2122051/7445393\"这个网页。\n"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取 div.demo 元素的数量\n${elem_count}  GetElemCount | div.demo",
        "output": "这段代码主要作用是：获取页面上 class 为 demo 的 div 元素的数量。\n\n其中用到了以下关键字：GetElemCount。\n\n这个关键字的用法是：GetElemCount | selector，其中 selector 是页面上的 jquery 选择器，该关键字用于获取页面上由该选择器所选择的元素的数量。在这段代码中，选择器是 div.demo ，意思是选择 class 为 demo 的 div 元素。这段代码执行后，会将获取到的元素数赋值给变量 ${elem_count} 。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "FillArea | div.demo:eq(0) | 50",
        "output": "这段代码主要作用是：在页面上的`div`元素中的第一个`class`为`demo`的`div`元素中，填入值`50`。\n\n其中用到了以下关键字：`FillArea`。\n\n这个关键字的用法是：`FillArea | selector | @args`。这个关键字的主要功能是操作页面上jquery选择器代表的控件区域，依次填入一个或多个值到控件中，`selector`是jquery选择器选择的元素，`@args`是要填入的值。在这段代码中，`selector`为`div.demo:eq(0)`，表示选择第一个`class`为`demo`的`div`元素，`@args`为`50`，表示要填入的值为`50`。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取当前时间\n${current_time}=  Get Current Date  result_format=%Y-%m-%d %H:%M:%S\nLog  ${current_time}",
        "output": "这段代码主要作用是：获取并记录当前时间。\n\n其中用到了以下关键字：\"Get Current Date\"，\"Log\"\n\n这些关键字的用法是：\n- \"Get Current Date\"：该关键字用于获取当前日期和时间，默认的返回格式是YYYYMMDD，但也可以通过参数\"result_format\"指定特定的日期时间格式。在这段代码中，使用的时间格式是\"%Y-%m-%d %H:%M:%S\"，即\"年-月-日 时:分:秒\"的格式，将此结果存储在变量${current_time}中。\n- \"Log\"：该关键字用于将给定的信息记录在日志中，在这段代码中，其将上一步获取并存储在变量${current_time}中的当前时间记录在日志中。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${val}  GetFieldVal | 姓名",
        "output": "这段代码主要作用是：获取页面上姓名字段的值并赋值给变量val。\n其中用到了以下关键字：GetFieldVal。\n这些关键字的用法是：GetFieldVal关键字用于获取名为“姓名”的页面字段的值。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成随机姓名，使用了中文字符和字母作为姓名的候选字符\n${name}  GenerateRandom | 3 | 张李王赵钱孙周吴郑冯陈褚卫蒋沈韩杨朱秦尤许何吕施[LETTERS]",
        "output": "这段代码主要作用是：生成一个由中文字符和字母组成的包含3个字符长度的随机串，该串作为用户的随机姓名。\n\n其中用到了以下关键字：GenerateRandom。\n\n`GenerateRandom`关键字的用法是：该关键字的第一个参数是要生成的随机字符串的长度，第二个参数是可以用来生成随机字符串的候选字符集。在这个例子中，代码使用中文字符（如张、李、王等）和字母作为候选字符，生成长度为3的随机串，然后将这个串赋值给变量 `name` 用作用户的随机姓名。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickIcon | edit",
        "output": "这段代码主要作用是：点击图标，图标的名称为\"edit\"。\n\n其中用到了以下关键字：ClickIcon。\n\n这个关键字的用法是：点击名为edit的图标。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 定义姓名列表\n@{names}  Create List  张三  李四  王五  赵六\n\n# 使用 For 循环遍历姓名列表\nFOR  ${name}  IN  @{names}\n    # 打印每个姓名\n    Log  ${name}\nEND",
        "output": "这段代码主要作用是：循环遍历一个姓名列表，并打印每个姓名。\n\n其中用到了以下关键字：Create List, FOR, IN, Log, END。\n\n这些关键字的用法是：\n- Create List：创建一个列表，其中包含张三、李四、王五和赵六四个姓名，将此列表赋值给变量names；\n- FOR：开始一个for循环，针对变量names中的每个元素执行一次循环；\n- IN：用于在for循环中表示将要遍历的列表或集合；\n- Log：打印每个姓名，即在每次循环中，都将变量name的值打印出来；\n- END：标志for循环的结束。\n\n这段代码使用了RobotFramework的循环机制，将在每次循环中打印出列表names中的每一个姓名。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 定义中文姓名的字符集\n${chinese_chars}  Set Variable  赵钱孙李周吴郑王冯陈褚卫蒋沈韩杨朱秦尤许何吕施张孔曹严华金魏陶姜戚\n\n# 开始循环\nFOR  ${i}  IN RANGE  0  10\n    # 每次生成一个长度为3的随机中文姓名\n    ${name}  GenerateRandom  | 3 | ${chinese_chars}\n    # 打印生成的姓名\n    Log  ${name}\n    # 输出姓名的长度\n    ${length}  Get Length  ${name}\n    Log  ${length}\nEND",
        "output": "代码的含义：\n\n定义中文姓名的字符集：\n设置一个变量 ${chinese_chars}，其中包含一些常见的中文姓名字符，用于后续生成随机中文姓名。\n\n开始循环：\n使用 FOR 循环，循环次数为10，即循环执行以下代码块10次。\n\n每次生成一个长度为3的随机中文姓名：\n使用 GenerateRandom 关键字，根据 ${chinese_chars} 生成随机的长度为3的中文姓名，并存储在变量 ${name} 中。\n\n打印生成的姓名：\n记录并输出生成的随机中文姓名 ${name}。\n\n输出姓名的长度：\n使用 Get Length 关键字计算 ${name} 的长度，然后记录并输出长度值。\n\n结束循环：\n使用 END 结束 FOR 循环。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置第${group_no}组属性筛选条件\n    [Arguments]  ${group_no}  ${line_no}  @{config}\n    ${counter}  Set Variable  0\n    FOR  ${i}  IN RANGE  4\n      ${exist}  IsAnyElemExisting | div[class*=InlineFirstItem__outer-container__TQuRy]:eq(${group_no-1})\n      Exit For Loop If  ${exist}\n      Click  对照组\n      Sleep  1s\n      ${counter}  Set Variable  ${counter+1}\n      Exit For Loop If  ${counter} == 4\n    END\n    ${elem1}  FindElem | div[class*=InlineFirstItem__outer-container__TQuRy]:eq(${group_no-1})\n    \n    ${counter}  Set Variable  0\n    FOR  ${i}  IN RANGE  4\n      ${exist}  IsAnyElemExisting | ${elem1} div[class*=xxxx]:eq(${line_no-1})\n      Exit For Loop If  ${exist}\n      ClickElem | ${elem1} button:contains(属性过滤)\n      Sleep  1s\n      ${counter}  Set Variable  ${counter+1}\n      Exit For Loop If  ${counter} == 4\n    END\n    ${elem2}  FindElem | ${elem1} div[class*=xxxx]:eq(${line_no-1})\n    \n    FillArea | ${elem2}  @{config}",
        "output": "这段代码主要作用是：按照给定的配置参数设置指定组的属性筛选条件。具体来说，它首先尝试寻找第${group_no}组的元素，如果不存在，则点击\"对照组\"按钮，并等待1秒后再次尝试，直到找到该元素或尝试了4次为止。寻找成功后，它又尝试在该组中寻找第${line_no}行的元素，如果不存在，则点击\"属性过滤\"按钮，并等待1秒后再次尝试，直到找到该行元素或尝试了4次为止。寻找成功后，最后在该行元素中填入@{config}中的属性过滤条件。\n\n其中用到了以下关键字：\"Set Variable\", \"FOR\", \"IN RANGE\", \"IsAnyElemExisting\", \"Exit For Loop If\", \"Click\", \"Sleep\", \"FindElem\", \"ClickElem\", \"FillArea\", \"END\"。\n\n这些关键字的用法是：\"Set Variable\"用于设置变量的值；\"FOR\"和\"IN RANGE\"用于创建一个循环，循环次数由\"IN RANGE\"后的数字决定；\"IsAnyElemExisting\"用于判断jquery选择器表示的元素是否存在；\"Exit For Loop If\"用于在满足某个条件时退出当前的循环；\"Click\"用于点击某个元素；\"Sleep\"用于暂停执行一段时间；\"FindElem\"用于找到jquery选择器表示的元素并将其赋值给一个变量；\"ClickElem\"用于点击某个元素；\"FillArea\"用于在jquery选择器表示的元素中填入一些值；\"END\"用于表示循环的结束。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${current_time}=   Evaluate   datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")   modules=datetime\nLog   ${current_time}",
        "output": "该代码的作用是获取当前的时间并记录在日志当中。\n\n具体来说，首先定义一个变量\"${current_time}\"，并使用\"Evaluate\"关键字执行Python代码\"datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\"，获取当前的日期和时间，格式为年-月-日 时:分:秒的格式。\"modules=datetime\"表示需要导入的Python模块是datetime。\n\n然后，使用\"Log\"关键字将获取到的当前时间\"${current_time}\"记录到日志中。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 打印当前日期，年月日\n${current_date}=  Get Current Date  result_format=%Y-%m-%d\nLog  ${current_date}",
        "output": "这段代码的含义是获取当前的日期并打印出来。具体步骤包括：\n\n- 首先，使用`Get Current Date`关键字获取当前的日期。这个关键字是Robot Framework的内置关键字，可以用来获取当前的日期或时间。关键字后面的`result_format=%Y-%m-%d`参数表示返回的日期格式是“年-月-日”的形式。\n\n- 然后，使用`Log`关键字把获取到的日期打印出来。`Log`是Robot Framework的内置关键字，用来在测试报告和日志中写入消息。这里把变量`${current_date}`作为参数传给`Log`关键字，表示打印出这个变量的值，也就是当前的日期。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "关闭浏览器\n    # 关闭所有浏览器\n    CloseBrowser | check=${False}",
        "output": "代码的含义是关闭所有打开的浏览器。其中，参数check设置为False，这意味着在关闭浏览器的过程中不会进行错误检查"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置${field}为\n    [Arguments]  ${field}  @{args}\n    SetField  ${field}  @{args}",
        "output": "这段代码是一个自定义关键字，用于设置某个字段的值。关键字名称为 \"设置${field}为\"，接受两个参数。第一个参数${field}表示需要设置值的字段，后一个参数@{args}表示一个参数列表，用于存放需要设置的值。\n\n关键字的实现是使用另一个关键字SetField，将参数${field}和@{args}传递给它。SetField关键字会根据${field}在页面中寻找对应的字段，并将@{args}中的值设置到找到的字段中。\n\n因此，这段代码的作用就是创建了一个新的关键字，方便我们在测试中对页面的某个字段进行值设置。\n\n例如，可以这样使用这个自定义关键字：\n```\n设置姓名为  张三\n```\n这条语句会在页面中找到字段名为“姓名”的字段，然后设置该字段的值为“张三”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置${field}为\n    [Arguments]  ${field}  @{args}\n    ${field}=  Evaluate  \"${field}\".strip()  # 删除变量field前后的空白字符\n    SetField  ${field}  @{args}  # 向字段field中输入给定的参数 args",
        "output": "这段代码主要作用是：向特定字段（${field}）输入参数（@args）。首先，代码会删除参数field前后的空白字符，然后再向该字段输入所给的参数。\n\n其中用到了以下关键字：[Arguments]、Evaluate、SetField。\n\n这些关键字的用法是：\n- [Arguments]：用于定义RobotFramework关键字的参数，它后面跟的是参数列表。\n- Evaluate：用于执行Python代码，返回执行结果。在这段代码中，使用Evaluate删除了参数field前后的空白字符。\n- SetField：用于向页面上的某个字段输入值。在这段代码中，使用SetField向字段field中输入了参数args。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "进入${menu}页面\n    [Arguments]  ${menu}\n    ${menu}  Evaluate  '${menu}'.strip()\n    ${menu_items}  Evaluate  re.split(r'\\\\s+|>', '${menu}')\n    WaitLoading\n    FOR  ${item}  IN  @{menu_items}\n        ClickMenu  ${item}\n        Sleep  1s\n    END",
        "output": "这段代码的主要作用是：按顺序点击导航栏的菜单项，进入指定的页面。如 \"高级分析 > 热力图\"，会先点击 \"高级分析\"，再点击 \"热力图\"，最后进入 \"热力图\" 页面。\n\n其中用到了以下关键字：\n\n1. Evaluate：执行Python代码。\n2. WaitLoading：等待页面加载完成。\n3. FOR & END：RobotFramework中的FOR循环语法，用于遍历菜单项。\n4. ClickMenu：点击顶部导航栏的菜单项。\n5. Sleep：等待指定时间。\n\n这些关键字的用法是：\n\n1. Evaluate：使用Python的strip()函数，去掉${menu}参数两侧的空格，返回处理后的值赋给${menu}。再使用Python的re模块的split函数，依据空格或\">\"将${menu}分割为多个菜单项，并赋值给${menu_items}。\n\n2. WaitLoading：等待页面加载完成。\n\n3. FOR & END：遍历${menu_items}列表中的每一个元素，每个元素用${item}表示。\n\n4. ClickMenu：在每次循环中，点击菜单项${item}。\n\n5. Sleep：在每次点击菜单项后，等待1秒钟，确保点击操作的响应完成。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "表格第${line_no}行${action}\n    [Arguments]  ${line_no}  ${action}  @{args}\n    IF  '${action}' == '包含'\n        CheckRowHas  |  ${line_no}  |  @{args}\n    ELSE IF  '${action}' == '不包含'\n        CheckRowNotHas  |  ${line_no}  |  @{args}\n    ELSE\n        Log  \"# 无可用关键字\"\n    END",
        "output": "这段代码主要作用是：根据传入的参数，执行不同的操作。如果传入的操作是\"包含\"，则使用关键字“CheckRowHas”检查指定表格行是否包含给定的文本。如果传入的操作是\"不包含\"，则使用关键字“CheckRowNotHas”检查指定表格行是否不包含给定的文本。如果传入的操作不是\"包含\"或\"不包含\"，则将输出\"# 无可用关键字\"。\n\n其中用到了以下关键字：\n\n1. IF / ELSE IF / ELSE / END：用于判断并执行不同的操作。\n\n2. CheckRowHas：校验表格行包含给定文本, row_id从1开始，表示第一行。\n\n3. CheckRowNotHas：校验表格行不包含给定文本, row_id从1开始，表示第一行。\n\n4. Log：在日志中输出信息。\n\n这些关键字的用法是：\n\n1. IF / ELSE IF / ELSE / END：RF 的内置关键字，用于进行条件判断和分支执行。IF 后面接条件判断，如果该条件为 True，则执行接下来的关键字。当条件为 False 时，则跳过直到遇到 ELSE IF， ELSE 或 END 关键字。ELSE IF 后接新的条件判断，ELSE不接条件，表示前面所有条件都不满足时的默认执行。\n\n2. CheckRowHas：使用方法为 \"CheckRowHas | row_name_or_id | @texts\"，其中 \"row_name_or_id\" 是表格行名或行号，\"@texts\" 是要检查的一个或多个文本。\n\n3. CheckRowNotHas：使用方法为 \"CheckRowNotHas | row_name_or_id | @texts\"，其中 \"row_name_or_id\" 是表格行名或行号，\"@texts\" 是要检查的一个或多个文本。\n\n4. Log：使用方法为 \"Log | message\"，其中 \"message\" 是要记录的消息。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "添加属性分组\n    [Arguments]  ${name}\n    # 点击属性分组按钮\n    Click | 属性分组 \n    # 在最后一个选择属性分组的控件中输入name\n    SetField | 选择属性分组 | ${name} | idx=-1",
        "output": "这段代码主要作用是：添加属性分组。\n\n其中用到了以下关键字：Click, SetField。\n\n这些关键字的用法是：\n- Click：点击指定的文本。在这段代码中，点击了\"属性分组\"这个按钮。\n- SetField：设置字段的值。在这段代码中，在最后一个名为\"选择属性分组\"的控件中输入了参数\"${name}\"。\"idx=-1\"表示操作的是最后一个名为\"选择属性分组\"的控件。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在搜索框中输入\"商品A\"\nSetField | 搜索 | 商品A\n\n# 点击搜索\nClick | 搜索",
        "output": "在搜索框中输入\"商品A\"并点击搜索"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击添加商品按钮\nClick | 添加商品\n\n# 在弹出的窗口中输入商品名称\"商品A\"\nSetField | 商品名称 | 商品A | base=POPUP\n\n# 点击确定\nClick | 确定 | base=POPUP",
        "output": "该代码的含义是：\n1. 首先点击页面上显示文本为\"添加商品\"的按钮，以触发打开一个弹出窗口。\n2. 在这个弹出窗口中，找到显示文本为\"商品名称\"的输入框，并向该输入框中输入文本\"商品A\"。\n3. 然后在该弹出窗口中点击显示文本为\"确定\"的按钮，完成操作。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickElemOfRow | 1 | button:contains(编辑) | tbl=商品列表",
        "output": "这段代码的含义是：在名为\"商品列表\"的表格的第一行中，点击名为\"编辑\"的按钮。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickIfExists | 删除",
        "output": "这行代码的含义是：如果存在名为\"删除\"的按钮或链接，则点击它。如果不存在，则忽略这个操作并继续执行下一个步骤。这个关键字常常用于处理可选的、不一定总是出现的元素。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击第一个div中的\"确定\"按钮\nClick | 确定 | base=div:eq(0)",
        "output": "这段代码的含义是：在第一个div元素（即页面上所有div元素中的第一个）中点击文本为\"确定\"的元素。这里的\"确定\"通常是一个链接或者按钮。注意，这里的div:eq(0)是JQuery选择器，表示选择第一个div元素。\n\n这里的关键字Click的作用是点击指定的元素，它有三个参数，分别为要点击的元素的文本，这个元素在相同文本元素中的位置，以及这个元素所属的基准元素。在这段代码中，文本是\"确定\"，位置默认为第一个，基准元素是第一个div元素。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | [id='search'] | 商品B | enter=True",
        "output": "这段代码的含义是：在id为'search'的元素中输入'商品B'，并且模拟键盘回车操作。这常常用于搜索框的操作，输入关键字后按下回车进行搜索。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置分析时段\n    [Arguments]  @{args}\n    FillArea | div[class*=PeriodControl__container] | @{args}",
        "output": "写一个关键字：“设置分析时段”，接受参数 args, 主要逻辑是向class包含PeriodControl__container的div中输入给定的一个或多个参数"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "选择图表类型\n    [Arguments]  ${type}\n    ${typeMap}  Create Dictionary  折线图=line-chart  堆叠图=stacked-graph  柱形图=bar-chart  双轴图=combo-chart  环形图=pie-chart  百分比图=icon-percentage\n    ${targetType}  Get From Dictionary  ${typeMap}  ${type}\n    ${selector}  Set Variable  svg[class*=${targetType}]\n    ClickElem  ${selector}",
        "output": "写一个关键字：“选择图表类型”，接受type参数，主要逻辑是：根据输入的中文type，查找映射，得到因为的type名称，然后点击class 包含对应英文type的svg，\n类型映射关系为：折线图：line-chart，堆叠图：stacked-graph，柱形图：bar-chart，双轴图：combo-chart, 环形图: pie-chart, 百分比图: icon-percentage"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置事件指标\n    [Arguments]  ${name}  @{args}\n    SetField  ${name}  @{args}",
        "output": "这段代码是一个叫做\"设置事件指标\"的自定义关键字，该关键字定义有两个参数${name}和@{args}。\n\n这个关键字的功能是对页面上名为${name}的字段进行设值操作，设值的具体值由参数@{args}提供。其中，@{args}是一个列表变量，它包含了所有要设置的值，支持对同一字段设置多个值。\n\n例如，在具体使用中，我们可以这么写：\n```\n设置事件指标  年龄  18  20\n```\n这将设置名为\"年龄\"的字段的值依次为18和20。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置事件指标\n    [Arguments]  ${name}  @{args}\n    ${selector}  Set Variable  span[class*='FilterEvent__label']:contains(${name})\n    ${cnt}  Set Variable  0\n    FOR  ${i}  IN RANGE  4\n      ${existing}  IsElemExisting  ${selector}  timeout=1\n      Exit For Loop If  ${existing}\n      Click  事件指标\n      ${cnt}  Set Variable  ${cnt+1}\n    END\n    IF  ${cnt} < 4\n        SetField  ${name}  @{args}\n    ELSE\n        Log  \"# 无可用关键字\"\n    END",
        "output": "# 写一个关键字：“设置事件指标”，接受参数 name, args, 主要作用是:\n# 1. 先判断span class包含FilterEvent__label且文本包含name的元素${elem1}是否存在（1s超时）,如果不存在就点击事件指标按钮，此过程最多进行4次\n# 2. 如果元素${elem1}已经存在，就向字段name中输入给定的一个或多个 args"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "添加事件指标过滤条件\n    [Arguments]  ${name}  @{args}\n    ${name}  Evaluate  '${name}'.strip()\n    ${index}  Evaluate  ord(${name}) - ord('A')\n    ${elem1}  FindElem | [data-indoc-id*=add-filter]:eq(${index})\n    ClickElem | ${elem1}\n    Sleep  0.5s\n    ${elem2}  FindParentElem | ${elem1} | div[class*=FilterContainer__filterContainer]\n    ${elem3}  FindElem | div[class*=FilterContainer__filterContainer]:eq(-1)  | base=${elem2}\n    : FOR  ${arg}  IN  @{args}\n    \\   FillArea | ${elem3} | ${arg}",
        "output": "写一个关键字：“添加事件指标过滤条件”，接受参数 name, args，主要作用是：\n1. 先将name去掉前后的空白字符，然后获取name到index的映射，映射关系为：A:0, B:1, C:2, D:3, E:4\n2. 点击第index个data-indoc-id包含add-filter的元素${elem1}，并等待0.5s\n3. 找到elem1最近一个包含div class包含FilterContainer__filterContainer 的祖先elem2\n4. 在elem2中找到最后一个 class包含FilterContainer__filterContainer 的div 元素elem3\n5. 向elem3中输入一个或多个给定的args"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "添加自定义指标\n    [Arguments]  @{args}\n    Click | 自定义指标\n    Sleep  0.5s\n    ${selector}  Set Variable  div[class*=FilterComputeEvent__container]:eq(-1)\n    FillArea  ${selector}  @{args}",
        "output": "写一个关键字：“添加自定义指标”，接受参数 args, 主要逻辑是：先点击自定义指标按钮，等待0.5s, 然后向最后一个 div class包含FilterComputeEvent__container的元素中输入给定的一个或多个 args"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置分布区间\n    [Arguments]  ${type}  @{args}\n    Click  |  分布区间\n    ${is_quick}  Evaluate  '${type}'.find('快捷') >= 0\n    IF  ${is_quick}\n        SetField  |  组数  |  ${args[0]}\n    ELSE\n        Click  |  自定义区间\n        ${count}  Evaluate  len(${args}) - 1\n        FOR  ${i}  IN RANGE  ${count}\n            ClickIcon | plus\n            Sleep  |  0.5s\n        END\n        ${j}  Set Variable  ${0}\n        FOR   ${item}  IN  @{args}\n           FillArea  div[class*='FilterDistributeRange__rightInput']:eq(${j})  ${item}\n           ${j}  Set Variable  ${j + 1}\n        END\n    END\n    Click  |  确定",
        "output": "这段代码主要作用是：创建一个名为\"设置分布区间\"的关键字，用于根据不同类型设置分布区间的参数。\n\n其中用到了以下关键字：\nClick, Evaluate, IF, SetField, FOR, Sleep, ClickIcon, FillArea, Set Variable\n\n这些关键字的用法是：\n1. 接受两个参数：${type}表示区间类型，@{args}表示区间参数列表\n2. 首先点击\"分布区间\"文本\n3. 使用Evaluate判断类型是否包含\"快捷\"字样\n4. 如果是快捷类型：\n   - 使用SetField设置\"组数\"字段为第一个参数\n5. 如果是自定义类型：\n   - 点击\"自定义区间\"文本\n   - 计算参数数量并减去1\n   - 循环点击加号图标(ClickIcon)并等待0.5秒(Sleep)\n   - 遍历所有参数，使用FillArea填充到对应的div输入框中\n6. 最后点击\"确定\"文本"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "查看成分分析\n    [Arguments]  ${name}\n    SetField | 选择属性 | ${name}",
        "output": "这段代码主要作用是：创建一个名为\"查看成分分析\"的关键字，用于设置页面字段\"选择属性\"的值为传入的参数${name}。\n\n其中用到了以下关键字：SetField\n\n这些关键字的用法是：SetField | 选择属性 | ${name} 表示将名为\"选择属性\"的页面字段的值设置为变量${name}的值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置生命周期间隔\n    [Arguments]  ${count}\n    ${count}  Evaluate  ${count}.replace('天', '').replace(' ', '')\n    SetField | 间隔 | ${count}",
        "output": "这段代码主要作用是：设置生命周期间隔字段的值，并处理输入参数中的\"天\"和空格字符。\n其中用到了以下关键字：Evaluate, SetField\n这些关键字的用法是：\n- Evaluate: 执行Python表达式${count}.replace('天', '').replace(' ', '')，去除字符串中的\"天\"和空格\n- SetField: 将处理后的${count}值填入名为\"间隔\"的页面字段中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "查看${type}用户\n    [Arguments]  ${type}\n    ${type}  Evaluate  '${type}'.replace(' ', '')\n    SetField  |  查看  |  ${type}",
        "output": "这段代码主要作用是：创建一个名为\"查看${type}用户\"的关键字，用于在页面上设置指定类型的用户查看选项。\n\n其中用到了以下关键字：\n- Evaluate: 用于执行Python表达式\n- SetField: 用于操作页面字段\n\n这些关键字的用法是：\n1. 创建了一个名为\"查看${type}用户\"的关键字，接受一个${type}参数\n2. 使用Evaluate关键字去除${type}参数中的空格\n3. 使用SetField关键字在页面上名为\"查看\"的字段中设置处理后的${type}值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置留存指标\n    [Arguments]  ${name}  @{args}\n    ${count}  Set Variable  0\n    FOR  ${i}  IN RANGE  4\n      ${exist}  IsElemExisting  div[class*=FilterLabel__label]:contains(${name})  timeout=1\n      Exit For Loop If  ${exist}\n      Click  留存指标\n      ${count}  Set Variable  ${i+1}\n    END\n    Run Keyword If  ${count}==4  Fail  \"元素不存在\"\n    SetField  ${name}  @{args}",
        "output": "这段代码主要作用是：创建一个名为\"设置留存指标\"的关键字，用于设置指定名称的留存指标字段值。\n\n其中用到了以下关键字：\n- Set Variable\n- IsElemExisting\n- Click\n- Exit For Loop If\n- Run Keyword If\n- Fail\n- SetField\n\n这些关键字的用法是：\n1. 创建了一个名为\"设置留存指标\"的关键字，接受两个参数：${name}(指标名称)和@{args}(要设置的值列表)\n2. 初始化计数器${count}为0\n3. 循环4次尝试查找包含${name}的筛选标签元素\n4. 每次循环检查元素是否存在，存在则退出循环\n5. 如果元素不存在则点击\"留存指标\"按钮并增加计数器\n6. 如果循环4次后仍未找到元素，则报错\"元素不存在\"\n7. 如果找到元素，则使用SetField设置指定名称字段的值为@{args}中的值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "添加事件指标过滤条件\n    [Arguments]  ${name}  ${step_name}  @{args}\n\n    # 将 step_name \n    IF   '始' in $step_name\n        ${index}  Set Variable  0\n    ELSE\n        ${index}  Set Variable  1\n    END\n\n    # 在class包含FilterLabel__label，且文本为name的lable元素的祖先中找到 div class=FilterContainer__container__dyWbm的元素elem1\n    ${label_elem}  FindElem  label[class*=FilterLabel__label]:contains(${name})\n    ${elem1}  FindParentElem  ${label_elem}  div[class=FilterContainer__container__dyWbm]\n\n    # 在elem1中找到第index个class包含styles__icon的span元素elem2\n    ${elem2}  FindElem  ${elem1} span[class*=styles__icon]:eq(${index})\n\n    # 最后向elem2中输入给定的args\n    FillArea  ${elem2}  @{args}",
        "output": "这段代码主要作用是：创建一个名为\"添加事件指标过滤条件\"的关键字，用于在页面中定位特定的过滤条件元素并填充值。\n\n其中用到了以下关键字：\n- FindElem\n- FindParentElem\n- FillArea\n- Set Variable\n- IF/ELSE\n\n这些关键字的用法是：\n1. 该关键字接受3个参数：${name}(过滤条件名称)、${step_name}(步骤名称)、@{args}(要填充的值列表)\n2. 首先根据step_name是否包含\"始\"字来决定index的值(0或1)\n3. 然后查找包含指定name文本且class包含FilterLabel__label的label元素\n4. 向上查找该label元素的父级div元素(具有特定class)\n5. 在该div元素中查找第index个class包含styles__icon的span元素\n6. 最后向找到的span元素中填充args参数提供的值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "查看第${start}-${end}日${type}\n    [Arguments]   ${start}  ${end}  ${type}\n    ${start}  Strip String  ${start}\n    ${end}  Strip String  ${end}\n    ${type}  Strip String  ${type}\n    FillArea | span[class*=RetentionRange__rangeContainer] | ${start} | ${end}\n    ${sibling_selector}  Set Variable  span[class*=RetentionRange__rangeContainer] ~ *\n    FillArea | ${sibling_selector} | ${type}",
        "output": "这段代码主要作用是：创建一个名为\"查看第${start}-${end}日${type}\"的关键字，用于填写日期范围和类型。\n其中用到了以下关键字：Strip String, FillArea, Set Variable\n这些关键字的用法是：\n1. Strip String: 去除字符串参数${start}, ${end}, ${type}两端的空格\n2. FillArea: 第一次填写到class包含RetentionRange__rangeContainer的span元素中，填入${start}和${end}值；第二次填写到该span元素的兄弟元素中，填入${type}值\n3. Set Variable: 创建jquery选择器变量${sibling_selector}，用于定位目标元素的兄弟元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "查看日期\n    [Arguments]  ${type}  ${day}\n    ${type}  Strip String  ${type}\n    ${day}   Strip String  ${day}\n    Click  ${type}\n    Sleep  0.5s\n    SetField  日期  ${day}",
        "output": "这段代码主要作用是：创建一个名为\"查看日期\"的关键字，用于选择指定类型的日期。\n\n其中用到了以下关键字：\n- Strip String: 去除字符串两端的空白字符\n- Click: 点击指定文本或元素\n- Sleep: 等待指定时间\n- SetField: 设置页面字段的值\n\n这些关键字的用法是：\n1. 创建了一个名为\"查看日期\"的关键字，接受两个参数：${type}和${day}\n2. 首先使用Strip String去除两个参数两端的空白字符\n3. 然后点击${type}指定的元素\n4. 等待0.5秒\n5. 最后在\"日期\"字段中填入${day}的值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置转化窗口期\n    [Arguments]  @{args}\n    SetField  转化窗口期  @{args}",
        "output": "这段代码主要作用是：创建一个名为\"设置转化窗口期\"的关键字，用于设置页面中\"转化窗口期\"字段的值。\n其中用到了以下关键字：SetField\n这些关键字的用法是：SetField | name | @args | idx=0 | enter=False | base= | near=  # 操作页面字段name关联的控件区域，依次填入一个或多个值到控件中\n\n创建的关键字说明：\n- 关键字名称：设置转化窗口期\n- 参数：接受可变参数 @{args}，用于传入要设置的一个或多个值\n- 内部逻辑：调用 SetField 关键字，将传入的 @{args} 参数设置到名为\"转化窗口期\"的页面字段中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置漏斗事件\n    [Arguments]  ${line_no}  ${name}\n    ${count}  Set Variable  0\n    ${labelSelector}  Set Variable  label:contains(${line_no})\n    ${exist}  IsElemExisting  ${labelSelector}\n\n    WHILE  ${count} < 4 and not ${exist}\n        Click  漏斗事件\n        Sleep  0.5s\n        ${exist}  IsElemExisting  ${labelSelector}\n        ${count}  Set Variable  ${count} + 1\n    END\n\n    IF  ${exist}\n        SetField  ${line_no}  ${name}\n    END",
        "output": "这段代码主要作用是：设置漏斗事件的行号和名称，通过循环检查元素是否存在并执行相应操作。\n\n其中用到了以下关键字：\n- Set Variable - 设置变量值\n- IsElemExisting - 检查元素是否存在(未在提供列表中，可能是自定义关键字)\n- Click - 点击文本\"漏斗事件\"\n- Sleep - 等待0.5秒\n- SetField - 设置指定行号的字段值为给定名称\n\n这些关键字的用法是：\n1. 创建了一个名为\"设置漏斗事件\"的关键字，接受两个参数：${line_no}和${name}\n2. 初始化计数器${count}为0\n3. 创建jquery选择器查找包含${line_no}文本的label元素\n4. 进入最多4次的循环，检查元素是否存在：\n   - 如果不存在则点击\"漏斗事件\"，等待0.5秒后再次检查\n5. 如果元素存在，则设置该行号的字段值为给定的名称"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置漏斗事件\n    [Arguments]  ${line_no}  ${name}\n    ${count}  Set Variable  0\n    FOR  ${count}  IN RANGE  1  5\n      ${exist}  IsElemExisting  label:contains(${line_no})  timeout=1\n      Exit For Loop If  ${exist}\n      Click  漏斗事件\n      Sleep  0.5s\n    END\n    Run Keyword If  ${exist}  SetField  ${line_no}  ${name}",
        "output": "这段代码主要作用是：创建一个名为\"设置漏斗事件\"的关键字，用于设置指定行号的事件名称。\n\n其中用到了以下关键字：\n- Set Variable\n- FOR...IN RANGE...END\n- IsElemExisting\n- Exit For Loop If\n- Click\n- Sleep\n- Run Keyword If\n- SetField\n\n这些关键字的用法是：\n1. 创建了一个名为\"设置漏斗事件\"的关键字，接受两个参数：${line_no}(行号)和${name}(名称)\n2. 初始化计数器${count}为0\n3. 循环1到4次(最多尝试4次)：\n   - 检查页面上是否存在包含${line_no}文本的label元素(超时1秒)\n   - 如果元素存在则退出循环\n   - 否则点击\"漏斗事件\"按钮\n   - 等待0.5秒\n4. 如果元素存在，则设置${line_no}字段的值为${name}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "添加漏斗事件过滤条件\n    [Arguments]  ${line_no}  @{args}\n    ${elem1}  Set Variable  div[class*=FunnelEvent__container]:eq(${line_no})\n    ClickElem  ${elem1} span[class*=styles__icon]\n    Sleep  0.5s\n    ${elem2}  Set Variable  ${elem1} div[class*=FilterConditionItem__expression]\n    FillArea  ${elem2}  @{args}",
        "output": "这段代码主要作用是：创建一个名为\"添加漏斗事件过滤条件\"的关键字，用于在漏斗事件中添加过滤条件。\n\n其中用到了以下关键字：\n- Set Variable\n- ClickElem\n- Sleep\n- FillArea\n\n这些关键字的用法是：\n1. 创建了一个接受两个参数的关键字：\n   - ${line_no}: 表示漏斗事件的行号\n   - @{args}: 表示过滤条件的参数列表\n2. 内部逻辑：\n   - 首先定位到指定行号的漏斗事件容器元素\n   - 点击该容器中的图标元素\n   - 等待0.5秒\n   - 定位到过滤条件表达式区域\n   - 在表达式区域中填入提供的参数"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "查看转化${type}\n    [Arguments]  ${type}  @{args}\n    Click  ${type}\n    Sleep  0.5s\n    IF  len(${args}) != 0\n        SetField  转化${type}  @{args}\n    END",
        "output": "这段代码主要作用是：创建一个名为\"查看转化${type}\"的关键字，用于点击指定类型的转化选项并可选地设置相关字段值。\n其中用到了以下关键字：Click, Sleep, SetField\n这些关键字的用法是：\n1. Click ${type} - 点击${type}参数指定的文本\n2. Sleep 0.5s - 等待0.5秒\n3. SetField 转化${type} @{args} - 当有额外参数时，在\"转化${type}\"字段中设置@{args}参数值\n\n创建的关键字参数：\n- ${type}: 必选参数，指定要查看的转化类型\n- @{args}: 可变参数，可选地传入要设置的字段值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置会话间隔\n    [Arguments]  @{args}\n    SetField  设置会话间隔  @{args}",
        "output": "写一个关键字：“设置会话间隔”，接受 args 参数，作用是向“设置会话间隔”字段中输入给定的变长参数 args"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置${type}事件\n    [Arguments]  ${type}  @{args}\n    ${event}  Set Variable  ${type}事件\n    SetField  设置终止/起始事件  ${event}  @{args}",
        "output": "写一个关键字：“设置${type}事件”，接受 args 参数，作用是：向字段 “设置终止/起始事件” 中输入 ${type}事件 和变长参数 args"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "添加${type}事件过滤条件\n    [Arguments]  @{args}\n    Click | 过滤条件 | idx=0\n    FillArea | div[class=query-event-filter]:eq(0) | @{args}",
        "output": "写一个关键字：“添加${type}事件过滤条件”， 接受 args 参数，作用是：点击第一个“过滤条件”按钮，然后向第一个 div class=query-event-filter 元素中输入变长参数 args"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置参与分析的事件\n    [Arguments]  ${group_name}  @{args}\n    ${dict}  Create Dictionary  A=0  B=1  C=2  D=3  E=4\n    ${index}  Set Variable  ${dict[\"${group_name}\"]}\n    ${i}  Set Variable  0\n    FOR  ${i}  IN RANGE  4\n      ${exist}  IsElemExisting  div.interest-events-box:eq(${index})\n      Exit For Loop If  ${exist}\n      Click  新增事件\n      Sleep  0.5s\n    END\n    ${elem1}  FindElem  div.interest-events-box:eq(${index})\n    FillArea  ${elem1} div.interest-events-line  @{arg}",
        "output": "写一个关键字：“设置参与分析的事件”，接受 group_name, args 参数，业务逻辑是：\n1. 先将 group_name 映射为index, 映射关系为：A: 0, B: 1, C:2, D: 3, E:4\n2. 查找第index个div class=interest-events-box 元素elem1, 如果此元素不存在，就点击新增事件按钮，然后等待0.5s, 此过程最多循环4次\n3. 如果elem1已经存在，则向其后代元素 div class=interest-events-line 中输入给定的一个或多个 args"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置参与分析的事件\n    [Arguments]  ${group_name}  @{args}\n    ${index}  Evaluate  {'A': 0, 'B': 1, 'C': 2, 'D': 3, 'E': 4}[$group_name]\n    ${selector}  Set Variable  div.interest-events-box:eq(${index})\n    ${i}  Set Variable  0\n    FOR  ${i}  IN RANGE  0  4\n      ${exist}  IsElemExisting | ${selector}\n      Exit For Loop If  ${exist}\n      Click  新增事件\n      Sleep  0.5s\n    END\n    FillArea  ${selector} div.interest-events-line  @{args}",
        "output": "写一个关键字：“设置参与分析的事件”，接受 group_name, args 参数，业务逻辑是：\n1. 先将 group_name 映射为index, 映射关系为：A: 0, B: 1, C:2, D: 3, E:4\n2. 查找第index个div class=interest-events-box 元素elem1, 如果此元素不存在，就点击新增事件按钮，然后等待0.5s, 此过程最多循环4次\n3. 如果elem1已经存在，则向其后代元素 div class=interest-events-line 中输入给定的一个或多个 args"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "添加参与分析的事件过滤条件\n    [Arguments]  ${group_name}  @{args}\n    ${group_map}  Create Dictionary  A=0  B=1  C=2  D=3  E=4\n    IF  \"${group_name}\" == \"A\"\n        Fail  事件A为起始事件，请使用 “添加起始事件过滤条件” 或 “添加终止事件过滤条件” 关键字处理\n    END\n    ${index}  Set Variable  ${group_map[\"${group_name}\"]}\n   ClickElem button:contains(过滤条件):eq(${index})\n    Sleep  0.5s\n    ${selector1}  Set Variable  div.interest-events-box:eq(${index})\n    ${selector2}  Set Variable  ${selector1} div[class*=index_container] > div.ant-row\n    FillArea  ${selector2}  @{arg}",
        "output": "# 写一个关键字：“添加参与分析的事件过滤条件”， 接受 group_name, args 参数，主要逻辑是：\n# 1. 如果group_name为A, 则抛出异常信息：事件A为起始事件，请使用 “添加起始事件过滤条件” 或 “添加终止事件过滤条件” 关键字处理\n# 2. 将 group_name 映射为index, 映射关系为：A: 0, B: 1, C:2, D: 3, E:4\n# 3. 点击第index个过滤条件按钮，等待0.5s\n# 4. 在第index个 div class=interest-events-box 元素elem1中，找到 div class包含index_container 的后代元素elem2的直接后代元素 div class=ant-row, 向其中输入一个或多个 args"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置待归因事件\n    [Arguments]  ${group_name}  @{args}\n    ${group_index_map}  Create Dictionary  A=0  B=1  C=2  D=3  E=4  F=5\n    ${index}  Get From Dictionary  ${group_index_map}  ${group_name}\n    ${selector}  Set Variable  div[class*=AttributionTouchPointEvent__container]:eq(${index})\n    FillArea  ${selector}  @{args}",
        "output": "写一个关键字：“设置待归因事件”，接受 group_name, args 参数，主要作用是：\n1. 将group_name映射成index, 映射关系为：A:0, B:1, C:2, D:3, E:4, F:5\n2. 找到第index个div class包含AttributionTouchPointEvent__container的元素elem1，向其中输入一个或多个 args"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "添加目标事件过滤条件\n    [Arguments]  @{args}\n    ${elem1} =  Set Variable  div[class*=AttributionTargetEvent__container]\n    ClickElem  ${elem1} span[class*=styles__icon]\n    Sleep  0.5s\n    ${elem2} =  Set Variable  ${elem1} div[class*=FilterConditionItem__expression]:last\n    FillArea  ${elem2}  @{arg}",
        "output": "写一个关键字：“添加目标事件过滤条件”， 接受 args 参数，主要作用是：\n1. 找到div class包含AttributionTargetEvent__container的元素elem1，然后点击其后代元素 span class包含styles__icon，等待0.5s\n2. 在元素elem1中找到最后一个 div class包含FilterConditionItem__expression的后代元素elem2, 向elem2中输入给定的一个或多个 args"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "开启关联属性\n    SetField | 关联属性 | ON",
        "output": "代码解释：\n该代码写一个关键字：“开启关联属性”，作用是使用SetField关键字将\"关联属性\"设置为\"ON\"，意味着该测试脚本的功能是开启关联属性"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置归因方式\n    [Arguments]  ${type}  @{args}\n    ${type}  Evaluate  ${type}.replace('归因','') \n    ${type_dict}  Create Dictionary  首次=#icon-firstclick  末次=#icon-lastclick  线性=#icon-linear  时间衰减=#icon-timedecay  基于位置=#icon-positionbased\n    ${type}  Set Variable  ${type_dict}[${type}]\n    ClickIcon  ${type}\n    Sleep  0.5s\n    FillArea  div[class=AttributionChartRow__row__2tAub]  @{args}",
        "output": "写一个关键字：“设置归因方式”，接受type，args参数，主要作用是：\n1. 先去掉type中的“归因”字符串，然后将type映射成英文，映射关系为：首次：\"#icon-firstclick\", 末次: \"#icon-lastclick\", 线性: \"#icon-linear\", 时间衰减: \"#icon-timedecay\", 基于位置: \"#icon-positionbased\"\n2. 点击满足type的icon, 等待0.5秒\n3. 在div class=AttributionChartRow__row__2tAub 的元素中填写一个或多个 args"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "查看LTV${type}\n    [Arguments]  ${type}  @{args}\n    Click | LTV${type}\n    Sleep  0.5s\n    SetField | LTVn | @{arg}",
        "output": "写一个关键字：“查看LTV${type}”，接受 args 参数，主要完成：点击“LTV${type}”, 等待0.5s, 然后向 LTVn 中输入给定的一个或多个 args"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "使用${type}查询\n    [Arguments]  @{args}\n    ${selector}  Set Variable  div[class=search-bar-content]\n    FillArea  ${selector}  ${type}  @{args}",
        "output": "写一个关键字：“使用${type}查询”，接受 args 参数，主要逻辑：向div class=search-bar-content中输入type 和 给定的args"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${item}  Strip String  ${item}",
        "output": "该行代码的意思是：用RF内置的Strip String关键字处理变量${item}，这个关键字将删除${item}字符串值前后的空白字符（例如：空格，换行，制表符等），然后将处理后的结果值重新赋给${item}变量。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "表格中${line_key}行的非0数据大于${count}个\n    [Arguments]  ${line_key}  ${count}\n    PageDown\n    @{vals}  GetRowValues  ${line_key}\n    ${total}  Set Variable  0\n    FOR  ${val}  IN  @{vals}\n        ${val}  Evaluate  \"${val}\".replace(\",\", \"\").replace(\".\", \"\").strip()\n        ${is_digit}  Run Keyword And Return Status  Should Be True  ${val}.isdigit()\n        IF  ${is_digit} \n            ${val}  Convert To Number  ${val}\n            IF  ${val} != 0\n                ${total}  Evaluate  ${total} + 1\n            END\n        END\n    END\n    Should Be True  ${total} > ${count}",
        "output": "# 写一个关键字：\"表格中${line_key}行的非0数据大于${count}个\"，主要逻辑：\n# 页面向向下滚动，然后获取表格line_key行的数据，然后对每个数据去掉首尾空白字符，然后把所有\",\"和“.”都去掉，然后判断此数据是否是数值，且不等于0，计算满足条件的数据总数是否大于给定的值 count"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${count}    Evaluate    '${count}'.strip().replace('个', '')",
        "output": "去掉count前后的空白字符和‘个’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "打开页面\n    [Arguments]  ${url}=${MAIN_PAGE}\n    OpenUrl  ${url}\n    WaitLoading",
        "output": "这段代码主要作用是：创建一个名为\"打开页面\"的关键字，用于打开指定URL并等待页面加载完成。\n其中用到了以下关键字：OpenUrl, WaitLoading\n这些关键字的用法是：\n- OpenUrl: 打开指定的URL地址\n- WaitLoading: 等待页面加载完成，默认超时时间为30秒"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击App ID输入框\nClick | App ID\n# 输入值cli_a3ee609d383b9013\nSetField | App ID | cli_a3ee609d383b9013",
        "output": "这段代码的含义如下：\n\n首先，会在界面上寻找App ID对应的控件，可以是一个input输入框或者textarea文本区域，并点击这个控件。这个操作的目的一般是触发相应的焦点事件或者使得该输入框处于激活状态，以便后续的输入操作。\n\n然后，在找到的第一个名称为App ID的字段中输入值\"cli_a3ee609d383b9013\""
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${span}  FindElem | ${elem} span",
        "output": "该代码用于查找并返回给定元素（${elem}）内的第一个span子元素，并将其存储在变量${span}中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${name}  Set Variable  A\n@{args} =  Create List  name   =   hlt",
        "output": "创建变量name等于A, 创建列表变量 args 等于 name、=、hlt"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "CheckColHas | 1 | 老用户",
        "output": "这段代码的含义是：检查第一列中是否存在文本\"老用户\"。具体来说，这是一个关键字\"CheckColHas\"调用，它有两个参数，其中第一个参数\"1\"表示要检查的列数（即第一列），第二个参数\"老用户\"是在该列中要查找的文本"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "表格第${col_no}列${action}\n    [Arguments]  ${col_no}  ${action}  @{args}\n    Run Keyword If  '${action}'=='包含'  CheckColHas  ${col_no}  @{args}\n    Run Keyword If  '${action}'=='不包含'  CheckColNotHas  ${col_no}  @{args}",
        "output": "这段代码主要作用是：创建一个名为\"表格第${col_no}列${action}\"的关键字，用于检查表格列是否包含或不包含指定的文本。\n其中用到了以下关键字：Run Keyword If, CheckColHas, CheckColNotHas\n这些关键字的用法是：\n- Run Keyword If: 根据条件执行不同的关键字\n- CheckColHas: 校验表格列包含给定文本\n- CheckColNotHas: 校验表格列不包含给定文本\n\n创建的关键字参数：\n- ${col_no}: 表格列号\n- ${action}: 操作类型(\"包含\"或\"不包含\")\n- @{args}: 要检查的文本列表\n\n内部逻辑：\n根据${action}参数的值，分别调用CheckColHas或CheckColNotHas关键字来检查指定列是否包含/不包含给定的文本"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickElem | span[class='arco-select-view-value']\nClick | 飞书",
        "output": "该段代码的含义是：\n首先，点击页面上class属性为'arco-select-view-value'的span元素；\n然后，点击页面上的文本\"飞书\"。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Wait Until Element Is Enabled  button:contains(立即创建)",
        "output": "这段代码的含义是：等待直至页面上含有“立即创建”文本的按钮变成可用状态。这个命令通常用于确保某个需要交互的元素已经加载完成，并且可以进行下一步的动作，例如点击。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "WaitElem | button:contains(登录)",
        "output": "这段代码的含义是：等待出现包含“登录”文字的按钮元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "WaitText | 欢迎",
        "output": "这行代码的含义是：等待出现文本“欢迎”。即测试脚本会在此暂停执行，直到屏幕上出现了文本“欢迎”，然后才继续执行后续的测试步骤。如果在一个指定的超时时间内，文本“欢迎”没有出现，那么这个测试步骤会失败。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置参数\n    [Arguments]  &{kwargs}\n    FOR  ${key}  ${value}  IN  &{kwargs}\n        SetField | ${key} | ${value}\n    END",
        "output": "这段代码主要作用是：创建一个名为\"设置参数\"的关键字，用于批量设置页面字段的值。\n其中用到了以下关键字：SetField\n这些关键字的用法是：\n1. 关键字\"设置参数\"接受一个字典参数&{kwargs}，包含多个键值对形式的字段名和字段值\n2. 内部使用FOR循环遍历字典中的每个键值对\n3. 对每个键值对调用SetField关键字，将字段名${key}和字段值${value}作为参数传递\n4. 最终实现批量设置多个页面字段的功能"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Paste | div.abc | ${SQL}",
        "output": "这是一个Robot Framework的关键字调用，\"Paste\" 是关键字，\"div.abc\" 和 \"${SQL}\" 是此关键字的参数。\n\n功能上，它可能意味着将 ${SQL} 这个变量的值粘贴到网页中 class 为 \"abc\" 的 div 元素中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Paste | ${elem} | ${SQL}",
        "output": "这段代码的含义是将变量${SQL}的内容粘贴到变量${elem}所表示的元素中。其中，${elem}可能是一个元素的id、name或其他属性，${SQL}是你想要粘贴的文本内容。这是一个常见的在自动化测试中输入文本的操作"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击复制\nClick | 复制\n\n# 获取剪切板内容\n${val}  GetCopied\n\n# 将内容粘贴到 elem 元素中\nPaste | ${elem} | ${val}",
        "output": "该段代码首先模拟点击“复制”按钮的操作，将某些内容复制到剪切板中。然后使用GetCopied关键字获取剪切板上的内容，将获取的值储存到变量${val}中。最后调用Paste关键字，将${val}变量中储存的内容粘贴到${elem}元素中。总的来说，这段代码实现了复制和粘贴的自动化操作。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待页面出现 \"概览\"\nWaitText | 概览\n\n# 在搜索中输入 \"UI自动化\"\nSetField | 搜索 | UI自动化 | enter=True",
        "output": "代码解释：\n\n第一段代码：\n```\n# 等待页面出现 \"概览\"\nWaitText | 概览\n```\n这段代码的含义是：自动化脚本会等待，直到在页面上出现了文本“概览”。WaitText是等待某文本出现的关键字， 后面的 \"概览\" 是预期要等待出现的文本。\n\n第二段代码：\n```\n# 在搜索中输入 \"UI自动化\"\nSetField | 搜索 | UI自动化 | enter=True\n```\n这段代码的含义是：在名为\"搜索\"的字段输入\"UI自动化\"，并且输入完成后按回车键。SetField是设置字段值的关键字，后面的 \"搜索\" 代表字段名称，\"UI自动化\" 是要输入的文本，enter=True表示输入完成后按回车"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SendText | enter=True",
        "output": "这行代码的含义是：通过关键字\"SendText\"发送文本，并在发送完文本之后自动按下\"Enter\"键。在Robot Framework中，\"enter=True\"表示在输入文本后，模拟键盘的\"Enter\"键操作。这种操作在某些场景下是必要的，例如，输入关键字后需要按下\"Enter\"键进行搜索。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断“UI自动化文件夹”是否存在\n${exist}  IsExisting | UI自动化文件夹\n# 如果不存在“UI自动化文件夹”\nIF  $exist == False\n    # 移动鼠标到“新建”\n    MoTo | 新建\n    # 点击“新建文件夹”\n    Click | 新建文件夹\n    # 在文件夹名称中输入：UI自动化文件夹\n    SetField | 文件夹名称 | UI自动化文件夹\n    # 点击确定\n    Click | 确定\nEND",
        "output": "如果页面不存在 “UI自动化文件夹”，就把鼠标移动到 “新建” 上，然后点击 “新建文件夹”，并在文件夹名称中输入：UI自动化文件夹，然后点击确定"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到新建上\nMoTo | 新建\n\n# 点击新建任务\nClick | 新建任务",
        "output": "这段代码主要完成了两个操作：\n\n1. 使用鼠标移动到显示为\"新建\"的元素上，可能是为了激活某些基于鼠标悬停的交互：\n\n```\n# 鼠标移动到新建上\nMoTo | 新建\n```\n\n2. 在页面上寻找文本为\"新建任务\"的元素，并执行点击操作，可能是想创建一个新的任务：\n\n```\n# 点击新建任务\nClick | 新建任务\n```\n\n这两个操作通常用于测试应用的用户界面，确保元素被正确地展示，并且用户交互（比如点击）能正常工作"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查变量 \"任务名称\" 是否不等于 \"造数专用\"\nIF  \"${任务名称}\" != \"造数专用\"\n    # 调用 \"生成指定前缀和带有时间戳后缀的名称\" 关键字，并使用 \"${指定前缀}可视化建模\" 参数生成任务名称\n    ${任务名称}  生成指定前缀和带有时间戳后缀的名称  ${指定前缀}可视化建模\nEND",
        "output": "这段代码主要作用是：检查变量\"任务名称\"是否不等于\"造数专用\"，如果条件成立则调用关键字生成新的任务名称。\n其中用到了以下关键字：IF, 生成指定前缀和带有时间戳后缀的名称\n这些关键字的用法是：\n- IF: 条件判断语句，当条件成立时执行代码块中的内容\n- 生成指定前缀和带有时间戳后缀的名称: 自定义关键字，用于生成带有指定前缀和时间戳后缀的名称"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入名称\nSetField | 名称 | ${任务名称}\n\n# 输入路径\nSetField | 路径 | UI自动化文件夹\n\n# 点击确定\nClick | 确定\n\n# 等待确定按钮消失\nWaitElemDisappear | button:contains(确定)\n\n# 检查页面包含刚输入的任务名称\nCheckHas | ${任务名称}",
        "output": "这段代码主要作用是：创建一个任务并验证任务创建成功。\n其中用到了以下关键字：SetField, Click, WaitElemDisappear, CheckHas\n这些关键字的用法是：\n- SetField: 用于在指定字段中输入值\n- Click: 用于点击页面上的元素\n- WaitElemDisappear: 等待指定元素从页面消失\n- CheckHas: 检查页面是否包含指定文本"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断变量 TEST_APP_ID 是否存在\n${exist}  IsVarExisting | TEST_APP_ID\n\n# 存在就赋值给变量 app_id\nIF  ${exist}\n    ${app_id}  Set Variable  ${TEST_APP_ID}\n# 不存在就使用 ${host}  ${cookie_value}  ${project_name}  参数调用关键字 create_test_project 生成 app_id\nELSE\n    ${app_id}  create_test_project  ${host}  ${cookie_value}  ${project_name}\nEND",
        "output": "这段代码主要作用是：检查变量 TEST_APP_ID 是否存在并根据结果进行不同的处理\n其中用到了以下关键字：IsVarExisting, Set Variable, create_test_project\n这些关键字的用法是：\n- IsVarExisting 用于判断变量是否存在\n- Set Variable 用于给变量赋值\n- create_test_project 是自定义关键字，用于创建测试项目并返回 app_id"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${ret}   判断数据连接是否存在  ${数据连接名称}",
        "output": "运行关键字 ‘判断数据连接是否存在’ 参数为 ${数据连接名称}，并返回结果"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击新建\nClick | 新建 \n\n# 在 '搜索想要接入的数据源' 中输入 ${数据源类型}\nSetField | 搜索想要接入的数据源 | ${数据源类型}\n\n# 点击 section class=type-name 且文本包含 ${数据源类型} 的元素\nClickElem | section[class='type-name']:contains(${数据源类型})",
        "output": "点击新建，然后在 ‘搜索想要接入的数据源’ 中输入 ${数据源类型}，然后点击 section class=type-name 且文本包含 ${数据源类型} 的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击class包含AeolusArrowLeft的svg\nClickElem | svg[class*='AeolusArrowLeft']\n\n# 如果页面有确定按钮就点击\n${exist} = IsExisting | 确定\nIF  ${exist}\n    Click  确定\nEND",
        "output": "点击class包含AeolusArrowLeft的svg，如果页面有确定按钮就点击"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击新建\nClick | 新建\n\n# 在 ‘搜索想要接入的数据源’ 中输入 ${数据源类型}\nSetField | 搜索想要接入的数据源 | ${数据源类型}\n\n# 等待2秒\nSleep | 2s\n\n# 判断是否存在 section class包含type-name 且文本包含 ${数据源类型} 的元素\n${exist} | IsAnyElemExisting | section[class*=type-name]:contains(${数据源类型})\n\n# 如果不存在，就输入 ${数据源类型} 中以空格分隔后的最后一段\nIF  not $exist\n    ${last_word} | Evaluate | $数据源类型.split(' ')[-1]\n    SetField | 搜索想要接入的数据源 | ${last_word}\n    WaitElem | section[class*=type-name]:contains(${数据源类型})\nEND\n\n# 点击 ${数据源类型}\nClick | ${数据源类型}",
        "output": "点击新建，然后在 ‘搜索想要接入的数据源’ 中输入 ${数据源类型}，2s后，判断 section class包含type-name 且文本包含 ${数据源类型} 的元素 elem1 是否存在\n如果不存在，就在 ‘搜索想要接入的数据源’ 输入 ${数据源类型} 中以空格分隔后的最后一段，然后等待元素 elem1 存在\n最后点击 ${数据源类型}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断元素${elem1}是否存在\n${exist}  IsElemExisting | ${elem1}\n# 如果元素${elem1}存在，就向字段name中输入给定的一个或多个 args\nIF  ${exist}\n    SetField | name | @{args}\nEND",
        "output": "这段代码的含义是：首先通过`IsElemExisting`关键字判断名为`${elem1}`的元素是否存在，如果存在（`${exist}`为真），则使用`SetField`关键字向名为`name`的字段中输入一串参数`@{args}`。这里的`IF ${exist}`和`END`是Robot Framework的条件判断语句，类似于其他编程语言中的`if`和`else`语句，用来根据条件执行不同的操作。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${elem}  FindElem  | span[draggable=true]:contains(${表信息})",
        "output": "这段代码的含义是：在页面中寻找一个元素，这个元素的HTML标签为span，拥有一个属性draggable且值为true，并且该元素中还包含有指定的文本内容，即`${表信息}`变量的值。找到的元素会被赋值给变量`${elem}`。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "点击${text}\n    [Arguments]  ${text}  ${num}=1\n    ${num}  Evaluate  ${num}-1\n    Click | ${text} | idx=${num}",
        "output": "写一个关键字：“点击${text}”, 接受参数num(默认值为1，表示第一个)，作用是：点击第 num 个text"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "生成随机字符串\n    [Arguments]  ${prefix}=\n    ${random_string}  GenerateRandom  | 7 | [LETTERS][NUMBERS]\n    ${result}  Catenate  SEPARATOR=  ${prefix}  ${random_string}\n    [Return]  ${result}",
        "output": "这段代码的含义是定义了一个名为“生成随机字符串”的关键字，并且这个关键字可以接收一个可选的参数\"${prefix}\"。\n\n在这个关键字中，首先使用\"GenerateRandom\"关键字生成了一个长度为7的包含字母和数字的随机字符串，存储在\"${random_string}\"变量中。\n\n然后使用\"Catenate\"关键字将\"${prefix}\"和\"${random_string}\"连接起来，得到的结果存储在\"${result}\"变量中。\n\n最后，这个关键字会返回\"${result}\"变量的值，也就是\"${prefix}\"和随机字符串的组合。\n\n总的来说，这个关键字的功能是生成一个以指定前缀开头的包含字母和数字的随机字符串，如果没有指定前缀，则只生成随机字符串。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "生成随机字符串\n    ${random_string}  GenerateRandom  | 10 | [LETTERS][NUMBERS]\n    [Return]  ${random_string}",
        "output": "这段代码的含义是生成一个长度为10的随机字符串，这个字符串中的字符只包括字母和数字。然后，这个生成的随机字符串被赋值给变量${random_string}，并在最后通过[Return] 关键字将其作为结果返回。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "CheckBoxOn | 数据",
        "output": "这段代码的含义是，选中名为\"数据\"的复选框。在这里，“CheckBoxOn”是一个关键字，它用于选中指定的复选框。“数据”是这个关键字的参数，代表要选中的复选框的名称"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在最后一个 '输入关键词搜索' 中输入 '输出'\nSetField | 输入关键词搜索 | idx=-1 | 输出\n\n# 等待0.5s\nSleep | 0.5s\n\n# 点击最后一个输出\nClick | 输出 | idx=-1",
        "output": "这段代码主要作用是：在最后一个\"输入关键词搜索\"字段中输入\"输出\"，等待0.5秒后点击最后一个\"输出\"文本。\n\n其中用到了以下关键字：\n- SetField\n- Sleep \n- Click\n\n这些关键字的用法是：\n- SetField | 输入关键词搜索 | idx=-1 | 输出：在最后一个(idx=-1)\"输入关键词搜索\"字段中输入\"输出\"值\n- Sleep | 0.5s：等待0.5秒\n- Click | 输出 | idx=-1：点击页面中最后一个(idx=-1)\"输出\"文本"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 '新建数据集'\nClick | 新建数据集\n\n# 判断页面是否存在 '新建数据集后前往编辑维度指标' \n${exist}  IsExisting | 新建数据集后前往编辑维度指标\n\n# 如果存在，则点击\nIF  ${exist}\n    Click  | 新建数据集后前往编辑维度指标\nEND",
        "output": "这段代码主要作用是：点击\"新建数据集\"按钮，并检查是否存在\"新建数据集后前往编辑维度指标\"文本，如果存在则点击该文本。\n其中用到了以下关键字：Click, IsExisting\n这些关键字的用法是：\n- Click: 点击页面上的文本或元素\n- IsExisting: 判断页面上是否存在指定的文本或元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断变量 ${输出数据集名称} 是否等于 ‘Clickhouse数据集UI专用’\n${isEqual} =  Evaluate  '${输出数据集名称}' == 'Clickhouse数据集UI专用'\n# 如果 ${isEqual} 为真，则在名称中输入此值，否则就调用 ‘生成指定前缀和带有时间戳后缀的名称’ 关键字，使用 ${输出数据集名称} 为参数，生成一个名称并填入\nIF  ${isEqual}\n    SetField | 名称 | ${输出数据集名称}\nELSE\n    ${newName} =  生成指定前缀和带有时间戳后缀的名称  ${输出数据集名称}\n    SetField | 名称 | ${newName}\nEND",
        "output": "如果变量 ${输出数据集名称} 等于 ‘Clickhouse数据集UI专用’，就在名称中输入此值，否则就调用 ‘生成指定前缀和带有时间戳后缀的名称’ 关键字，使用 ${输出数据集名称} 为参数，生成一个名称并填入"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 ‘类型’ 为ClickHouse\nSetField | 类型 | ClickHouse\n\n# 尝试点击 ‘高级配置’\nClickIfExists | 高级配置\n\n# 在 ‘集群’ 中输入 rangers\nSetField | 集群 | rangers\n\n# 点击确定\nClick | 确定\n\n# 等待确定按钮消失\nWaitElemDisappear | button:contains(确定)",
        "output": "这段代码主要作用是：设置数据库类型为ClickHouse，尝试配置高级选项，输入集群名称并确认操作。\n其中用到了以下关键字：SetField, ClickIfExists, Click, WaitElemDisappear\n这些关键字的用法是：\n- SetField: 操作页面字段控件并输入指定值\n- ClickIfExists: 尝试点击存在的元素\n- Click: 点击指定文本/元素\n- WaitElemDisappear: 等待指定元素从页面消失"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在最后一个 ‘输入关键词搜索’ 中输入 ‘输出’\nSetField | 输入关键词搜索 | 输出 | idx=-1\n\n# 点击 div class包含leafNodes 中的文本为 输出 的 span\nClickElem | div[class*=leafNodes] span:contains(输出)",
        "output": "这段代码主要作用是：在页面中设置字段值并点击特定元素。\n其中用到了以下关键字：SetField, ClickElem\n这些关键字的用法是：\n1. SetField | 输入关键词搜索 | 输出 | idx=-1 - 在最后一个名为\"输入关键词搜索\"的字段中输入\"输出\"\n2. ClickElem | div[class*=leafNodes] span:contains(输出) - 点击class包含leafNodes的div中文本为\"输出\"的span元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${cookie}  Get Cookies",
        "output": "这段RF自动化脚本的主要功能是获取当前浏览器的所有Cookie信息，并存储在变量`${cookie}`中。这样，在后续的测试用例中，我们可以通过`${cookie}`这个变量来获取或者操作浏览器的Cookie信息，实现对特定测试场景的自动化控制。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置数据连接名称\nSetField | 数据连接名称 | xxx\n\n# 设置鉴权方式为用户名密码\nSetField | 鉴权方式 | 用户名密码\n\n# 设置用户名\nSetField | 用户名 | xxx\n\n# 设置密码\nSetField | 密码 | xxx\n\n# 设置连接方式为JDBC\nSetField | 连接方式 | JDBC\n\n# 设置JDBC连接串\nSetField | JDBC连接串 | xxx",
        "output": "以上代码的含义是针对一个数据源的连接设置进行配置。具体来说，首先把数据连接名称设置为\"xxx\"，然后设置鉴权方式为\"用户名密码\"。接着设置用户名和密码都为\"xxx\"。再将连接方式设置为\"JDBC\"，最后设置JDBC连接串为\"xxx\"。总的来说，这是一种对数据源进行配置的方式，通过设置各种参数，确保我们可以成功连接到目标数据源。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "新建一个看板\n    [Arguments]  ${name}\n    ClickElem | ${ele}\n    Click | 新建看板\n    SetField | 看板名称 | ${name}\n    Click | 确定",
        "output": "# 写一个关键字：新建一个看板\n# 点击元素ele, 点击新建看板，输入看板名称${name},点击确定按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickIfExists | 预览探查",
        "output": "这段代码的含义是：如果存在\"预览探查\"这个文本，就点击它。\"ClickIfExists\"是一个自定义关键字，它的功能是在页面上查找给定的文本，如果找到这个文本，就会点击它，如果没有找到，就会跳过点击操作，不会报错。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 列表页面，点击【新建文件夹】按钮\nClick | 新建文件夹\n\n# 输入文件夹名称 xxx\nSetField | 文件夹名称 | xxx\n\n# 选择路径 yyy\nSetField | 路径 | yyy\n\n# 点击【确定】按钮\nClick | 确定",
        "output": "1、列表页面，点击【新建文件夹】按钮，输入文件夹名称 xxx，选择路径 yyy\n2、点击【确定】按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 页面应该包含xxx\nCheckHasText | xxx",
        "output": "这段代码的含义是：检查当前页面中包含文本\"xxx\"。\"CheckHasText\"关键字用于确认页面中是否存在指定的文本内容，这里是\"xxx\"，如果页面中不存在\"xxx\"，那么此测试将失败"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "新建文件夹\n    [Arguments]  ${name}  ${path}=根目录\n    Click | 列表\n    # 在列表页面点击新建文件夹按钮\n    Click | 新建文件夹\n    # 输入文件夹名称\n    SetField | 文件夹名称 | ${name}\n    # 选择路径\n    SetField | 路径 | ${path}\n    # 点击确定按钮\n    Click | 确定\n    # 页面应该包含name\n    Page Should Contain | ${name}",
        "output": "写一个名为：“新建文件夹” 的关键字，接受name，path（默认值为：根目录）参数，作用是：\n# 点击列表\n# 1、列表页面，点击【新建文件夹】按钮，输入文件夹名称 name，选择路径 path\n# 2、点击【确定】按钮 \n# 页面应该包含 name"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向 https://www.baidu.com 发送 GET 请求\n${resp_json}  UiSendRequest | GET | https://www.baidu.com",
        "output": "该段代码的含义是：向 \"https://www.baidu.com\" 发送一个 GET 请求，并将返回的 JSON 格式数据存储在变量 ${resp_json} 中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 初始化一个空字典用于存放cookies的name和value\n${cookies_dict}  Create Dictionary\n\n# 遍历cookies列表\nFOR  ${item}  IN  @{cookies}\n    # 获取cookie的name字段值\n    ${name}  Get From Dictionary  ${item}  name\n    # 获取cookie的value字段值\n    ${value}  Get From Dictionary  ${item}  value\n    # 把name和value字段值放到字典cookies_dict中\n    Set To Dictionary  ${cookies_dict}  ${name}  ${value}\nEND\n# 返回cookies_dict字典\n[Return]  ${cookies_dict}",
        "output": "对于变量 ${cookies} 中的每一项数据，获取其中的 name 和 value 字段值，把他们都放到一个字典中返回"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 发送GET请求，url是https://www.baidu.com，cookie是${cookie_dict}\n${resp_json}  UiSendRequest | GET | https://www.baidu.com | ${None} | {\"Cookie\": ${cookie_dict}}",
        "output": "这段代码的含义是向网址 \"https://www.baidu.com\" 发送一个 HTTP GET 请求，并在请求头中包含一个名为 \"Cookie\" 的字段，其值为 ${cookie_dict} 变量所代表的值。这样的操作通常用于模拟用户在浏览器中输入网址进行访问的行为，同时将用户在本地保存的cookie一同发送，以便实现诸如用户验证，记住用户状态等功能。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击办公平台\nClick | 办公平台\n# 切换到新窗口\nToNewWindow",
        "output": "这段代码的含义是：\n\n首先，点击页面上标记为\"办公平台\"的元素，可能是一个按钮、一个链接或者其他可点击的元素。\n\n然后，切换到新弹出的窗口。这可能是因为点击\"办公平台\"后，网页会在新的窗口或者标签页中打开相关内容，所以需要切换到新窗口以进行后续的操作。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "#判断页面是否包含SAML 2.0字样\n${exist}  IsExisting | SAML 2.0\n# 如果包含SAML 2.0字样就点击接入新平台按钮\nIF  ${exist}\n    Click | 接入新平台\nELSE\n    Log | 结束\nEND",
        "output": "判断页面是否包含SAML 2.0字样 如果包含SAML 2.0字样就点击接入新平台按钮 否则就结束"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 请输入列名 为 app\nSetField | 请输入列名 | app\n\n# 设置 请输入原始列名 为 app\nSetField | 请输入原始列名 | app\n\n# 点击提交\nClick | 提交\n\n# 校验页面不包含: \"每个单元格对应了多个填充值\"\nCheckNotHas | 每个单元格对应了多个填充值",
        "output": "设置 请输入列名 为 app， 请输入原始列名 为 app，然后点击提交，并校验页面不包含: \"每个单元格对应了多个填充值\""
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击添加\nClick | 添加\n\n# 设置‘计算列名称’为task_date\nSetField | 计算列名称 | task_date\n\n# 设置字段类型为date\nSetField | 字段类型 | date\n\n# 编辑表达式为{TASK_DATE}\nSetField | 编辑表达式 | {TASK_DATE}\n\n# 点击确定\nClick | 确定",
        "output": "点击添加，设置 ‘计算列名称’ 为 task_date，字段类型为 date，编辑表达式 为 {TASK_DATE}，然后点击确定"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击最后一个 gender\nClick | gender | idx=-1",
        "output": "点击最后一个包含\"gender\"文本的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 ‘选择转置字段’ 为 gender\nSetField | 选择转置字段 | gender\n\n# 点击 ‘选择转置字段’\nClick | 选择转置字段\n\n# ‘转置字段属性名’ 为 aa\nSetField | 转置字段属性名 | aa\n\n# ‘转置字段属性值’ 为 bb\nSetField | 转置字段属性值 | bb",
        "output": "设置 ‘选择转置字段’ 为 gender, 然后点击 ‘选择转置字段’, ‘转置字段属性名’ 为 aa, ‘转置字段属性值’ 为 bb"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 span class包含filterItem 的元素为 gender\nFillArea | span[class*=filterItem] | gender",
        "output": "设置 span class包含filterItem 的元素为 gender"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待新建按钮出现\nWaitElem | button:contains('新建')\n# 鼠标移动到新建按钮\nMoTo | 新建\n# 点击新建任务\nClick | 新建任务",
        "output": "等待文本为新建的button出现，然后将鼠标移动到新建上，并点击新建任务"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${表信息}   Evaluate  '${表信息}'[0:14]",
        "output": "该行代码的含义是创建一个名为\"表信息\"的变量，该变量的值是原始\"表信息\"变量的前14个字符。Evaluate关键字将会执行括号内的Python表达式。\n\n在这个例子中，'${表信息}'[0:14]是一个Python的切片操作，表示取原始\"表信息\"变量的第一个字符到第14个字符，生成一个新的字符串。\n\n这种技术常用于处理字符串，比如提取字符串中的一部分，或者在字符串中搜索特定的字符或字符序列。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到元素 svg[class*=arco-icon-more]\nMoToElem | svg[class*='arco-icon-more']\n\n# 点击删除\nClick | 删除",
        "output": "鼠标移动到元素 svg[class*=arco-icon-more]'， 然后点击删除"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到表格行 ‘可视化建模_autotest’ 中的 svg class包含arco-icon-more的元素上\nMoveToElemOfRow | 可视化建模_autotest | svg[class*=arco-icon-more]\n\n# 点击删除\nClick | 删除",
        "output": "鼠标移动到表格行 ‘可视化建模_autotest’ 中的 svg class包含arco-icon-more的元素上，然后点击删除"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickElem | div[role='menuitem'] span:contains('删除')",
        "output": "在页面上查找具有 role 属性值为 'menuitem' 的 div 元素，并在这些元素中进一步查找包含文本 '删除' 的 span 子元素，并执行点击操作"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将 education_level 拖拽到 ‘请拖入行转列字段’ 中\nDAndD | education_level | 请拖入行转列字段",
        "output": "该代码的含义是：将网页元素 `education_level` 拖拽到另一个网页元素 `请拖入行转列字段` 的位置上。这是一种常见的测试方式，模拟用户进行拖拽操作，例如在某些需要用户自定义界面布局的情况下，或者在某些需要通过拖拽来完成数据输入的情况下。在这个例子中，可能是在进行某种数据处理或数据展示的操作，需要将 `education_level` 这一项作为行转列的字段，所以将其拖拽到对应的位置上。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 创建随机变量name, 以多分类模型开头\n${random_string}  GenerateRandom  | 7 | [LETTERS][NUMBERS]\n${name}  Set Variable | 多分类模型${random_string}\n\n# 创建随机变量desc，以多分类模型开头\n${random_string}  GenerateRandom  | 10 | [LETTERS][NUMBERS]\n${desc}  Set Variable | 多分类模型${random_string}",
        "output": "创建随机变量name, 以多分类模型开头，随机变量desc，以多分类模型开头"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置参与预览计算的数据量\n    [Arguments]  ${data}\n    ${is_number}  Evaluate  str(${data}).isdigit()\n    IF  ${is_number}\n        FillArea  input.arco-input-size-mini  ${data}\n    ELSE\n        Click  ${data}\n    END",
        "output": "写一个名为：“设置参与预览计算的数据量” 的关键字，接受 data 参数，逻辑为：如果 data 是数值，则向 input.arco-input-size-mini 输入此值，否则点击data即可"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 模型名称 | ${name}\nSetField | 模型描述 | ${desc}",
        "output": "将模型名称和模型描述分别设置为  ${name} 和 ${desc}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击删除，不包含‘批量删除’\nClick | 删除 | exclude=批量删除",
        "output": "这段脚本的含义是点击网页上的\"删除\"按钮，但排除包含\"批量删除\"的按钮。这里的\"exclude=批量删除\"的意思是在所有的\"删除\"按钮中去掉那些含有\"批量删除\"的按钮，剩下的在进行点击操作。也就是说，我们只对纯粹的\"删除\"按钮进行操作，而忽略所有包含\"批量删除\"的按钮。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置特征值和标签列\n    [Arguments]  ${import}=重要性>0.5  ${name}=dependent_count\n    SetField | 标签列 | ${name}\n    Click | 按特征重要性选择\n    WaitTextDisappear | 计算中\n    Click | ${import}\n    Click | 确定\n    WaitTextDisappear | 确定",
        "output": "写一个名为：“设置特征值和标签列” 的关键字，接受参数 import 和 name，默认值分别为 ‘重要性>0.5’ 和 'dependent_count', 逻辑是：\n设置标签列的值为name，然后点击 ‘按特征重要性选择’，等待 ‘计算中’ 消失, 然后点击import，最后点击确定，并等待确定消失"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "IF  ${wait}\n    WaitText | ${wait}\nEND",
        "output": "解释如下：\n- \"IF  ${wait}\"：这是Robot Framework的条件语句，表示如果${wait}变量存在值（即非空）时，就执行下面的语句。\n- \"WaitText | ${wait}\"：这是使用WaitText关键字，等待某个页面元素上的文本变为${wait}，其中${wait}是传入的参数。\n- \"END\"：表示IF语句的结束。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 如果 ${wait} 为真，就等待页面出现 ${wait}, 超时为 ${time}\nIF  ${wait}\n    WaitText | ${wait} | timeout=${time}\nEND",
        "output": "如果 ${wait} 为真，就等待页面出现 ${wait}, 超时为 ${time}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 定义元素选择器\n${selector}  Set Variable  div.view-lines.monaco-mouse-cursor-text\n\n# 获取需要粘贴的文本\n${text_to_paste}  Set Variable  ${数据集信息列表}[内置Hive][table]\n\n# 将文本粘贴到指定元素中\nPaste | ${selector} | ${text_to_paste}",
        "output": "将 ${数据集信息列表}[内置Hive][table]  粘贴到元素 div.view-lines.monaco-mouse-cursor-text"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "向 div.view-lines.monaco-mouse-cursor-text 粘贴 ${表信息}\nPaste | div.view-lines.monaco-mouse-cursor-text | ${表信息}\n\n# 依次点击格式化和解析\nClickTextOneByOne | 格式化 | 解析",
        "output": "将 ${表信息}  粘贴到元素 div.view-lines.monaco-mouse-cursor-text，然后依次点击 格式化 和 解析"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "自定义SQL插入查询语句\n    [Arguments]  ${表信息}\n    # 等待元素 div.view-line 出现\n    WaitElem | div.view-line\n    # 等待 0.5 秒\n    Sleep | 0.5s\n    # 获取当前激活元素\n    ${elem}  GetActiveElem\n    # 将 ${表信息} 粘贴到当前激活元素中\n    Paste | ${elem} | ${表信息}",
        "output": "写一个关键字，自定义SQL自动插入查询语句，接受参数 ${表信息}，逻辑是：先等待元素 div.view-line 出现，0.5s后，获取当前激活元素 elem，然后将 ${表信息} 粘贴到其中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到元素 svg[class*=arco-icon-more]\nMoToElem | svg[class*='arco-icon-more'] \n\n# 点击删除，但不包括‘批量删除’\nClick | 删除 | exclude=批量删除",
        "output": "鼠标移动到元素 svg[class*=arco-icon-more]'， 然后点击删除，但不包括‘批量删除’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "RefreshPage",
        "output": "刷新页面"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面上是否存在SAML 2.0\n${exist}  IsExisting | SAML 2.0\n# 如果SAML 2.0不存在，那么接入新平台，并设置平台类型和名称为SAML 2.0\nIF  not ${exist}\n    Click  | 接入新平台\n    SetField  | 平台类型 | SAML 2.0\n    SetField  | 平台名称 | SAML 2.0\nEND",
        "output": "如果页面上不存在SAML 2.0 就点击接入新平台 设置平台类型为SAML 2.0，设置平台名称为SAML 2.0"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "账号密码登录\n    [Arguments]  ${user}=${USERNAME}  ${password}=${PASSWORD}\n    SetField | 账号 | ${user}\n    SetField | 密码 | ${password}\n    Click | 登录\n    WaitLoading",
        "output": "写一个名为“账号密码登录”的关键字，接受 user, password 参数，默认值分别为：${USERNAME} 和 ${PASSWORD}，业务逻辑为：输入账号、密码，然后点击登录，并等待页面加载完成"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "接入新平台\n    [Arguments]  ${name}  &{kwargs}\n    ${exist}  IsExisting | ${name}\n    IF  not ${exist}\n        Click  接入新平台\n        FOR  ${key}  ${value}  IN  &{kwargs}\n            SetField | ${key} | ${value}\n        END\n        Click  确定\n        CheckHas | 创建成功 | ${name}\n    END",
        "output": "这段代码主要作用是：创建一个名为\"接入新平台\"的关键字，用于处理接入新平台的操作流程。\n\n其中用到了以下关键字：\n- IsExisting\n- Click\n- SetField\n- CheckHas\n\n这些关键字的用法是：\n1. 创建了一个名为\"接入新平台\"的关键字，接受两个参数：\n   - ${name}: 平台名称\n   - &{kwargs}: 键值对参数，表示需要填写的字段信息\n2. 内部逻辑：\n   - 首先检查平台是否已存在(使用IsExisting关键字)\n   - 如果不存在则：\n     - 点击\"接入新平台\"按钮\n     - 遍历kwargs参数，逐个设置字段值(使用SetField关键字)\n     - 点击\"确定\"按钮\n     - 校验页面包含\"创建成功\"和平台名称(使用CheckHas关键字)"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "点击${name}并切换到新窗口\n    [Arguments]  ${name}\n    ${name}=  Evaluate  '${name}'.strip()\n    Click | ${name}\n    ToNewWindow",
        "output": "这段代码主要作用是：创建一个名为\"点击${name}并切换到新窗口\"的自定义关键字，用于点击指定文本后切换到新打开的浏览器窗口。\n\n其中用到了以下关键字：\n1. Click - 用于点击页面上的文本\n2. ToNewWindow - 用于切换到新打开的浏览器窗口\n\n这些关键字的用法是：\n1. 关键字接收一个参数${name}，表示要点击的文本内容\n2. 使用Evaluate对${name}进行去空格处理\n3. 使用Click关键字点击处理后的文本\n4. 使用ToNewWindow关键字切换到新窗口"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "访问主页\n    [Arguments]  ${url}=${HOST}\n    OpenUrl  ${url}",
        "output": "写一个“访问主页”的关键字，接受参数 url，默认值为${HOST}，作用为：访问给定的 url"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 ${index} 表格行中 操作 中的最后一个 'arco-icon-more'\nClickElemOfRow | ${index} | svg[class*='arco-icon-more']:eq(-1)\n\n# 点击删除，但不包括‘批量删除’\nClick | 删除 | exclude=批量删除",
        "output": "点击 ${index} 表格行中 操作 中的最后一个 svg[class*=arco-icon-more]'， 然后点击删除，但不包括‘批量删除’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickIfExists | txt1 | txt2",
        "output": "这段代码的含义是，它会尝试点击页面上的文本txt1或txt2，其中，它优先点击找到的第一个文本。\n\"ClickIfExists\"这个关键字的作用是在页面上找到参数中的任一文本，并尝试点击它。如果没有找到这些文本，则不会进行任何操作"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 发送删除键\nSendText | ${KEY_BACKSPACE}",
        "output": "发送删除键"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置数据集抽取方式\n    [Arguments]  ${type}\n    FillArea  | div[class*=arco-select-single] | ${type}",
        "output": "写一个名为：“设置数据集抽取方式” 的关键字，接受参数 type，表示抽取类型，作用是：将 div class包含arco-select-single 的元素设置为 type"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击${ele}中第${i}个事件公共属性\nClickElem | ${ele} [event-property]:eq(${i}-1)",
        "output": "点击${ele}中第${i}个事件公共属性"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 创建变量 i 为 1\n${i}   Set Variable  1",
        "output": "创建变量 i 为 1"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待元素item出现，45秒超时\nWaitElem | ${item} | timeout=45",
        "output": "这段代码的含义是：使用关键字\"WaitElem\"等待一个由jquery选择器\"{item}\"表示的元素在网页上出现，最多等待45秒。如果45秒过后元素仍未出现，则执行将失败并抛出异常。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待文本item出现，45秒超时\nWaitText | item | timeout=45",
        "output": "这段代码的含义是：在规定的时间（45秒）内，等待页面上出现指定的文本（'item'）。如果在规定时间内找到了指定的文本，那么代码会继续执行；如果超过了规定时间还没有找到指定文本，那么测试将会失败。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 集团管理员输入框输入admin${usn}1 \nSetField | 集团管理员 | admin${usn}1\n\n# 选择admin${usn}1\nClick | admin${usn}1\n\n# 点击确定\nClick | 确定",
        "output": "集团管理员输入框输入admin${usn}1 选择admin${usn}1 并点击确定"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "DClick | 打开",
        "output": "对于给出的代码`DClick | 打开`，这是RobotFramework指令的一种形式。在这个指令中，“DClick”是关键字，“打开”是这个关键字的参数。这条指令的意思是执行一个双击操作"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "点击任一文本\n    [Arguments]  @{args}\n    ClickAny  @{args}",
        "output": "写一个关键字：“点击任一文本”，接受 args 参数，作用是尝试点击给定的一个或多个 args"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击创建或新建\nClickAny | 创建 | 新建",
        "output": "这段代码的含义是：尝试点击页面上的 \"创建\" 或 \"新建\" 文本。\"创建\" 和 \"新建\" 是两个参数，`ClickAny` 是一个关键字，可以尝试点击多个文本中的一个。如果在页面上找到 \"创建\" 文本，就点击它；如果找不到 \"创建\"，就尝试点击 \"新建\" 文本。这对应的操作场景可能是在一个动态的页面上，有时显示为 \"创建\" 按钮，有时显示为 \"新建\" 按钮。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击创建或新建，10s超时\nClickAny | 创建 | 新建 | timeout=10",
        "output": "点击创建或新建，10s超时"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${is_enter}    Evaluate    'enter' in $kwargs",
        "output": "这行代码的含义是查询Python字典kwargs中是否存在键'enter'，如果存在则返回True，不存在则返回False，并将结果赋值给变量is_enter。其中$kwargs是一个Python字典。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "IF  ${is_enter}\n    Click  xxx\nELSE\n    Click  yyy\nEND",
        "output": "如果 ${is_enter} 真则 点击xxx, 否则 点击 yyy"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "IF  '${数据源类型}' == 'CSV' or '${数据源类型}' == 'Excel'\n    MoTo  ${数据源类型}\nELSE\n    Click  ${数据源类型}\nEND",
        "output": "如果 ${数据源类型} 为 CSV 或 Excel 则将鼠标移动到文本 ${数据源类型} 上，否则点击 ${数据源类型}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 勾选Sheet\nCheckBoxOn | Sheet",
        "output": "勾选Sheet"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 如果页面存在文本 ‘Sheet’ 就勾选\n${exist}  IsExisting | Sheet\nIF  ${exist}\n    CheckBoxOn | Sheet\nEND",
        "output": "如果页面存在文本 ‘Sheet’ 就勾选"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "更多操作\n    [Arguments]  ${name}  ${ele}\n    MoTo  ${name}\n    ClickElem  ${ele}",
        "output": "# 写一个名为“更多操作”的关键字：\n# 1. 接收参数name, 鼠标放置在name上，然后点击元素ele"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 使用RF Builtin关键字获取当前时间并转换为时间戳\n${current_time}  Get Time  epoch",
        "output": "这段代码是使用Robot Framework的内置关键字\"Get Time\"获取当前的时间，并且把这个时间转换为时间戳格式的。\"epoch\"是用来指定时间的格式，让它返回Unix时间戳，也就是从1970年1月1日00:00:00开始的秒数。因此，这段代码的作用是得到当前的Unix时间戳并将其赋值给变量${current_time}。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取当前时间戳并转换成文本\n${timestamp}  Evaluate  str(int(time.time()))",
        "output": "这段代码的含义是获取当前的时间戳（秒级）并且将这个时间戳转换为字符串类型。\n\n具体来说：\n- `time.time()` 是Python的标准库函数，返回当前时间的时间戳（以秒为单位）。\n- `int(time.time())` 将时间戳的小数部分删除，获取秒级的时间戳。\n- `str(int(time.time()))` 将这个整数时间戳转换为字符串类型。\n- `${timestamp}  Evaluate  str(int(time.time()))`是使用Robot Framework的Evaluate关键字执行上面描述的Python代码，并将结果赋值给变量`${timestamp}`。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查端口是否为80\nIF  \"${PORT}\" != \"80\"\n    # 如果端口不是80，将DOMAIN和PORT用:拼接\n    ${DOMAIN_PORT}  Evaluate  \"${DOMAIN}\" + \":\" + \"${PORT}\"\nELSE\n    # 如果端口是80，不做处理\n    ${DOMAIN_PORT}  Set Variable  ${DOMAIN}\nEND",
        "output": "设置一个变量PORT，如果端口是“80”，不处理，如果不是则将DOMAIN和PORT用:拼接"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "打开${name}看板的更多操作\n    [Arguments]  ${name}\n    ${elem}  Set Variable  div[class*='arco-tree-node-is-leaf']:contains('${name}')\n    MoToElem  |  ${elem}\n    ClickElem  |  ${elem} svg[class*='arco-icon-more']",
        "output": "这段代码主要作用是：创建一个名为\"打开${name}看板的更多操作\"的关键字，用于定位并点击指定名称看板的更多操作图标。\n\n其中用到了以下关键字：\n- Set Variable\n- MoToElem\n- ClickElem\n\n这些关键字的用法是：\n1. Set Variable 用于创建变量${elem}，其值为包含指定名称${name}的叶子节点div元素选择器\n2. MoToElem 用于将鼠标移动到定位到的看板元素上\n3. ClickElem 用于点击看板元素中的更多操作图标(svg图标)\n\n创建的关键字：\n- 名称：打开${name}看板的更多操作\n- 参数：${name} (看板名称)\n- 逻辑：\n  1. 构建包含指定名称的看板元素选择器\n  2. 将鼠标移动到该看板元素上\n  3. 点击看板元素中的更多操作图标"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "RefreshPage",
        "output": "刷新浏览器"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "测试\n    [Arguments]  ${a}\n    Click | 可视化查询\n    Click | 确定\n    # 检查页面是否包含a\n    CheckHas | ${a}",
        "output": "这段代码主要作用是：创建一个名为\"测试\"的关键字，接受参数${a}，执行点击操作并检查页面内容\n其中用到了以下关键字：Click, CheckHas\n这些关键字的用法是：\n- Click | 可视化查询：点击文本为\"可视化查询\"的元素\n- Click | 确定：点击文本为\"确定\"的元素\n- CheckHas | ${a}：检查页面是否包含参数${a}指定的文本"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取变量${name}的前12个字符\n${first_12_chars}   Evaluate  \"${name}\"[:12] ",
        "output": "这段代码主要作用是：获取变量${name}的前12个字符\n其中用到了以下关键字：Evaluate\n这些关键字的用法是：Evaluate用于执行Python表达式，这里通过切片操作获取字符串前12个字符"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "权限移交给第${num}个用户\n    [Arguments]  ${num}\n    # 点击文本“请选择移交至”\n    Click  |  请选择移交至\n    # 点击第num个option元素\n    ClickElem  |  option:eq(${num-1})",
        "output": "这段代码主要作用是：创建一个名为\"权限移交给第${num}个用户\"的关键字，用于将权限移交给指定序号的用户。\n\n其中用到了以下关键字：\n- Click\n- ClickElem\n\n这些关键字的用法是：\n1. 创建了一个名为\"权限移交给第${num}个用户\"的关键字，接受一个参数${num}表示用户序号\n2. 首先点击文本\"请选择移交至\"\n3. 然后点击第${num}个option元素（使用jquery选择器option:eq(${num-1})定位）"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断 ${operate} 是否包含 ‘取消’ 且元素 ${star} 的 class 中包含 subscribed\n${is_cancel}  Evaluate  '${operate}' in '取消'\n${class}  Get Element Attribute  ${star}  class\n${is_subscribed}  Evaluate  'subscribed' in '${class}'\nIF  ${is_cancel} and ${is_subscribed}\n    # 如果 ${operate} 包含 ‘取消’ 且元素 ${star} 的 class 中包含 subscribed， 则点击元素 ${star}\n    ClickElem  ${star}\nEND",
        "output": "这段代码主要作用是：判断变量${operate}是否包含\"取消\"文本，并且元素${star}的class属性是否包含\"subscribed\"，如果两个条件都满足则点击该元素。\n其中用到了以下关键字：Evaluate, Get Element Attribute, IF, ClickElem\n这些关键字的用法是：\n- Evaluate: 执行Python表达式判断字符串包含关系\n- Get Element Attribute: 获取元素的class属性值\n- IF: 条件判断语句\n- ClickElem: 点击指定元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${class}  GetElemAttr  |  ${star}  |  class",
        "output": "这段代码的含义是调用关键字`GetElemAttr`来获取元素`${star}`的`class`属性值，并将获取到的值赋给变量`${class}`。在这个过程中，`${star}`是需要获取属性的元素的引用或定位符，`class`是要获取的属性的名称，`${class}`是用于存储获取到的属性值的变量。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "删除办公平台\n    [Arguments]  ${name}\n    ${exist}  IsExisting  ${name}\n    IF  ${exist}\n        Click  删除按钮\n        Click  ${name}\n        Click  确定\n    END",
        "output": "写一个 “删除办公平台” 的关键字，接受参数 name ，业务逻辑为：如果页面存在 name 就点击删除按钮下拉列表里面的 name，然后点击确定"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置请输入图表名称为${name}, 并等待1秒\nSetField | 请输入图表名称 | ${name}\nSleep | 1s",
        "output": "该段代码的含义是：\n\n首先，通过使用“SetField”关键字在名为“请输入图表名称”的输入字段中填入变量${name}的值。\"SetField\"关键字的功能是找到页面上指定名称的字段并向其输入指定的值。\n\n然后，通过使用“Sleep”关键字使程序暂停运行1秒钟"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SendText | 开始降低了开发建设开了房间",
        "output": "输入内容 开始降低了开发建设开了房间"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "CheckNotHas | name",
        "output": "校验页面不包含 name"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "打开${table_name}图表的更多操作\n    [Arguments]  ${table_name}\n    # 查找 class为arco-card-header-title 且文本包含 table_name 的元素 ele\n    ${ele}  FindElem  .arco-card-header-title:contains(${table_name})\n    # 寻找ele的兄弟元素b_ele， b_ele元素的class包含CardContainer__action__cSyD7\n    ${b_ele_selector}  Set Variable  ${ele} ~ [class*=CardContainer__action__cSyD7]\n    ClickElem  ${b_ele_selector}",
        "output": "这段代码主要作用是：创建一个名为\"打开${table_name}图表的更多操作\"的关键字，用于点击指定表格名称对应的更多操作按钮。\n\n其中用到了以下关键字：\n- FindElem：查找包含指定表格名称的卡片标题元素\n- Set Variable：设置变量存储jquery选择器\n- ClickElem：点击找到的更多操作按钮元素\n\n这些关键字的用法是：\n1. 接受${table_name}作为参数，表示要操作的表格名称\n2. 使用FindElem查找class为arco-card-header-title且文本包含${table_name}的元素\n3. 使用Set Variable构建选择器，定位找到元素的兄弟元素（class包含CardContainer__action__cSyD7）\n4. 使用ClickElem点击找到的更多操作按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "打开${table_name}图表的更多操作\n    [Arguments]  ${table_name}\n    # 查找 class包含arco-card-header-title 且文本为 table_name 的元素 ele\n    ${ele}  FindElem  .arco-card-header-title:contains(${table_name})\n\n    # 点击ele 右侧的元素\n    ClickElemToTheDirectionOf  ${ele}  right",
        "output": "这段代码主要作用是：创建一个名为\"打开${table_name}图表的更多操作\"的关键字，用于定位并点击指定名称的图表右侧的更多操作按钮。\n\n其中用到了以下关键字：\n- FindElem\n- ClickElemToTheDirectionOf\n\n这些关键字的用法是：\n1. FindElem 用于查找class包含\"arco-card-header-title\"且文本内容匹配${table_name}的元素\n2. ClickElemToTheDirectionOf 用于点击指定元素右侧的默认元素\n\n创建的关键字：\n- 名称：打开${table_name}图表的更多操作\n- 参数：${table_name} (图表名称)\n- 逻辑：\n  1. 先定位包含指定名称的图表标题元素\n  2. 然后点击该元素右侧的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "点击帮助文档\n    # 判断 a.navi-action 是否存在\n    ${exist}  IsElemExisting | a.navi-action\n    IF  ${exist}\n        # 点击 a.navi-action\n        ClickElem | a.navi-action\n        # 切换到新窗口\n        ToNewWindow\n        # 校验页面包含 增长营销套件私有化门户\n        CheckHas | 增长营销套件私有化门户\n    END",
        "output": "写一个名为：“点击帮助文档”的关键字，业务逻辑为：如果页面存在 a.navi-action，就点击这个 elem，并等待页面切换到新打开的窗口并校验页面包含  增长营销套件私有化门户"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入 admin\nSendText | admin",
        "output": "输入 admin"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "检查企业日历\n    CheckHas | 企业日历 | 节假日 | 非交易日 | 导入 | 导出 | 编辑 | 月 | 年",
        "output": "写一个名为：“检查企业日历”的关键字，作用是：检查企业日历页面包含 企业日历 节假日 非交易日 导入 导出 编辑 月 年"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "FillArea | div[class=arco-select-view] | 全部接入来源",
        "output": "选中页面class=arco-select-view的组件，并选择文本为全部接入来源的选项"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "导入企业日历\n    # 点击导入按钮\n    Click | 导入\n    # 上传名为import_calendar.xlsx的文件\n    UploadFile | import_calendar.xlsx\n    # 点击确定按钮\n    Click | 确定\n    # 校验页面包含成功文本\n    CheckHas | 成功",
        "output": "这段代码主要作用是：创建一个名为\"导入企业日历\"的关键字，用于执行导入企业日历文件并验证导入成功的操作。\n其中用到了以下关键字：Click, UploadFile, CheckHas\n这些关键字的用法是：\n1. Click | 导入 - 点击页面上的\"导入\"文本按钮\n2. UploadFile | import_calendar.xlsx - 上传名为import_calendar.xlsx的文件\n3. Click | 确定 - 点击页面上的\"确定\"文本按钮  \n4. CheckHas | 成功 - 校验页面包含\"成功\"文本\n\n创建的关键字说明：\n关键字名称：导入企业日历\n参数：无\n内部逻辑：\n1. 点击导入按钮\n2. 上传指定Excel文件\n3. 点击确定按钮\n4. 验证导入操作是否成功"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "csv转Excel\n    ${csv_file}  Set Variable  calendar.csv\n    ${xlsx_file}  Set Variable  import_calendar.xlsx\n    ${csv_data}  Evaluate  pd.read_csv(${csv_file})\n    Evaluate  ${csv_data}.to_excel(${xlsx_file}, index=None, header=True)  modules=pd",
        "output": "这段代码主要作用是：创建一个名为\"csv转Excel\"的关键字，用于将CSV文件转换为Excel文件。\n\n其中用到了以下关键字：\n- Set Variable: 用于设置变量值\n- Evaluate: 用于执行Python代码\n\n这些关键字的用法是：\n1. 创建了一个名为\"csv转Excel\"的关键字，不接受参数\n2. 内部逻辑：\n   - 首先设置CSV文件名变量为\"calendar.csv\"\n   - 设置Excel文件名变量为\"import_calendar.xlsx\"\n   - 使用pandas读取CSV文件数据\n   - 将CSV数据转换为Excel文件，不包含索引，保留表头"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 填写表格第一行内容为 a dd dd dd\nFillRow | 1 | a | dd | dd | dd",
        "output": "填写表格第一行内容为  a   dd   dd   dd"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置表格第一行的状态列为 是否健康\nFillCell | 1 | 状态 | 是否健康",
        "output": "设置表格第一行的状态列为  是否健康"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "FillRow | 2 | name | name ",
        "output": "填写表格第二行的内容为  name name "
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 填写 \"属性名\" 表格第二行的内容为 name name empty\nFillRow | 2 | name | name | empty | tbl=属性名",
        "output": "填写 “属性名” 表格第二行的内容为  name name empty"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "获取属性名表格的行数\n${rowCount}  GetRowCount | tbl=属性名",
        "output": "获取属性名表格的行数"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "添加业务对象属性\n    [Arguments]  @{args}\n    ${rows}  GetTableRowCount  | tbl=属性名\n    FillRow  | ${rows}  | @{args}  | tbl=属性名",
        "output": "# 写一个名为“添加业务对象属性”的关键字，逻辑为：\n# 1. 获取属性名表格的行数rows\n2. 填写 “属性名” 表格第 rows 行的内容为 多个参数args"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 计算一周前的日期\n${date} =  Evaluate  (datetime.datetime.now() - datetime.timedelta(days=7)).strftime('%Y-%m-%d')  modules=datetime\n\n# 填写一周前的日期到 \"开始日期\" 字段中\nSetField  |  开始日期  |  ${date}",
        "output": "获得一周前的日期，然后将此日期，填写到 “开始日期” 中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${x}   Set Variable  3",
        "output": "将变量 x 设置为 3"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${name}  GenerateRandom  | 10 | [LETTERS][NUMBERS]",
        "output": "创造一个用英文和数字组成的随机名字，总共十个字符"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 指标名称 | 事件指标 | 进组人均",
        "output": "将指标名称后面的两个下拉框分别选择事件指标和进组人均"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待3秒\nSleep  3s\n\n# 获取页面截图中的文本\n${txt}  GetPageScreenshotText\n\n# 校验截图中存在“制作视频创建成功”\nShould Contain  ${txt}  制作视频创建成功",
        "output": "等待3s, 然后校验页面截图中存在“制作视频创建成功”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${x}  Set Variable  5",
        "output": "创建变量 x = 5"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "FillRow | 1 | a | dd | dd | dd | tbl=事件分析",
        "output": "填写 '事件分析' 表格第一行内容为  a   dd   dd   dd"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获得一周前的日期，然后将此日期，填写到 “开始日期” 字段中\n${date_one_week_ago} =  Evaluate  (datetime.datetime.now() - datetime.timedelta(weeks=1)).strftime('%Y-%m-%d')  modules=datetime\nSetField  开始日期  ${date_one_week_ago}",
        "output": "获得一周前的日期，然后将此日期，填写到 “开始日期” 字段中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获得一周前的日期 (格式为：2023-11-11 20:54)，然后将此日期，填写到 “开始日期” 字段中\n${one_week_ago} =  Evaluate  (datetime.datetime.now() - datetime.timedelta(weeks=1)).strftime('%Y-%m-%d %H:%M')  modules=datetime\nSetField  开始日期  ${one_week_ago}",
        "output": "获得一周前的日期 (格式为：2023-11-11 20:54)，然后将此日期，填写到 “开始日期” 字段中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取当前光标所在元素\n${elem}  GetActiveElem",
        "output": "获取当前光标所在元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Paste | ${EMPTY} | 休闲鞋",
        "output": "向当前位置粘贴文本：休闲鞋"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 特征列映射 | avg",
        "output": "设置特征列映射 为 avg"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 计算从今天开始起算30天后的日期\n${date} =    Evaluate    (datetime.date.today() + datetime.timedelta(days=30)).strftime('%Y-%m-%d')    datetime\n\n# 在日期框中填入计算出的日期\nSetField    日期    ${date}",
        "output": "日期框填写从今天开始起算30天后"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "添加页面\n    ClickElem | div[title='新增页面'] svg",
        "output": "写一个名为：“添加页面” 的关键字，作用是：点击 title 为 ‘新增页面’ 的div中的后代元素 svg"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 计算一周前的日期并以 \"2023-11\" 格式展示\n${date} =    Evaluate    (datetime.datetime.now() - datetime.timedelta(days=7)).strftime(\"%Y-%m\")    datetime\nLog    ${date}",
        "output": "计算一周前的日期，以 “2023-11” 格式展示"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 计算一周之后的日期并格式化\n${date_in_week}    Evaluate    (datetime.datetime.now() + datetime.timedelta(weeks=1)).strftime(\"%Y-%m-%d %H:%M:%S\")   modules=datetime",
        "output": "计算一周之后的日期，格式为“2010-10-10 23:59:59”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "在第${i}个页面中增加组件\n    [Arguments]  ${name}  @{kwargs}\n    SetField | 输入关键词搜索 | ${name} | enter=True\n    Sleep  0.5s\n    DClick | div[title=\"${name}\"]",
        "output": "写一个名称：“在第${i}个页面中增加组件” 的关键字，接受参数 name, kwargs，作用是：\n1. 在第一个 ‘输入关键词搜索’ 中输入name，并回车\n2. 0.5s后，双击 title 为 name 的 div"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到当前激活元素右侧20px处\n${active_elem}  GetActiveElem\nMoToElem | ${active_elem} | dx=20",
        "output": "鼠标移动到当前激活元素右侧 20px 处"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SendText | 100",
        "output": "输入 100"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Click | 退出",
        "output": "点击退出按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找class不包含row-name的div\n${elem}  FindElem | div:not([class*=row-name])",
        "output": "查找class不包含row-name的div"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "在第${i}个页面中增加${name}组件\n    [Arguments]  @{kwargs}\n    ${i}  Strip String  ${i}\n    ${i}=  Catenate  SEPARATOR=  页面  ${i}\n    ClickElem  div[title='${i}']\n    Sleep  0.5s\n    ${name}  Strip String  ${name}\n    SetField  输入关键词搜索  ${name}  enter=True\n    Sleep  0.5s\n    DClick  div[title='${name}']:not([class*=row-name])\n    WaitText  样式\n    # 对于 kwargs 中的每一个 key, value\n    FOR | ${key} | ${value} | IN | @{kwargs}\n      # 将 key 映射为 index, 映射关系为：X:0, Y:1, W:2, H:3\n      ${index} | Evaluate | {'X': 0, 'Y': 1, 'W': 2, 'H': 3}[${key}]\n      # 在第 index 个 data-testid为Number:container 的div 的后代元素 input 中输入 value\n      ${selector} | Set Variable | div[data-testid=\"Number:container\"]:eq(${index}) input\n      FillArea | ${selector} | ${value}\n    END",
        "output": "# 写一个名称：“在第${i}个页面中增加${name}组件” 的关键字，接受参数 kwargs，作用是：\n# 1. 去掉 i 前后的空白字符，然后在其前面添加字符串：“页面”，然后点击title为 i 的div, 等待0.5s\n# 2. 去掉name前后的空白字符，在第一个 ‘输入关键词搜索’ 中输入name，并回车\n# 3. 0.5s后，双击 title为name且class不包含row-name 的 div，并等待页面出现 ‘样式’，\n# 4. 对于 kwargs 中的每一个 key, value，将 key 映射为 index, 映射关系为：X:0, Y:1, W:2, H:3\n# 5. 然后在第 index 个 data-testid为Number:container 的div 的后代元素 input 中输入 value"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "添加变量的关键字\n    [Arguments]  ${name}  ${value}\n    # 点击变量，0.5s后点击 svg #icon-plus\n    Click | 变量\n    Sleep | 0.5s\n    ClickElem | svg#icon-plus\n\n    # 然后在 ‘输入关键词搜索’ 中输入 var 并回车\n    SetField | 输入关键词搜索 | var | enter=True\n    Sleep | 0.5s\n\n    # 查找倒数第二个和倒数第一个 input readonly，分别命名为 var_name, var_value\n    ${var_name}  FindElem | input[readonly]:eq(-2)\n    ${var_value}  FindElem | input[readonly]:eq(-1)\n\n    # 双击 var_name 然后输入 name\n    DClick | ${var_name}\n    SendText | ${name}\n\n    # 双击 var_value 然后输入 value\n    DClick | ${var_value}\n    SendText | ${value}",
        "output": "# 写一个名为：“添加变量的关键字”，接受 name, value 参数，逻辑是：\n# 1. 点击变量，0.5s后点击 svg #icon-plus, 然后在 ‘输入关键词搜索’ 中输入 var 并回车\n# 2. 0.5s 后，查找倒数第二个和倒数第一个 input readonly，分别命名为 var_name, var_value\n# 3. 双击 var_name 然后输入 name\n# 3. 双击 var_value 然后输入 value"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置变量name和value\n${name}  Set Variable  xxx\n${value}  Set Variable  yyy",
        "output": "变量name=xxx, value=yyy"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Click | 组件\nSleep | 0.5s",
        "output": "点击组件, 并等待0.5s"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "新建交互\n    [Arguments]  ${trigger_name}\n    # 点击 交互\n    Click  交互\n    # 等待0.5秒\n    Sleep  0.5s\n    # 点击 新建交互\n    Click  新建交互\n    # 等待0.5秒\n    Sleep  0.5s\n    # 在div data-testid=\"FloatLayer:body\"的元素中输入trigger_name\n    FillArea  div[data-testid=\"FloatLayer:body\"]  ${trigger_name}",
        "output": "写一个名为：“新建交互” 的关键字，接受参数 trigger_name 表示触发的事件名，逻辑是：\n1. 点击 “交互”，等待0.5s\n2. 点击 “新建交互”，0.5s后，在 div data-testid=\"FloatLayer:body\" 的元素中输入 trigger_name"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 去掉name前后的空白字符\n${name} | Strip String | ${name}\n\n# 在第一个 ‘输入关键词搜索’ 中输入name，并回车\nSetField | 输入关键词搜索 | ${name} | idx=0 | enter=True",
        "output": "去掉name前后的空白字符，在第一个 ‘输入关键词搜索’ 中输入name，并回车"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将事件流程A拖拽到事件流程B\nDAndD | 事件流程A | 事件流程B",
        "output": "将事件流程A拖拽到事件流程B"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将元素elem拖拽到elem2\nDAndD | elem | elem2",
        "output": "将元素elem 拖拽到 elem2"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待页面加载完成\nWaitLoading",
        "output": "等待页面加载完成"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "MoToElem | ${elem}",
        "output": "鼠标移动到 ${elem}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 退出iframe\nExitFrame",
        "output": "退出iframe"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取剪切板内容\n${val}  GetCopied\n\n# 将剪切板内容粘贴到元素 elem 中\nPaste | ${elem} | ${val}",
        "output": "复制内容，并粘贴到元素 elem 中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在当前位置粘贴文本 text\nPaste | ${EMPTY} | text",
        "output": "在当前位置粘贴文本 text"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将SQL文本粘贴到光标处\nPaste | ${EMPTY} | ${SQL}",
        "output": "粘贴文本 ${SQL} 到光标处"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待页面出现 ‘快捷导航’ 或 ‘增长分析’\nWaitText | 快捷导航 | 增长分析",
        "output": "等待页面出现 ‘快捷导航’ 或 ‘增长分析’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "接入企业邮箱\n    [Arguments]  &{kwargs}\n    ${exist}  IsAnyTextExisting | smtp.qq.com 465 SSL\n    IF  not ${exist}\n        Click | 接入新平台\n        FOR  ${key}  ${value}  IN  &{kwargs}\n            SetField | ${key} | ${value}\n        END\n        Click | 确定\n        CheckHasText | 创建成功 | 企业邮箱\n    END",
        "output": "# 写一个名称 “接入企业邮箱” 的关键字，接受参数 kwargs ， 业务逻辑为：\n# 如果页面上不存在 smtp.qq.com 465 SSL，就点击接入新平台, 然后将 kwargs 中的一系列 key 和 value ，将每一个 value值填入 key字段中，最后点击确定，并校验页面包含 创建成功 和 企业邮箱"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击最后一个 '新增响应'\nClick | 新增响应 | idx=-1\n\n# 选择 '单击'\nClick | 单击",
        "output": "点击最后一个 ‘新增响应’ 然后选择 ‘单击’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SelectOption | A",
        "output": "选择 ‘A’ 选项"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 关联属性 | 打开",
        "output": "设置关联属性为  打开"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "WaitElemDisappear | button:contains(确定)",
        "output": "等待确定按钮消失"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 \"选择事件类型\"\nClick | 选择事件类型\n\n# 选择选项 \"双击\"\nSelectOption | 双击",
        "output": "点击 “选择事件类型”，然后选择选项 “双击”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${数据集列表}  Set Variable  ${数据集信息列表}",
        "output": "创建变量 ${数据集列表} 其值为 ${数据集信息列表}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将 ${数据集列表} 设置为全局变量\nSet Global Variable  ${数据集列表}",
        "output": "将 ${数据集列表} 设置为全局变量"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${订单表}  Set Variable  订单",
        "output": "创建变量 ${订单表} 其值为 ‘订单’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "点击画布中文本\n    [Arguments]  ${text}\n    ui click text of element by ocr  canvas  ${text}",
        "output": "写一个名为：“点击画布中文本” 的关键字，接受：text 参数，作用是：\n调用关键字 “ui click text of element by ocr” 参数为： canvas  text"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${count}  GetElemCount | canvas\nLog  页面有 ${count} 个 canvas 元素",
        "output": "查看页面有几个 canvas 元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 打印页面上前3个canvas的尺寸信息\n${canvas_selector}  Set Variable  canvas:eq(0),canvas:eq(1),canvas:eq(2)\nPrintElemRect  ${canvas_selector}",
        "output": "打印页面上前 3 个 canvas 的尺寸信息"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${selector}  Set Variable  :contains('退货')\nPrintElemRect | ${selector}",
        "output": "打印文本为 退货 的元素尺寸"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找文本为 退货 的元素\n${elem}  FindByText | 退货\n\n# 打印元素尺寸信息\nPrintElemRect | ${elem}",
        "output": "查找文本为 退货 的元素，然后打印尺寸信息"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验页面包含 订单id\nCheckHas | 订单id",
        "output": "校验页面包含 订单id"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "@{order_ids}  GetColValues | 订单id \nFOR  ${order_id}  IN  @{order_ids}\n    Should Not Be Empty  ${order_id}\nEND",
        "output": "获取校验表格 订单id 列的数据，并校验数据非空"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Log  ${order_id}",
        "output": "打印变量 order_id"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取表格第一行的数据\n@{vals}  GetRowValues | 1\n\n# 打印表格第一行的数据\nLog | ${vals}",
        "output": "打印表格第一行的数据"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 关键词搜索 | ${数据连接名称}",
        "output": "在 ‘关键词搜索’ 中输入  ${数据连接名称}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击icon more\nClickIcon | more",
        "output": "点击 icon: more"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 '请粘贴飞书表格URL链接'\nClick | 请粘贴飞书表格URL链接\n\n# 将 'https://voilnkpil8.feishu.cn/sheets/shtcnNl9EKMxGIkETZ9rN8b3eOc' 粘贴到光标处\nPaste | ${EMPTY} | https://voilnkpil8.feishu.cn/sheets/shtcnNl9EKMxGIkETZ9rN8b3eOc",
        "output": "点击 ‘请粘贴飞书表格URL链接’，然后将 ‘https://voilnkpil8.feishu.cn/sheets/shtcnNl9EKMxGIkETZ9rN8b3eOc’ 粘贴到光标处"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 发送 ctrl + v\nSendCtrlV",
        "output": "发送 ctrl + v"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 ‘请粘贴飞书表格URL链接’\nClick | 请粘贴飞书表格URL链接\n\n# 将 ‘https://voilnkpil8.feishu.cn/sheets/shtcnNl9EKMxGIkETZ9rN8b3eOc’ 粘贴到 input placeholder包含 “请粘贴” 的元素\nPaste | input[placeholder*='请粘贴'] | https://voilnkpil8.feishu.cn/sheets/shtcnNl9EKMxGIkETZ9rN8b3eOc",
        "output": "点击 ‘请粘贴飞书表格URL链接’，然后将 ‘https://voilnkpil8.feishu.cn/sheets/shtcnNl9EKMxGIkETZ9rN8b3eOc’ 粘贴到 input placeholder包含 “请粘贴” 的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将剪切板内容粘贴到 input placeholder包含 \"请粘贴\" 的元素\n${selector}  Set Variable  input[placeholder*=\"请粘贴\"]\n${clipboard_content}  GetCopied\nPaste  |  ${selector}  |  ${clipboard_content}",
        "output": "将剪切板内容粘贴到 input placeholder包含 “请粘贴” 的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "WaitText | 将表拖到此处",
        "output": "等待页面出现：“将表拖到此处”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击class=\"arco-input-tag-inner\"控件\nClickElem | .arco-input-tag-inner\n\n# 选择名字为${name1}的选项\nSelectOption | ${name1}",
        "output": "点击class=\"arco-input-tag-inner\"控件，并选择名字为${name1}的选项"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "IF  ${index} > 0\n    ${x}  Evaluate  ${index} + 1\nELSE\n    ${x}  Set Variable  ${index}\nEND",
        "output": "创建变量 x, 如果index大于0，那么x等于index+1,否则等于index"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 选择属性 | ${paramname}",
        "output": "向 ‘选择属性’ 中输入：${paramname}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 '上线审核方式' 为：直接上线\nSetField | 上线审核方式 | 直接上线",
        "output": "设置 ‘上线审核方式’ 为：直接上线"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待页面出现 '上线审核方式'\nWaitText | 上线审核方式\n\n# 等待1s\nSleep | 1s\n\n# 将 '上线审核方式' 设置为 直接上线\nSetField | 上线审核方式 | 直接上线",
        "output": "等待页面出现 ‘上线审核方式’ 1s后，将 ‘上线审核方式’ 设置为 直接上线"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "埋点详情新增属性\n    [Arguments]  ${details}=${paramname}\n    OpenUrl  ${EVENTDETAILS_PAGE_URL}\n    Click  新增属性\n    WaitText  确认创建\n    Sleep  2s\n    SetField  选择属性  ${details}\n    Click  确认创建\n    CheckHasText  属性添加成功",
        "output": "写一个名为：“埋点详情新增属性” 的关键字，接受参数details，默认值为：${paramname}，逻辑是：\n1. 访问 ${EVENTDETAILS_PAGE_URL} \n2. 点击 ‘新增属性’，等待页面出现 确认创建，2s后向 ‘选择属性’ 中输入：${details}\n3. 点击 ‘确认创建’，最后校验页面包含 ‘属性添加成功’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${elem}  FindElem | [name*=abc]:not([class*=666]):contains(确定)",
        "output": "查找 name包含abc, 且class不包含666, 文本为：确定的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 页面应该不包含 错误 失败\nCheckNotHasText | 错误 | 失败",
        "output": "页面应该不包含  错误  失败"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击进入用户管理页面\nClickMenu | 用户管理",
        "output": "点击进入用户管理页面"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "新建虚拟事件\n    [Arguments]  ${name}  @{args}\n    # 点击新建虚拟事件\n    Click  新建虚拟事件\n    # 向虚拟事件名称中输入name\n    SetField  虚拟事件名称  ${name}\n    # 向展示名中输入name+的展示名\n    SetField  展示名  ${name}的展示名\n    # 判断args长度应该至少为1，否则失败\n    ${length}=  Get Length  ${args}\n    Should Be True  ${length} > 0  虚拟事件中至少包含一个一般事件\n    # 点击length - 1次新建事件\n    ${clickTimes}=  Evaluate  ${length} - 1\n    FOR  ${i}  IN RANGE  ${clickTimes}\n      Click  新建事件\n    END\n    # 将args中的每一个参数，依次填写到每一个请选择事件字段中\n    FOR  ${index}  ${value}  IN ENUMERATE  @{args}\n      SetField  |  请选择事件  |  ${value}  |  idx=${index}\n    END",
        "output": "写一个名为：“新建虚拟事件” 的关键字，接受 name, args 参数：作用是：\n1. 点击 ‘新建虚拟事件’, 然后向 ‘虚拟事件名称’ 中输入 name, 向 ‘展示名’ 输入 name+的展示名\n2. 然后判断 args 长度 length 应该至少为 1，否则就失败，原因是：虚拟事件中至少包含一个一般事件\n3. 如果 args 满足条件，就点击 length - 1 次：‘新建事件’\n4. 最后将 args 中的每一个参数，依次填写到各个：‘请选择事件’ 字段中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "@{args}  Create List  a  b  c",
        "output": "创建列表变量 args 里面包含3个值，a,b,c"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "删除虚拟事件\n    [Arguments]  ${name}\n    # 1. 在 '输入虚拟事件名' 中输入 name\n    SetField  输入虚拟事件名  ${name}\n\n    # 2. 0.5s后, 点击包含 name 的表格行中的 '删除'\n    Sleep  0.5s\n    ClickTextOfRow  ${name}  删除\n\n    # 3. 等待页面出现 '确定要删除吗', 然后点击 '确定'，并等待页面出现 '删除成功'\n    WaitText  确定要删除吗\n    Click  确定\n    WaitText  删除成功",
        "output": "写一个名为：“删除虚拟事件” 的关键字，接受 name 参数，作用是：\n# 1. 在 ‘输入虚拟事件名’ 中输入 name\n# 2. 0.5s后, 点击包含 name 的表格行中的 ‘删除’\n3. 等待页面出现 ‘确定要删除吗’, 然后点击 ‘确定’，并等待页面出现 ‘删除成功’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 创建列表 args\n${args} = | Create List | 页面访问 | 应用退出 | ai-copilot-line",
        "output": "创建列表 args, 值为：页面访问  应用退出  ai-copilot-line"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向 ${selector} 元素中输入 name\nFillArea | ${selector} | name",
        "output": "向 ${selector} 元素中输入 name"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击最后一个文本为\"确定\"的button\nClickElem | button:contains(确定):eq(-1)",
        "output": "点击最后一个文本为确定的button"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找 class*=ddd 或 name=x的元素\n${elem}  FindElem | [class*=ddd], [name=x]",
        "output": "查找 class*=ddd 或 name=x的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "编辑业务对象属性\n    [Arguments]  ${name}  ${prop_name}  &{kwargs}\n    SetField | 输入对象名 | ${name}\n    ClickTextOfRow | ${name} | 编辑\n    ClickTextOfRow | ${prop_name} | 编辑 | tbl=属性名\n    Sleep  0.5s\n    FOR  ${key}  ${value}  IN  &{kwargs}\n        FillCell | ${prop_name} | ${key} | ${value} | tbl=属性名\n    END\n    Click  保存\n    Click  确定\n    CheckHas  成功",
        "output": "写一个名为：“编辑业务对象属性” 的关键字，接受 name, prop_name，kwargs 参数，逻辑是：\n1. 在 ‘输入对象名’ 中输入 name, 然后点击包含 name 的表格行中的 '编辑'\n2. 然后，点击 ‘属性名’ 表格中，包含 prop_name 的表格行中的 ‘编辑’，并等待 0.5s\n3. 然后对于 kwargs 中的每一个 key, value 值，将他们分别填写到 ‘属性名’ 表格中，prop_name 行，名称为 key 的单元格中\n4. 最后点击 ‘保存’，然后点击 ‘确定’，并校验页面包含 ‘成功’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取属性名表格的总行数\n${row_count}  GetRowCount | tbl=属性名\n\n# 打印属性名表格的总行数\nLog  |  ${row_count}",
        "output": "打印 ‘属性名’ 表格的总行数"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 打印 '属性名' 表格的，第一个行的内容\n@{row_values}  GetRowValues | 1 | tbl=属性名\nLog  | ${row_values}",
        "output": "打印 ‘属性名’ 表格的，第一个行的内容"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickElem | h4[class*=xxx]:contains(yyy)",
        "output": "点击 class*=xxx 且 文本为 yyy 的 h4 元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到休闲游戏基础分析的h4元素上\nMoToElem | h4[class*=\"TemplateCard\"]:contains(休闲游戏基础分析)\n\n# 点击介绍\nClick | 介绍",
        "output": "鼠标移动到 class*=TemplateCard且 文本为 休闲游戏基础分析 的 h4 元素上，然后点击 ‘介绍’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到 休闲游戏基础分析 上\nMoTo | 休闲游戏基础分析\n\n# 点击 介绍\nClick | 介绍",
        "output": "鼠标移动到 文本为 休闲游戏基础分析 上，然后点击 ‘介绍’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 检测URL地址 | ${Tester首页URL}",
        "output": "将检测URL地址输入框中填入${Tester首页URL}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${name1}  ${name2}  新建事件属性",
        "output": "使用新建事件属性关键字，返回两个名字${name1}和${name2}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "OpenBrowser | ${url}\nWaitLoading\nSetField | 用户名 | 张三\nSetField | 密码 | password\nClick | 登录\nWaitText | Welcome",
        "output": "打开浏览器，访问 ${url}, 等页面加载完成后,输入用户名张三, 密码password，点击登录，等待 Welcome出现"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击SQL查询\nClick | SQL查询\n# 等待页面加载完成\nWaitLoading\n# 等待页面出现 数据连接查询\nWaitText | 数据连接查询",
        "output": "点击SQL查询，等待页面加载完成，页面出现 数据连接查询"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ToFrame | iframe:eq(0)",
        "output": "进入第一个iframe"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ExitFrame",
        "output": "切出iframe"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ExitFrame",
        "output": "退出 iframe"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ToFrame | iframe:eq(0)",
        "output": "切换到 iframe"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "FillArea | ${ele} | 张三",
        "output": "将元素 ele 设置为 张三"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验详细数据表格中第一行包含 A1 页面访问（总次数  中国\nCheckRowHas | 1 | A1 | 页面访问（总次数 | 中国 | tbl=详细数据",
        "output": "校验详细数据表格中第一行包含 A1 页面访问（总次数  中国"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickIfElemExists | button:contains(查询)",
        "output": "如果包含查询的 button 元素存在, 就点击"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面是否存在“帮助中心”\n${exist}  IsAnyTextExisting | 帮助中心\nIF  ${exist}\n    # 点击右上角的最后一个close icon\n    ClickIconToTheDirectionOf | 帮助中心 | topRight | close\nEND",
        "output": "如果页面存在帮助中心，就点击右上角的最后一个叉号"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待页面出现 \"快捷导航\" 或 \"Welcome\"\nWaitText | 快捷导航 | Welcome",
        "output": "等待出现 快捷导航 或者 Welcome"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找div class*=PageHeader__page-header-title的元素 ele\n${ele}  FindElem | div[class*=PageHeader__page-header-title]\n\n# 查找ele的后代元素 span class*=back-to-dash__backToDash\n${descendant}  FindElem | ${ele} span[class*=back-to-dash__backToDash]",
        "output": "查找div class*=PageHeader__page-header-title的元素 ele\n查找ele的后代元素 span class*=back-to-dash__backToDash"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 敲击回车\nSendText | enter=True",
        "output": "敲击回车"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 页面滚动到底部\nPageDown | 5",
        "output": "页面滚动到底部"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Click | 收藏",
        "output": "点击收藏"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickIcon | plus",
        "output": "点击 icon  plus"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickIcon | favor",
        "output": "点击图标favor"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ToFrame | iframe:eq(0)",
        "output": "切换到 iframe"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ToFrame | iframe[name=coralDetailPageIframe]",
        "output": "切换到 name 为 coralDetailPageIframe 的 frame"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 上传文件${shop_excel_file}\nUploadFile | ${shop_excel_file}",
        "output": "上传文件 ${shop_excel_file}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到 Excel 上\nMoTo | Excel\n# 等待0.5s\nSleep | 0.5s",
        "output": "鼠标移动到 Excel 上，等待0.5s"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "OpenBrowser",
        "output": "开启浏览器"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${rows}  GetTableRowCount  tbl=1",
        "output": "获取页面第一个表格的行数"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置浏览器窗口大小为 1000 x 800\nSetWindowSize | 1000 | 800",
        "output": "设置浏览器窗口大小  1000  800"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到文本 页面1 上\nMoTo | 页面1",
        "output": "鼠标移动到文本 页面1 上"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标在当前位置点击\nMClick",
        "output": "鼠标在当前位置点击"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击一下esc\nPress Keys | None | ESC",
        "output": "点击一下esc"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击编辑icon\nClickIcon | edit",
        "output": "点击编辑图标"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 用户名称搜索 | ${name} | enter=True",
        "output": "向 ‘用户名称搜索’ 中输入 ${name} 后回车"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待确定按钮消失\nWaitElemDisappear | button:contains('确定')",
        "output": "等待确定按钮消失"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击晓明所在表格行中的class*=edit的svg\nClickElemOfRow | 晓明 | svg[class*=edit]",
        "output": "点击 晓明 所在表格行中的 class*=edit 的svg"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击${name}所在表格行的 class*=edit的svg\nClickElemOfRow | ${name} | svg[class*=edit]",
        "output": "点击${name}所在表格行的 class*=edit的svg"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 进组用户剔除被动事件 | 打开",
        "output": "设置 ‘进组用户剔除被动事件’ 为 打开"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置进组用户剔除被动事件触发条件为ON\nSetField | 进组用户剔除被动事件触发条件 | ON\n\n# 点击第一个保存\nClick | 保存 | idx=0\n\n# 等待设置成功\nWaitText | 设置成功",
        "output": "设置 ‘进组用户剔除被动事件触发条件’ 为 ‘ON’，然后点击第一个 ‘保存’，等待 ‘设置成功’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "IF   $text == \"\"\n    Exit For Loop\nEND",
        "output": "如果 ${text} 为空就跳出循环"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取id=content_input元素的文本，并存放在content变量中\n${content}  GetElemText  | #content_input\n\n# 查找所有div draggable元素的兄弟元素\n${elems}  FindElem  | div[draggable] ~ * \n\n# 循环遍历每个兄弟元素，获取他们的文本，校验这些文本都出现在content中\nFOR  ${elem}  IN  @{elems}\n    ${text}  GetElemText  | ${elem}\n    Should Contain  ${content}  ${text}\nEND",
        "output": "获取 id=content_input 的元素中的文本，存放在 content 中，然后查找所有 div draggable 元素的兄弟元素，对每一个元素获取他们的文本，校验这些文本都出现在 content 中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "IF  not $use_sub\n    Click | 主用户登录\n    SetField | 主账号用户名 | ${user_name}\n    SetField | 子用户 | ${sub_username}\n    SetField | 密码 | ${password}\nELSE\n    SetField | 用户名 | 张三\n    SetField | 密码 | password\nEND",
        "output": "如果 ${use_sub} 为假，就点击 主用户登录，然后输入主账号用户名 ${user_name}, 子用户 ${sub_username}, 密码 ${password}, 否则就输入用户名 张三，密码 password"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置置信水平为99%\nSetField | 置信水平 | 99%\n\n# 点击第3个保存\nClick | 保存 | idx=2\n\n# 等待设置成功\nWaitText | 设置成功",
        "output": "设置 ‘置信水平’ 为 ‘99%’，然后点击第3个 ‘保存’，等待 ‘设置成功’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击编辑图标\nClickIcon | edit",
        "output": "点击 编辑 icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击关闭图标\nClickIcon | clos",
        "output": "点击关闭图标"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击删除小图标\nClickIcon | delete",
        "output": "点击 删除 小图标"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 nif 右侧的 close icon\nClickIconToTheDirectionOf | nif | right | close",
        "output": "点击 nif 右侧的 叉号"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击叉号\nClickIcon | close",
        "output": "点击 叉号"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 nif 右侧的 close icon\nClickIconToTheDirectionOf | nif | right | close",
        "output": "点击nif右侧的 x 号"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 nif 右侧的 编辑 符号\nClickIconToTheDirectionOf | nif | right | edit",
        "output": "点击 nif 右侧的 编辑 符号"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 xx 表格行中的 关闭 icon\nClickIconOfRow | xx | close",
        "output": "点击 xx 表格行中的 关闭 小图标"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取xxx字段的值\n${val}  GetFieldVal | xxx",
        "output": "获取 xxx 字段的值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击xxx后面的编辑icon\nClickIconToTheDirectionOf | xxx | right | edit",
        "output": "点击xxx后面的编辑图标"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickIcon | close | idx=2",
        "output": "点击第三个关闭小图标"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${message}=  Evaluate  $resp.get(\"message\")\nShould Be Equal  ${message}  success",
        "output": "将${resp}的message对应的值与success比对，要求相等"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击表格第一行中的编辑图标\nClickIconOfRow | 1 | edit",
        "output": "点击 表格第一行中的 编辑 小图标"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击第一行中的删除\nClickTextOfRow | 1 | 删除",
        "output": "点击第一行中的删除"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击第一行中的第二个icon\nClickIconOfRow | 1 | icon | idx=1",
        "output": "点击第一行中的第二个icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击第一行中的第二个 delete icon\nClickIconOfRow | 1 | delete | idx=1",
        "output": "点击第一行中的第二个 delete icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 admin 行中的 编辑 icon\nClickIconOfRow | admin | edit",
        "output": "点击 admin 行中的 编辑 icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击第一个编辑图标\nClickIcon | edit | idx=0",
        "output": "点击第一个 编辑 icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 admin 行中的第4个icon\nClickIconOfRow | admin | idx=3",
        "output": "点击 admin 行中的第4个icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击张三左侧的close icon\nClickIconToTheDirectionOf | 张三 | left | close",
        "output": "点击 张三 左侧的 叉号"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击admin行中的下载icon\nClickIconOfRow | admin | download",
        "output": "点击 admin 行中的 下载 icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入密码\nSetField | 密码 | ${ADMIN_PASSWORD}",
        "output": "输入密码 ${ADMIN_PASSWORD}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 密码 | ${ADMIN_PASSWORD} | enter=True",
        "output": "输入密码 ${ADMIN_PASSWORD}，然后回车"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击待我审批\nClick | 待我审批\n\n# 在输入任务名称中输入experiment_name并回车\nSetField | 输入任务名称 | ${experiment_name} | enter=True",
        "output": "点击 待我审批，然后在 ‘输入任务名称’ 中输入 ${experiment_name} 后回车"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面是否包含 \"发送飞书通知\"\n${exist}  IsAnyTextExisting | 发送飞书通知\n# 如果页面包含 \"发送飞书通知\"，就点击发送按钮，否则点击完成按钮\nIF  ${exist}\n    Click | 发送\nELSE\n    Click | 完成\nEND",
        "output": "如果页面包含 发送飞书通知 就点击发送按钮 否则点击完成按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "新建企业部门\n    [Arguments]  &{kwargs}\n    ${exist}  IsAnyTextExisting | 未开启“企业部门”功能\n    IF  $exist\n        Click | 开启并使用\n        FOR  ${key}  ${value}  IN  &{kwargs}\n            SetField | ${key} | ${value}\n        END\n        Click | 确定\n    ELSE\n        CheckHasText | 企业名称 | 添加用户 | 权限继承方式\n    END",
        "output": "写一个名为：“新建企业部门”的关键字，接受参数 kwargs，kwargs中有一系列的 key 和 value， 业务逻辑：如果页面存在 未开启“企业部门”功能 就点击 开启并使用，将每一个 value值填入 key字段中，然后点击确定，如果页面不存在 未开启“企业部门”功能 就检查页面包含 企业名称 添加用户 权限继承方式"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到 编程实验 上\nMoTo | 编程实验\n\n# 等待立即创建按钮出现\nWaitText | 立即创建\n\n# 点击立即创建按钮\nClick | 立即创建",
        "output": "鼠标覆盖 编程实验 后，点击出现的带有 立即创建 字段的按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "退出登录\n    # 鼠标移动到 class*=avatar的元素上\n    MoToElem | [class*=avatar]\n    # 点击 ‘退出登录’\n    Click | 退出登录\n    # 等待URL包含login\n    WaitURLContainsAny | login",
        "output": "写一个名为：“退出登录” 的关键字，主要完成：鼠标移动到 class*=avatar的元素上，然后点击 ‘退出登录’, 等待URL包含login"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验 URL 包含 xxx\nWaitURLContainsAll | xxx",
        "output": "校验 URL 包含 xxx"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "鼠标移动到[class*=avatar]上\nMoToElem | [class*=avatar]",
        "output": "鼠标移动到头像上"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到[class*=avatar]上\nMoToElem | [class*=\"avatar\"]\n\n# 点击退出登录\nClick | 退出登录",
        "output": "鼠标移动到[class*=avatar]上点击退出登录"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "IF  ${line_no} == 1 and ${type} != \"属性过滤\"\n    ClickElem | ${elem1} span:contains('${type}')\n    Sleep  0.5\n    ClickElem | ${elem2} [class*=IconCloseUI]\nEND",
        "output": "如果 ${line_no} 为 1，且 ${type} != 属性过滤, 则点击元素${elem1}后代中文本为${type}的span元素，0.5s后，点击元素 elem2 的class*=IconCloseUI的后代元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验页面不包含文本 x\nCheckNotHasText | x",
        "output": "页面应该不包含 x"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 通过执行 js 脚本的方式将窗口滚动到底部\nExecute Javascript | window.scrollTo(0,document.body.scrollHeight)",
        "output": "通过执行 js 脚本的方式将窗口滚动到底部"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将元素elem向下滚动50%\nScrollElementUpDown | ${elem} | 50%",
        "output": "将 elem 向下滚动 50"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickIcon | close | idx=-1 | base=${elem}",
        "output": "点击元素 elem 中的最后一个 关闭 icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找包含 ${experiment_name} 的第一个元素\n${elem}  FindByText | ${experiment_name} | idx=1\n\n# 查找 ${elem} 元素后的第一个元素\n${next_elem}  FindElem | ${elem} + *:eq(0)\n\n# 获取 ${next_elem} 元素的文本\n${val}  GetElemText | ${next_elem}",
        "output": "获取页面第一个包含  ${experiment_name} 后的第一个元素的文本"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "选择Session包含的事件\n    [Arguments]  @{args}\n    SetField  |  请选择  |  @{args}\n    Click  |  添加",
        "output": "写一个名为：“选择Session包含的事件” 的关键字，接受 args 参数，作用是：向 ‘请选择’ 中输入给定的一个或多个 args，然后点击 ‘添加’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向 '请选择' 中输入：页面访问 页面退出\nSetField | 请选择 | 页面访问 | 页面退出",
        "output": "向 ‘请选择’ 中输入：页面访问  页面退出"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "选择Session包含的事件\n    [Arguments]  @{args}\n    # 用 '|' 连接args\n    ${args_str}  Catenate  SEPARATOR=|  @{args}\n    # 查找 '请选择' 元素\n    ${elem}  FindByText  请选择\n    # 向 '请选择' 元素输入连接后的值\n    FillArea  ${elem}  ${args_str}\n    # 点击 '添加'\n    Click  添加",
        "output": "写一个名为：“选择Session包含的事件” 的关键字，接受 args 参数，作用是：\n1. 将给定的一个或多个 args 用 '|' 进行字符串连接\n2. 查找文本为 ‘请选择’ 的元素 elem, 向 elem 输入以上连接后的值，最后点击 ‘添加’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击分享icon\nClickIcon | share",
        "output": "点击分享icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击分享icon\nClickIcon | share\n\n# 点击复制链接\nClick | 复制链接\n\n# 等待\"复制成功\"\nWaitText | 复制成功",
        "output": "点击分享icon，然后再点击复制链接，等待 ‘复制成功’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击张三所在表格行的分享icon\nClickIconOfRow | 张三 | share",
        "output": "点击张三所在表格行的分享icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 切换到新窗口\nToNewWindow\n\n# 等待 '自定义事件' 出现\nWaitText | 自定义事件\n\n# 点击 '自定义事件'\nClick | 自定义事件",
        "output": "切换到新窗口，并等待 ‘自定义事件’ 出现，然后点击它"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置全局变量 REMOTE_URL\nSet Global Variable  ${REMOTE_URL}  http://10.86.87.185:9515",
        "output": "设置全局变量 REMOTE_URL 为：http://10.86.87.185:9515"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 创建全局变量 REMOTE_URL\nSet Global Variable  ${REMOTE_URL}  http://10.86.87.185",
        "output": "创建全局变量 REMOTE_URL 为：http://10.86.87.185"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验 alert 中包含 ‘customClickAction’\nCheckAlertHas | customClickAction",
        "output": "校验 alert 中包含 ‘customClickAction’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验 alert 中包含 ‘customClickAction’\nCheckAlertHas | customClickAction",
        "output": "校验 alert弹框 中包含 ‘customClickAction’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${message} = | Handle Alert | LEAVE | # Leave alert open and get its message\nShould Contain  ${message}  customClickAction",
        "output": "获得 alert 弹框中的文本，并校验其包含 ‘customClickAction’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查页面是否存在'上线通知'\n${exist}  IsAnyTextExisting | 上线通知 | timeout=3\n# 如果存在，就点击close icon\nIF  $exist\n    ClickIcon | close\nEND",
        "output": "如果页面存在 ‘上线通知’ (3s超时)，就点击 叉号"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查页面是否存在'上线通知'\n${exist}  IsAnyTextExisting | 上线通知 | timeout=3\n# 如果存在，就点击最后一个close icon\nIF  $exist\n    ClickIcon | close | idx=-1\nEND",
        "output": "如果页面存在 ‘上线通知’ (3s超时)，就点击最后一个 叉号"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找第一个 div class*=xxx\n${elem}  FindElem | div[class*=xxx]:eq(0)",
        "output": "查找第一个 div class*=xxx"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在名称中输入：自定义列\nSetField | 名称 | 自定义列\n\n# 点击 icon-more\nClickIcon | more\n\n# 点击 ‘查看线上’\nClick | 查看线上",
        "output": "在名称中输入：自定义列，然后点击 icon-more，接着点击 ‘查看线上’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "FOR  ${i}  IN RANGE  0  10\n    # 判断页面是否存在‘上线通知’或‘下一步’\n    ${exist}  IsAnyTextExisting | 上线通知 | 下一步\n    IF  $exist\n        # 点击 close icon\n        ClickIcon | close\n    ELSE\n        # 如果不存在‘上线通知’或‘下一步’，则退出循环\n        EXIT FOR Loop\n    END\nEND",
        "output": "如果页面存在 ‘上线通知’或‘下一步’，就点击 叉号，直到页面页面没有‘上线通知’或‘下一步’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验警告中包含：customClickAction\nCheckAlertHas | customClickAction",
        "output": "校验警告中包含：customClickAction"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向用户名中输入zhangxiaoming\nSetField | 用户名 | zhangxiaoming",
        "output": "向 用户名 中输入： zhangxiaoming"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找包含 '邀请同事' 的 label 元素\n${elem}  FindByText | 邀请同事 | tag=label",
        "output": "查找包含 ‘邀请同事’ 的 label 元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向文本为 '邀请同事' 的 label 元素的兄弟元素中输入：zhang\nFillArea | label:contains('邀请同事') ~ * | zhang",
        "output": "向文本为 ‘邀请同事’ 的 label 元素的兄弟元素中输入：zhang"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "PrintElemRect | ${elem}",
        "output": "打印元素 ${elem} 的信息"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 发起review 按钮 或者 review详情 按钮\nClickAny | 发起review | review详情",
        "output": "点击 发起review 按钮 或者 review详情 按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "OpenUrl | http://10.56.226.2:33060/product/ecs/region:ecs+cn-velab-auto/dashboard",
        "output": "访问 http://10.56.226.2:33060/product/ecs/region:ecs+cn-velab-auto/dashboard"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 打开浏览器并访问指定URL\nOpenBrowser | http://10.56.226.2:33060/product/ecs/region:ecs+cn-velab-auto/dashboard",
        "output": "打开浏览器访问 http://10.56.226.2:33060/product/ecs/region:ecs+cn-velab-auto/dashboard"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入主账号和密码\nSetField | 主账号 | veStack_iaas\nSetField | 密码 | Roo\n\n# 点击登录\nClick | 登录",
        "output": "输入主账号：‘veStack_iaas’, 密码：‘Roo’, 点击登录"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击实例\nClick | 实例",
        "output": "点击实例"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在筛选条件中输入${DEPLOY_MACHINE}\nSetField | 筛选条件 | ${DEPLOY_MACHINE}",
        "output": "在筛选条件中输入：${DEPLOY_MACHINE}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 '添加筛选条件'\nClick | 添加筛选条件\n\n# 输入 ${DEPLOY_MACHINE}\nSendText | ${DEPLOY_MACHINE}",
        "output": "点击 ‘添加筛选条件’，然后输入 ${DEPLOY_MACHINE}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SendText | ${DEPLOY_MACHINE}",
        "output": "输入文本 ${DEPLOY_MACHINE}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SelectOption | ${MACHINE}",
        "output": "选择选项  ${MACHINE}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标点击 ${DEPLOY_MACHINE} 所在行的更多 icon\nClickIconOfRow | ${DEPLOY_MACHINE} | more",
        "output": "鼠标点击 ${DEPLOY_MACHINE} 所在行的更多 icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到...上\nMoTo | ...",
        "output": "鼠标移动到 ... 上"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 移动到class包含more_btn的button上\nMoToElem | button[class*=more_btn]",
        "output": "移动到 class*=more_btn 的 button 上"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 移动到 '实例状态' 上\nMoTo | 实例状态\n\n# 点击 '停止'\nClick | 停止",
        "output": "移动到 ‘实例状态’ 上，然后点击 ‘停止’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到实例状态\nMoTo | 实例状态\n\n# 点击最后一个停止\nClick | 停止 | idx=-1\n\n# 点击确定\nClick | 确定",
        "output": "鼠标移动到 ‘实例状态’ 上，然后点击最后一个 ‘停止’，然后点击确定"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待页面包含 '已停止'\nWaitText | 已停止",
        "output": "等待页面包含 ‘已停止’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 登录凭证 为：密钥对\nSetField | 登录凭证 | 密钥对",
        "output": "设置 登录凭证 为：密钥对"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 对于变量 MACHINES 中的每一台 machine\nFOR  ${machine}  IN  @{MACHINES}\n    # 调用 '重装系统关键字'，参数为此 machine\n    重装系统关键字  ${machine}\nEND",
        "output": "对于变量 MACHINES 中的每一台 machine，调用 ‘重装系统关键字’，参数为此 machine"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标点击名为用户的搜索框\nMClick | 用户\n# 输入权限账号1\nSendText | 权限账号1\n# 选择权限账号1\nClick | 权限账号1",
        "output": "鼠标点击名为 用户 的搜索框，并输入 权限账号1 后选择权限账号1"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入文本 192.168.9.96\nSendText | 192.168.9.96",
        "output": "输入文本 192.168.9.96"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成随机字符串，长度十位，并在前面拼接 ad_autotest_\n${rand_str}  GenerateRandomWithPrefix | ad_autotest_ | 10 | [LETTERS][NUMBERS]",
        "output": "生成随机字符串，长度十位，并在前面拼接  ad_autotest_"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 勾选我接受\nCheckBoxOn | 我接受",
        "output": "勾选我接受"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 '添加筛选条件'\nClick | 添加筛选条件\n\n# 点击 '主私网IP地址'\nClick | 主私网IP地址",
        "output": "点击 ‘添加筛选条件’，然后点击 ‘主私网IP地址’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 模糊搜索 | 调试中",
        "output": "向 ‘模糊搜索’ 中输入：调试中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 切换到新窗口\nToNewWindow",
        "output": "切换到新窗口"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取 ${elem} 的 aria-checked 属性\n${ariaChecked}  Get Element Attribute  ${elem}  aria-checked\n# 打印 aria-checked 属性的值\nLog  ${ariaChecked}",
        "output": "打印 ${elem} 的 aria-checked 属性"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击我接受\nClick | 我接受",
        "output": "点击我接受"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击表格中含有mrlx053那行的按钮\nClickElemOfRow | mrlx053 | button",
        "output": "点击表格中含有mrlx053那行的按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取元素 ${p} 的 class\n${class}  Get Element Attribute  ${p}  class",
        "output": "获取元素 ${p} 的 class"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击更多图标\nClickIcon | more",
        "output": "点击 更多 icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 远程连接 右侧的元素\nClickElemToTheDirectionOf | 远程连接 | right",
        "output": "点击 远程连接 右侧的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到\"云盘和镜像\"上\nMoTo | 云盘和镜像\n\n# 点击\"更换操作系统\"\nClick | 更换操作系统",
        "output": "鼠标移动到“云盘和镜像”上，然后点击“更换操作系统”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找class包含iaas-ecs-arco-table-tr的元素\n${elems}  FindElem  | [class*=iaas-ecs-arco-table-tr]\n\n# 校验查找到的元素只有两个\nShould Be Equal As Integers  ${len(elems)}  2",
        "output": "检查 class*=iaas-ecs-arco-table-tr 的元素只有两个"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击第二个密钥对右侧的元素\nClickElemToTheDirectionOf | :contains(密钥对):eq(1) | right",
        "output": "点击 第二个密钥对 右侧的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击第一个加号图标\nClickIcon | plus | idx=0",
        "output": "点击第一个加号图标"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验页面包含 \"leiyu.pm-100-dppublic107勿删\"\nCheckHasText | leiyu.pm-100-dppublic107勿删",
        "output": "页面应该包含 “leiyu.pm-100-dppublic107勿删”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 访问www.126.com\nOpenUrl | https://www.126.com",
        "output": "访问 www.126.com"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "处理上线通知弹框\n    # 判断页面是否存在 ‘上线通知’ 或 ‘新功能’\n    ${exist}  IsAnyTextExisting | 上线通知 | 新功能 | timeout=3\n    IF  ${exist}\n        # 如果存在，就点击页面上最后一个 close icon\n        ClickIcon | close | idx=-1\n    END",
        "output": "写一个名为：“处理上线通知弹框” 的关键字，作用是：\n1. 判断页面是否存在 ‘上线通知’ 或 ‘新功能’ (最多检查3s即可)，如果有，就点击页面上最后一个 叉号"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 '创建方式' 为：已有项目\nSetField | 创建方式 | 已有项目",
        "output": "设置 ‘创建方式’ 为：已有项目"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击清空图标\nClickIcon | clear",
        "output": "点击 清空icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验页面上表格行数为 1\nCheckRowCount | 1",
        "output": "校验页面上表格行数为 1"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找192.168.9.96所在的表格行元素\n${elem}  FindByText | 192.168.9.96\n# 鼠标移动到此元素上\nMoToElem | ${elem}\n# 点击此行中远程连接右侧的元素\nClickElemToTheDirectionOf | 远程连接 | right",
        "output": "鼠标移动到 192.168.9.96 所在的表格行，点击此行中 远程连接 右侧的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在 '添加筛选条件' 中输入 192.168.9.96，并回车，等待1s\nSetField | 添加筛选条件 | 192.168.9.96 | enter=True\nSleep | 1s",
        "output": "在 ‘添加筛选条件’ 中输入 192.168.9.96，并回车，等待1s"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取表格行数，并等待表格行数变成1\n${row_count}  GetRowCount\nFOR  ${i}  IN RANGE  60\n  Run Keyword If  '${row_count}' != '1'  Sleep  1s\n  ${row_count}  GetRowCount\n  Exit For Loop If  '${row_count}' == '1'\nEND",
        "output": "获取表格行数，直到表格行数变成 1，每次重试间隔 1s，60s超时"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "登录VeStack\n    [Arguments]  ${user}=veStack_iaas  ${password}=Root@123\n    # 打开浏览器访问指定URL\n    OpenBrowser  http://10.56.226.2:33060/product/ecs/region:ecs+cn-velab-auto/dashboard\n    # 输入主账号\n    SetField  主账号  ${user}\n    # 输入密码\n    SetField  密码  ${password}\n    # 点击登录\n    Click  登录\n    # 等待页面出现云服务器\n    WaitText  云服务器",
        "output": "写一个名为：“登录VeStack” 的关键字，接受 user, password 参数，默认值分别为：‘veStack_iaas’ 和 ‘Root@123’，作用是：\n1. 打开浏览器访问 http://10.56.226.2:33060/product/ecs/region:ecs+cn-velab-auto/dashboard\n2. 输入主账号 和 密码, 点击登录，等待页面出现：云服务器"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面是否存在'登录'或'Login'\n${exist}  IsAnyTextExisting | 登录 | Login\n\n# 如果存在'登录'或'Login'，输入用户名和密码\nIF  ${exist}\n    SetField | 用户名 | xx\n    SetField | 密码 | yy\nEND",
        "output": "如果页面存在 ‘登录’ 或 ‘Login’， 就输入用户名：xx, 密码：yy"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 如果${IP}是192.168.9.96 ，页面应该包含 \"leiyu.pm-100-dppublic105勿删\"\nIF  \"${IP}\" == \"192.168.9.96\"\n  CheckHasText  leiyu.pm-100-dppublic105勿删\nEND",
        "output": "如果${IP}是192.168.9.96 ，页面应该包含 \"leiyu.pm-100-dppublic105勿删\""
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击弹窗中的确认按钮\nClick | 确认 | base=POPUP",
        "output": "点击弹窗中的确认按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Handle Alert  action=ACCEPT",
        "output": "确认警告弹窗"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "CheckHasText | 实验名称 | 实验信息",
        "output": "检测页面包含实验名称和实验信息"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 为第一个 th 元素添加属性 'data-xxxx', 属性值为：‘xxxx’\nExecute Javascript | $('th:eq(0)').attr('data-xxxx', 'xxxx');",
        "output": "为第一个 th 元素添加属性 'data-xxxx', 属性值为：‘xxxx’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "WaitLoading\n${header_elem}  FindElem | th:eq(0)\n${data_attr}  GetElemAttr | ${header_elem} | data-xxxx\nShould Not Be Equal  ${data_attr}  xxxx",
        "output": "等待页面加载完成，然后获取第一个表头元素的 data-xxxx 属性，校验其值不等于 'xxxx"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 断言执行关键字 'ui check alert contains any didMountAction' 会失败\nRun Keyword And Expect Error  *  ui check alert contains any  didMountAction",
        "output": "断言执行关键字 ‘ui check alert contains any  didMountAction’ 会失败"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "进入创建规则分群页面\n    # 点击 '创建分群' 按钮\n    Click | 创建分群\n\n    # 找到一个同时包含 '规则创建' 和 '立即创建' 的元素\n    ${elem}  FindElem | :contains(规则创建):contains(立即创建)\n\n    # 点击其中的 '立即创建' 按钮\n    Click | 立即创建 | base=${elem}\n\n    # 等待页面出现 '保存'\n    WaitText | 保存",
        "output": "写一个名为：“进入创建规则分群页面” 的关键字，主要操作为：点击 ‘创建分群’ 按钮，然后找到一个同时包含 ‘规则创建’ 和 ‘立即创建’ 的元素，点击其中的 ‘立即创建’ 按钮，并等待页面出现 ‘保存’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "进入创建规则分群页面\n    # 点击 '创建分群' 按钮\n    Click | 创建分群\n    # 点击 '规则创建' 下方的 '立即创建' 按钮\n    ClickTextToTheDirectionOf | 规则创建 | bottom | 立即创建",
        "output": "写一个名为：“进入创建规则分群页面” 的关键字，主要操作为：\n点击 ‘创建分群’ 按钮，然后点击 ‘规则创建’ 下方的 ‘立即创建’ 按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置分群基本信息\n    [Arguments]  ${name}=${EMPTY}  ${desc}=${EMPTY}  ${period}=${EMPTY}\n    SetField  分群名称  ${name}\n    IF  '${desc}' != '${EMPTY}'\n        SetField  分群描述  ${desc}\n    ELSE\n        ${desc}  Catenate  SEPARATOR=  ${name}  的分群描述\n        SetField  分群描述  ${desc}\n    END\n    IF  '${period}' != '${EMPTY}'\n        SetField  计算周期  ${period}\n    END",
        "output": "写一个名为：“设置分群基本信息” 的关键字，接受 name、desc、period 三个参数，name 和 period 的默认值为空，业务逻辑是：\n1. 设置 ‘分群名称’ 为 name\n2. 如果 desc 不为空，就把 ‘分群描述’ 设置为 desc，否则就把 ‘分群描述’ 设置为 name + '的分群描述'\n3. 如果 period 不为空，就把 ‘计算周期’ 设置为 period"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向div.list-filter中输入Libra小时级全部\nFillArea | div.list-filter | Libra | 小时级 | 全部",
        "output": "向 div.list-filter 中输入  Libra  小时级   全部"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 尝试点击 '新建指标组' 或 '创建指标组'\nClickAny | 新建指标组 | 创建指标组",
        "output": "# 尝试点击 '新建指标组' 或 '创建指标组'"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置分群时间段\n    [Arguments]  ${type}  ${period}=\"\"\n    FillArea  div[class*=CohortCreateRulePeriod__container]  ${type}  ${period}",
        "output": "写一个名为：“设置分群时间段” 的关键字，接受 type, period 参数， period 默认为空，逻辑是：\n向 class*=CohortCreateRulePeriod__container的区域中填写 type 和 peroid"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置分群第${N}个条件组中第${line_no}个规则\n    [Arguments]  @{args}\n    ${repeat_cnt}  Set Variable  5\n    ${selector}  Set Variable  [class*=TagCohortFirstArrayForm__container]\n    ${add_condition_group}  Set Variable  添加条件组\n    ${add_condition}  Set Variable  添加\n    ${wait_time}  Set Variable  0.5s\n    FOR  ${i}  IN RANGE  ${repeat_cnt}\n      ${cnt}  GetElemCount | ${selector}\n      Exit For Loop If  ${cnt} >= ${N}\n      Click | ${add_condition_group}\n      Sleep  ${wait_time}\n    END\n\n    ${condition_selector}  Set Variable  ${selector}:eq(${N-1}) [class*=TagCohortFirstArrayForm__conditionContainer]\n    ${condition_div_selector}  Set Variable  ${condition_selector} > div\n    IF  ${line_no} > 1\n        FOR  ${i}  IN RANGE  ${repeat_cnt}\n          ${cnt}  GetElemCount | ${condition_div_selector}\n          Exit For Loop If  ${cnt} == ${line_no}\n          MoToElem | ${selector}:eq(${N-1})\n          Click | ${add_condition}\n          Sleep  ${wait_time}\n        END\n    END\n\n    FillArea | ${condition_div_selector}:eq(${line_no-1}) | @{args}",
        "output": "写一个名为：“设置分群第${N}个条件组中第${line_no}个规则” 的关键字，接受 args 参数，逻辑是：\n1. 判断 class*=TagCohortFirstArrayForm__container 的元素是否 < N 个，如果少于 N 个，则点击 ‘添加条件组’ 并等待0.5s, 此过程最多重复 5 次\n2. 如果 line_no > 1, 则判断第 N 个 class*=TagCohortFirstArrayForm__container 的元素 elem 中class*=TagCohortFirstArrayForm__conditionContaine的后代元素 elem1 的直接 div 孩后代元素的数量是否等于 line_no, 如果不等于，则鼠标移动到 elem 上，并点击其后代元素 ‘添加’，然后等待0.5s, 此过程最多重复 5 次\n3. 最后向 elem1 的第 line_no 个 div 孩子中，输入给定的一个或多个 args"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "IF  ${args[0]} == '用户依次做过'\n    FillArea  ${target}  用户依次做过\n    ${n} =  Get Length  ${args}\n    FOR  ${i}  IN RANGE  1  ${n}\n       Click  后续行为\n    END\nEND",
        "output": "如果 args 中的第一个参数为 ‘用户依次做过’ , 就要先把 ${target} 元素设置为 ‘用户依次做过’，然后计算 args 总长度 n, 点击 n-1次 ‘后续行为’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "进入编辑分群页面\n    [Arguments]  ${name}\n    SetField | 搜索分群名 | ${name} | enter=True\n    ClickIconOfRow | ${name} | more\n    Click | 编辑\n    WaitText | 保存",
        "output": "写一个名为：“进入编辑分群页面” 的关键字，接受 name 参数，主要操作为：\n在 ‘搜索分群名’ 中输入 name 并回车\n点击 name 所在表格行中的 更多 icon，然后点击 '编辑', 等待页面出现 ‘保存’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "上传文件创建分群\n    [Arguments]  ${type}  ${file_path}=\n    # 设置 '文件ID类型' 字段为：${type}\n    SetField | 文件ID类型 | ${type}\n    # 判断 ${file_path} 是否为空\n    IF  \"${file_path}\" != \"\"\n        # 如果 ${file_path} 非空，上传 ${file_path} 指定的文件\n        UploadFile | ${file_path}\n    ELSE\n        # 如果 ${file_path} 为空，上传 files/${type}.csv 文件\n        UploadFile | files/${type}.csv\n    END",
        "output": "写一个名为: \"上传文件创建分群\" 的关键字，接受 type, file_path 参数，file_path 默认为空，业务逻辑是：\n1. 将 ‘文件ID类型’ 字段设置为：type\n2. 如果 file_path 非空，就上传 file_path 指定的文件，否则就上传 files/${type}.csv 文件"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "保存分群\n    # 点击 '保存' \n    Click | 保存\n    # 等待 '保存' 按钮消失\n    WaitElemDisappear | button:contains(保存)",
        "output": "写一个名为：“保存分群” 的关键字，主要操作为：点击 ‘保存’，并等待 ‘保存’ 按钮从页面消失"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 ${name} 表格行中的 更新 icon\nClickIconOfRow | ${name} | update",
        "output": "点击 ${name} 表格行中的 更新 icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 访问主页面\nOpenUrl | ${MAIN_PAGE}",
        "output": "访问 MAIN_PAGE"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 选择 '编辑' 选项\nSelectOption | 编辑",
        "output": "选择 ‘编辑’ 选项"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 创建变量event_name\n${event_name}  Set Variable  A\n\n# 创建变量type\n${type}  Set Variable  内购\n\n# 创建变量列表args\n@{args}  Create List  任意主动事件  是否首日访问",
        "output": "创建变量 event_name =A, type=内购, 列表 args = 任意主动事件  是否首日访问"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "添加过程事件\n    [Arguments]  ${name}\n    Click | +过程事件\n    Sleep | 0.2s\n    ${selector}  Set Variable  [class*=AttributionProcessEvent__container]:eq(-1)\n    FillArea | ${selector} | ${name}",
        "output": "写一个名为：“添加过程事件” 的关键字，接受 name 参数，逻辑为：\n1. 点击 ‘+过程事件’，0.2s后，向最后一个 class包含AttributionProcessEvent__container 的元素中输入 name"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "添加${type}事件过滤条件\n    [Arguments]  @{args}\n    # 点击第一个“过滤条件”按钮\n    Click | 过滤条件 | idx=0\n    # 等待0.5s\n    Sleep | 0.5s\n    # 找到第一个 div class=query-event-filter 元素的 elem1\n    ${elem1}  FindElem | div.query-event-filter:eq(0)\n    # 在 elem1 后代中找到 class包含 index_container 的元素 elem2\n    ${elem2}  FindElem | ${elem1} [class*=index_container]\n    # 在 elem2 中找到最后一个 class包含ant-row 的孩子 elem3\n    ${elem3}  FindElem | ${elem2} [class*=ant-row]:eq(-1)\n    # 向 elem3 中输入变长参数 args\n    FillArea | ${elem3} | @{arg}",
        "output": "写一个关键字：“添加${type}事件过滤条件”， 接受 args 参数，作用是：\n点击第一个“过滤条件”按钮, 等待0.5s，\n然后找到第一个 div class=query-event-filter 元素的 elem1,\n在 elem1 后代中找到 class包含index_container 的元素 elem2,\n在 elem2 中找到最后一个 class包含ant-row 的孩子 elem3,\n向 elem3 中输入变长参数 args"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Set Global Variable  ${大屏URL}   ${MAIN_PAGE}${VSCREEN_HOST}${APPID}",
        "output": "创建名为 '大屏URL' 的全局变量，其值为 MAIN_PAGE、VSCREEN_HOST、APPID 这三个变量相加"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "打开浏览器访问大屏页面\n    [Arguments]  ${url}=${大屏URL}\n    OpenBrowser | ${url}\n    WaitLoading",
        "output": "写一个名为：“打开浏览器访问大屏页面” 的关键字，接受参数 url，默认值为：${大屏URL}，作用是：打开浏览器访问给定的 url，并等待页面加载完成"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "用户登录并访问大屏页面\n    [Arguments]  ${user}=${ADMIN_ACCOUNT}  ${password}=${ADMIN_PASSWORD}  ${url}=${大屏URL}\n    OpenBrowser  ${url}\n    SetField  账号  ${user}\n    SetField  密码  ${password}\n    Click  登录\n    WaitURLNotContains  login  auth",
        "output": "写一个名为：“用户登录并访问大屏页面” 的关键字，接受参数user, password, url，默认值分别为变量：ADMIN_ACCOUNT、ADMIN_PASSWORD 和 大屏URL，\n关键字作用是：\n打开浏览器访问给定的 url，然后输入账号和密码，点击登录，并等待页面URL中不再包含 login 或 auth"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Set Suite Variable  ${xx}   yy",
        "output": "创建测试套件变量 xx，值为 yy"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 如果URL中包含 volcengine\n${exist}  IsURLContains | volcengine\nIF  ${exist}\n    # 如果当前页面包含 ‘不再提示’\n    ${exist}  IsAnyTextExisting | 不再提示\n    IF  ${exist}\n        # 点击 '不再提示'\n        Click | 不再提示\n    END\nEND",
        "output": "如果URL中包含 volcengine, 且当前页面包含 ‘不再提示’ 就点击"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "截图并关闭浏览器\n    Screenshot\n    CloseBrowser",
        "output": "写一个名为: \"截图并关闭浏览器\" 的关键字，作用是：先截图然后关闭浏览器"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "新建第${i}组的事件属性\n    [Arguments]  @{kwargs}\n    ${selector}  Set Variable  div[class*=formContainer]:eq(${i-1})\n    ${timeout} =  Set Variable  5\n    FOR  ${j}  IN RANGE  ${timeout}\n        ${exist}  IsAnyElemExisting  ${selector}\n        Exit For Loop If  ${exist}\n        Click  添加属性\n    END\n    FOR  ${key}  ${value}  IN  @{kwargs}\n        IF  \"${key}\" == \"事件公共属性\"\n            Click  ${key}  base=${selector}\n        ELSE\n            SetField  ${key}  ${value}  base=${selector}\n        END\n    END",
        "output": "写一个关键字：新建第${i}组的事件属性，接受kwargs参数，主要逻辑是：\n1. 先判断第 i 个，class包含formContainer的元素ele是否存在，如果不存在就点击 添加属性，最多循环5次\n2. 如果ele已经存在，就对于kwargs的每一个字段key和值value,先判断key是否等于 事件公共属性，如果等于就点击ele中的这个key, 否则把ele中的字段key设置成对应的value"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Click | 数据类型 | base=${elem}",
        "output": "点击元素 elem 中的 '数据类型'"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "新建第${i}组的事件属性\n    [Arguments]  &{kwargs}\n    # 定义元素选择器\n    ${selector}=  Set Variable  [class*=formContainer]:eq(${i}-1)\n    FOR  ${index}  IN RANGE  0  5\n       # 判断元素是否存在\n       ${exist}  IsAnyElemExisting  ${selector}\n       Exit For Loop If  ${exist}\n       # 如果元素不存在，点击'添加属性'\n       Click  添加属性\n    # 对 kwargs 的每一个key和value 把元素 ele 中的字段key设置成对应的value\n    FOR  ${key}  ${value}  IN  &{kwargs}\n       SetField  ${key}  ${value}  base=${selector}\n    END",
        "output": "写一个关键字：新建第${i}组的事件属性，接受kwargs参数，主要逻辑是：\n1. 先判断第 i 个，class包含formContainer的元素ele是否存在，如果不存在就点击 '添加属性'，最多循环5次\n2. 如果ele已经存在，则对 kwargs 的每一个key和value 把元素 ele 中的字段key设置成对应的value"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 定位第一个 span class包含FilterIconDragUI__icon 的元素\n${srcElem}  FindElem | span[class*=FilterIconDragUI__icon]:eq(0)\n\n# 定位第二个 span class包含FilterIconDragUI__icon 的元素\n${targetElem}  FindElem | span[class*=FilterIconDragUI__icon]:eq(1)\n\n# 将srcElem元素拖拽到targetElem元素上\nDAndD | ${srcElem} | ${targetElem}",
        "output": "将第一个 span class包含FilterIconDragUI__icon 的元素，拖拽到第二个 span class包含FilterIconDragUI__icon 的元素上"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 访问页面https://volc.com/datafinder/\nOpenUrl | https://volc.com/datafinder/\n\n# 判断页面是否存在域名bytedance.net或byted.org\n${exist}  IsAnyTextExisting | bytedance.net | byted.org\nIF  $exist\n    Fail  页面中存在域名bytedance.net或byted.org\nEND",
        "output": "访问页面https://volc.com/datafinder/，如果页面中存在域名bytedance.net或byted.org报错"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 创建变量 num = 0\n${num}  Set Variable  0\n\n# 创建变量 num1 = 1\n${num1}  Set Variable  1",
        "output": "创建变量 num =0, num1=1"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查变量${content}中是否包含bytedance.net或byted.org\n${found}  Evaluate  'bytedance.net' in $content or 'byted.org' in $content\n\n# 如果变量${content}中包含bytedance.net或byted.org则报错\nRun Keyword If  ${found}  Fail  \"内容中包含了不允许的网址\"",
        "output": "变量${content}中包含bytedance.net或byted.org就报错"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 ${xx} 所在表格行中的文本为 用户画像 且 class不包含disabled的元素\nClickElemOfRow | ${xx} | :contains(用户画像):not([class*=disabled])",
        "output": "点击 ${xx} 所在表格行中文本为 用户画像 且 class不包含disabled的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待文本为 ‘用户画像’ 且 class包含disabled的元素消失\nWaitElemDisappear | :contains('用户画像')[class*=disabled]\n\n# 点击表格中 ${name} 行中的 ‘用户画像’\nClickTextOfRow | ${name} | 用户画像",
        "output": "等待文本为 ‘用户画像’ 且 class包含disabled的元素消失，然后点击表格中 ${name} 行中的 ‘用户画像’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "打开${name}的用户画像\n    FOR  ${i}  IN RANGE  15\n        ${exist}  IsRowContainsElem | ${name} | [class*=disabled]\n        IF  ${exist}\n            Sleep  5s\n            RefreshPage\n            WaitLoading\n        ELSE\n            ClickTextOfRow | ${name} | 用户画像\n            Exit For Loop\n        END\n    END",
        "output": "写一个名为“打开${name}的用户画像”的关键字\n查看表格的${name} 行中是否有class包含disabled的元素。若有，就等待5s后刷新页面。等待页面加载好，重复此过程，最多15次，若没有，则点击此表格行中的 ‘用户画像’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置变量 ${event_name} 和 ${text}\n${event_name}  Set Variable  A\n${text}  Set Variable  12",
        "output": "变量 ${event_name}  ${text} 分别为 A 和 12"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "开启利润比例\n    [Arguments]  ${text}\n    # 找到 class包含FilterContainer__filterItemContainer，且文本包含 A 的元素 elem\n    ${elem}  FindElem  [class*=FilterContainer__filterItemContainer]:contains(A)\n    # 将鼠标移动到 elem 中第二个 class包含styles__icon 的元素上\n    MoveToElem  ${elem} [class*=styles__icon]:eq(1)\n    # 点击 ‘开启利润比例’\n    Click  开启利润比例\n    # 将文本 text 输入到元素 elem 中的最后一个input/textarea元素中\n    FillArea  ${elem} input:last, ${elem} textarea:last  ${text}",
        "output": "写一个名为 ‘开启利润比例’ 的关键字，接受  text 参数，逻辑是：\n1. 找到 class包含FilterContainer__filterItemContainer，且文本包含 A 的元素 elem，然后将鼠标移动到 elem 中第二个 class包含styles__icon 的元素上，然后点击 ‘开启利润比例’\n2. 将文本 text 输入到元素 elem 中的最后一个输入框元素中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "上传广告eCPM文件\n    [Arguments]  ${file_path}=\n    IF  \"${file_path}\" == \"\"\n        ${file_path}=  Set Variable  files/ecpm_template.csv\n        ${file_path_xlsx}=  Replace String  ${file_path}  .csv  .xlsx\n        ${output}=  Evaluate  pandas.read_csv(${file_path}).to_excel(${file_path_xlsx})  sys, pandas\n        UploadFile | ${file_path_xlsx}\n    ELSE\n        UploadFile | ${file_path}\n    END",
        "output": "写一个名为: \"上传广告eCPM文件\" 的关键字，接受 file_path 参数，file_path 默认为空，业务逻辑是：\n如果 file_path 非空，就上传 file_path 指定的文件，否则就将 files/ecpm_template.csv 文件转换成 excel 格式的文件 file1.xlsx，然后上传此文件"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取两天前的日期并格式化为 '月-日'\n${date_two_days_ago} =  Evaluate  (datetime.date.today() - datetime.timedelta(days=2)).strftime('%m-%d')  modules=datetime\nLog  ${date_two_days_ago}",
        "output": "输出两天前的日期以：‘月-日’ 的格式输出"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向下滚动1次\nPageDown",
        "output": "向下滚动"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置双轴图Y轴左\n    [Arguments]  ${chart_type}  @{args}\n    # 点击 '图表配置'，等待出现 '可视化配置' 后，点击 '坐标Y轴-左'\n    Click | 图表配置\n    WaitText | 可视化配置\n    Click | 坐标Y轴-左\n    # 将 '图表类型' 设置为：chart_type\n    SetField | 图表类型 | ${chart_type}\n    # 将 args 中的所有参数使用 | 进行字符串链接，得到 args_str，然后将其输入到 '指标' 中\n    ${args_str}  Evaluate  '|'.join(${args})\n    SetField | 指标 | ${args_str}",
        "output": "写一个名为：“设置双轴图Y轴左” 的关键字，接受 chart_type 和 args 参数，作用是：\n1. 点击 ‘图表配置’，等待出现 ‘可视化配置’ 后，点击 ‘坐标Y轴-左’\n2. 然后将 ‘图表类型’ 设置为：chart_type\n3. 将 args 中的所有参数使用 | 进行字符串链接，得到 args_str，然后将其输入到 '指标' 中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找文本为 '指标' 的元素\n${elem}  FindByText | 指标\n\n# 打印元素信息\nPrintElemRect | ${elem}",
        "output": "打印文本为 ‘指标’ 的元素信息"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "打开单元格中的显微镜\n    [Arguments]  ${row}  ${col}\n    # 页面向下滚动\n    PageDown\n    # 点击表格第 row 行，第 col 列的单元格中的，class包含Microscope__clickable 的元素\n    ClickElemOfCell | ${row} | ${col} | [class*=Microscope__clickable]",
        "output": "写一个名为：“打开单元格中的显微镜” 的关键字，接受 row, col 参数， 作用是：\n1. 页面向下滚动\n2. 点击表格第 row 行，第 col 列的单元格中的，class包含Microscope__clickable 的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 如果变量${idtype}中包含user_unique_id 则点击user_unique_id\n${exist}  Evaluate  'user_unique_id' in \"${idtype}\"\nIF  $exist\n    Click  user_unique_id\nEND\n\n# 或idtype中包含device_id,则点击device_id\n${exist}  Evaluate  'device_id' in \"${idtype}\nIF  $exist\n    Click  device_id\nEND\n\n# 或idtype中包含web_id，则点击web_id\n${exist}  Evaluate  'web_id' in \"${idtype}\"\nIF  $exist\n    Click  web_id\nEND\n\n# 或idtype中不包含ssid则点击ssid\n${exist}  Evaluate  'ssid' not in \"${idtype}\"\nIF  $exist\n    Click  ssid\nEND",
        "output": "如果idtype中包含user_unique_id 则点击user_unique_id，或idtype中包含device_id,则点击device_id，或idtype中包含web_id，则点击web_id，或idtype中不包含ssid则点击ssid"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 截取视频成交热度的图片\nChartScreen| 视频成交热度",
        "output": "截取视频成交热度的图片"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验变量 value 和 变量 ${大屏URL} 相等\nShould Be Equal  ${value}  ${大屏URL}",
        "output": "校验变量 value 和 变量 ${大屏URL} 相等"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "新建空白大屏\n    [Arguments]  ${name}  ${path}=根目录\n    # 点击 列表\n    Click  | 列表\n    # 点击 新建大屏\n    Click  | 新建大屏\n    # 点击 使用空白大屏\n    Click  | 使用空白大屏\n    # 输入大屏名称 name\n    SetField  | 大屏名称  | ${name}\n    # 输入所在文件夹 path\n    SetField  | 所在文件夹  | ${path}\n    # 点击 确定\n    Click  | 确定\n    # 检查页面应该包含 创建成功和name\n    CheckHasText  | 创建成功  | ${name}",
        "output": "写一个名为：“新建空白大屏” 的关键字，接受name，path（默认值为：根目录）参数，作用是：\n1、点击 列表\n2. 点击 新建大屏\n3、点击 使用空白大屏\n3、输入大屏名称 name，输入所在文件夹 path，点击 【确定】\n页面应该包含 创建成功和name"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "下载分群数据\n    [Arguments]  ${name}=1  ${id_type}=  ${file_format}=  ${count}=\n    # 点击 name 所在表格行中的 ‘更多’ icon，然后点击 ‘下载’\n    ClickIconOfRow  |  ${name}  |  更多\n    Click  |  下载\n    # 将 ID类型设置为 id_type, 文件格式设置为 file_format， 导出ID数量 设置为 count\n    Run Keyword If  '${id_type}'!=''  SetField  |  ID类型  |  ${id_type}\n    Run Keyword If  '${file_format}'!=''  SetField  |  文件格式  |  ${file_format}\n    Run Keyword If  '${count}'!=''  SetField  |  导出ID数量  |  ${count}\n    # 点击确定\n    Click  |  确定\n    # 校验页面无错误提示\n    CheckErrMsg",
        "output": "写一个名为：“下载分群数据” 的关键字，接受参数：name（默认值为1）, id_type, file_format, count 参数，id_type, file_format, count 的默认值均为空，操作逻辑为：\n1. 点击 name 所在表格行中的 ‘更多’ icon，然后点击 ‘下载’\n2. 将 ID类型设置为 id_type, 文件格式设置为 file_format， 导出ID数量 设置为 count\n3. 点击确定\n4. 校验页面无错误提示"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将变量 count 按 '|' 进行分割，将分割后的所有部分输入 '导出ID数量'\n${split_count}  Evaluate  $count.split('|')\nSetField  导出ID数量  @{split_count}",
        "output": "将变量 count 按 '|' 进行分割，将分割后的所有部分输入 '导出ID数量'"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待页面包含 '已停止'，最长120秒\nWaitText | 已停止 | timeout=120",
        "output": "等待页面包含 '已停止'，最长120秒"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "编辑分群\n    [Arguments]  ${name}  ${changename=}  ${describe=}\n    ClickIconOfRow | ${name} | more\n    Click | 编辑\n    SetField | 分群名称 | ${changename}\n    SetField | 分群描述 | ${describe}\n    Click | 确定\n    CheckHas | 更新成功",
        "output": "写一个名为“编辑分群”的关键字，接受参数：name,changename,describe 参数,changename，describe 的默认值为空；操作逻辑为：\n1.点击 name 所在表格行中的 ‘更多’ icon，然后点击 ‘编辑’\n2.将分群名称设置为 changename，分群描述设置为 describe\n3.点击 确定\n4.校验页面提示有 更新成功"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 执行关键字 设置参数\nTRY\n    设置参数  请输入应用内成员=Aa  enter=True  pause=0.5\nEXCEPT\n    CheckHas  暂无数据\nEND",
        "output": "执行关键字：‘设置参数  请输入应用内成员=Aa  enter=True  pause=0.5’，如果关键字执行出错，就校验页面上包含 ‘暂无数据’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "删除分群\n    [Arguments]  ${name}\n    # 点击 name 所在表格行中的 ‘更多’ icon\n    ClickIconOfRow | ${name} | more\n    # 点击 删除\n    Click | 删除\n    # 点击 确定\n    Click | 确定\n    # 校验页面提示有 删除成功\n    CheckHas | 删除成功",
        "output": "写一个名为“删除分群”的关键字；接受参数：name；操作逻辑为：\n1.点击 name 所在表格行中的 ‘更多’ icon，然后点击 删除\n2.点击 确定\n3.校验页面提示有 删除成功"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取 '关联属性' 字段的值\n${value}  GetFieldVal | 关联属性",
        "output": "获取 ‘关联属性’ 字段的值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取 '关联属性' 字段的值\n${field_value}  GetFieldVal | 关联属性\n# 打印 '关联属性' 字段的值\nLog  ${field_value}",
        "output": "打印 ‘关联属性’ 字段的值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "修改${name}的单位为\n    [Arguments]  ${text}\n    # 输入name 到 “请输入属性名”中，查询\n    SetField | 请输入属性名 | ${name} | enter=True\n\n    # 点击编辑，校验页面包含“编辑统计口径”内容\n    Click | 编辑\n    CheckHas | 编辑统计口径\n\n    # 在class包含ant-modal-body的 第2个后代元素中输入 text\n    FillArea | [class*=ant-modal-body] *:eq(1) | ${text}\n\n    # 点击确定，等待页面出现成功\n    Click | 确定\n    WaitText | 成功",
        "output": "写一个名为“修改${name}的单位为”的关键字，接口参数 text，作用是：\n1. 输入name 到 “请输入属性名”中，查询\n2. 点击编辑，校验页面包含“编辑统计口径”内容\n3. 在class包含ant-modal-body的 第2个后代元素中输入 text\n4. 点击确定，等待页面出现成功"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "批量删除\n    [Arguments]  ${type}\n    Run Keyword If  '${type}' == '全选'  CheckBoxOn | 全选\n    Run Keyword If  '${type}' == '多选'  CheckBoxOn | name\n    Click | 批量删除\n    CheckHas | 删除成功",
        "output": "写一个名为“批量删除”的关键字：接受参数：type；操作逻辑为：\n1.当type为全选，则勾选页面的全选按钮，点击 批量删除\n2.当type为多选，则勾选页面名称为name的勾选框，点击 批量删除\n3.校验页面提示有 删除成功"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "删除统计口径\n    [Arguments]  ${name}\n    # 输入name到“请输入属性名”中，查询\n    SetField | 请输入属性名 | ${name}\n    Click | 查询\n\n    # 点击删除，校验页面包含 ‘是否要删除统计口径’，然后点击确定按钮\n    Click | 删除\n    CheckHas | 是否要删除统计口径\n    Click | 确定",
        "output": "写一个关键字“删除统计口径”，接受一个参数name, 作用是：\n1. 输入name 到 “请输入属性名”中，查询\n2. 点击删除，校验页面包含 ‘是否要删除统计口径’，然后点击确定按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成随机的10位英文字符串\n${random_str}  GenerateRandom  | 10 | [LETTERS]",
        "output": "生成随机的10位英文字符串"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向class包含ant-card-body，且文本包含'时间切割'的元素中输入1和天\n${selector} =  Set Variable  【class*=ant-card-body]:contains('时间切割')\nFillArea  ${selector}  1  天",
        "output": "向 class包含ant-card-body，且文本包含 ‘时间切割’的元素 中输入 1和天"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取表格行数，直到表格行数变成 1，每次重试间隔 1s,打印表格行数\nFOR  ${i}  IN RANGE  1  60\n    ${row_count}  GetRowCount\n    Log  ${row_count}\n    Exit For Loop If  '${row_count}' == '1'\n    Sleep  1s\nEND",
        "output": "获取表格行数，直到表格行数变成 1，每次重试间隔 1s,打印表格行数"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验/检查页面是否存在异常提示\nCheckErrMsg",
        "output": "页面不报错"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断变量ip是否等于192.168.19.189\nIF  '${ip}' == '192.168.19.189'\n    Log  ${ip}\nELSE\n    Fail  ip不等于192.168.19.189\nEND",
        "output": "判断变量${ip}和字符串\"192.168.19.189\"是否相等，如果是则打印字符串，否则报错"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击证书认证前的元素\nClickElemToTheDirectionOf | 证书认证 | left",
        "output": "点击证书认证前的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断name里面有多少个以｜分割的值\n@{names}  Split String  ${name}  | \n${count}  Get Length  ${names}\n\n# 依次点击name值所在表格行中的勾选框\nFOR  ${name}  IN  @{names}\n    ClickElemOfRow  ${name}  [type*=checkbox]\nEND",
        "output": "当type为多选 操作逻辑为：\n1.判断name里面有多少个以｜分割的值\n2.依次点击name值所在表格行中的勾选框"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在最后一个textarea输入\"1\"\nFillArea | textarea:eq(-1) | 1",
        "output": "在最后一个textarea 输入 “1”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 认证方式 后的元素\nClickElemToTheDirectionOf | 认证方式 | right",
        "output": "点击 认证方式 后的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找value为key的input元素并点击\nClickElem | input[value='key']",
        "output": "查找value为key的input，点击该元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 切换到新的页面\nToNewWindow",
        "output": "切换到新的页面"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 请输入密钥 所在的元素\nClick | 请输入密钥\n\n# 输入 123\nSendText | 123",
        "output": "点击 请输入密钥 所在的元素，输入 123"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "获取${num}天前的日期\n    [Arguments]  ${num}\n    ${date_num_days_ago}  Evaluate  (datetime.datetime.now() - datetime.timedelta(days=${num})).strftime(\"%m-%d\")  modules=datetime\n    [Return]  ${date_num_days_ago}",
        "output": "写一个关键字“获取${num}天前的日期”，主要逻辑为：获取 num 天前的日期，以‘月-日’格式返回"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 返回上一个页面\nPageBack",
        "output": "返回上一个页面"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 返回上一个窗口\nToPrevWindow",
        "output": "返回上一个窗口"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取表格中的行数\n${row_count}  GetRowCount | tbl=1\n\n# 遍历每一行，找到UUID所在的行\nFOR  ${i}  IN RANGE  1  ${row_count}+1\n    @{vals}  GetRowValues | ${i} | tbl=1\n    FOR  ${val}  IN  @{vals}\n        # 如果值为UUID，则打印这一行的值\n        Run Keyword If  'UUID' in '${val}'  Log  ${vals}\n    END\nEND",
        "output": "找到UUID所在行，并打印出来"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将元素 elem 中的 ‘属性名称’ 设置为 ‘张三’\nSetField | 属性名称 | 张三 | base=${elem}",
        "output": "将元素 elem 中的 ‘属性名称’ 设置为 ‘张三’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "填写事件信息\n    [Arguments]  ${name}=${EMPTY}  ${show_name}=${EMPTY}  ${type}=${EMPTY}  ${desc}=${EMPTY}\n    Click  添加属性\n    ${ele}  FindElem  div[class*=formContainer]\n    Run Keyword If  '${name}'!='${EMPTY}'  SetField  属性名称  ${name}  base=${ele}\n    Run Keyword If  '${show_name}'!='${EMPTY}'  SetField  展示名  ${show_name}  base=${ele}\n    Run Keyword If  '${type}'!='${EMPTY}'  SetField  属性类型  ${type}  base=${ele}\n    Run Keyword If  '${desc}'!='${EMPTY}'  SetField  描述  ${desc}  base=${ele}",
        "output": "写一个关键字“填写事件信息”，参数为：name, show_name, type, desc, 默认值都为空，逻辑是：\n0. 参数 name, show_name, type, desc 对应的中文分别为：属性名称、展示名、属性类型、描述\n1. 点击“添加属性”\n2. 查找 div class包含formContainer的元素ele\n3. 对于关键字中的每一个参数，如果它不为空，就把 ele 中此参数对应的中文名称字段设置为该参数值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "用户登录\n    # 打开浏览器访问登录页面\n    OpenBrowser | ${LOGIN_URL}\n    # 等待页面出现success\n    WaitText | success\n    # 访问主页面\n    OpenUrl | ${MAIN_PAGE}",
        "output": "# 写一个名为 “用户登录” 的关键字，主要逻辑如下：\n# 1. 打开浏览器访问 LOGIN_URL, 等页面出现success后，接着访问 MAIN_PAGE"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "关闭浏览器\n    CloseBrowser",
        "output": "写一个名为 “关闭浏览器” 的关键字，作用就是把浏览器关闭"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "查看用户列表下载\n    [Arguments]  ${name}\n    # 点击name所在表格行的查看用户列表按钮\n    ClickTextOfRow | ${name} | 查看用户列表\n    # 切换到新窗口\n    ToNewWindow\n    # 点击'下载'\n    Click | 下载\n    # 校验页面提示：正在导出用户，请耐心等候\n    CheckHas | 正在导出用户，请耐心等候\n    # 校验页面无错误提示\n    CheckErrMsg",
        "output": "写一个名为“查看用户列表下载”的关键字；接受参数：name，操作逻辑为：\n1.点击name所在表格行的查看用户列表按钮\n2.切换到新窗口\n3.点击‘下载’\n4.校验页面提示：正在导出用户，请耐心等候\n5.校验页面无错误提示"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "修改${name}事件的展示名和描述为\n    [Arguments]  ${show_name}  ${desc}    \n    # 向 ‘搜索事件名称’框中输入 name, 查询\n    SetField  搜索事件名称  ${name}  enter=True\n    # 点击  svg class包含arco-icon-plus-circle 的第2个元素\n    ClickElem  svg[class*=arco-icon-plus-circle]:eq(1)\n    # 查找div class包含textAreaContainer的元素 ele\n    ${ele}  FindElem  div[class*=textAreaContainer]\n    # 向元素 ele中输入 show_name 和 desc 内容，回车\n    FillArea  ${ele}  ${show_name}  ${desc}  enter=True\n    # 校验页面包含 ‘修改事件展示名成功’\n    CheckHas  修改事件展示名成功",
        "output": "写一个关键字“修改${name}事件的展示名和描述为”，接受参数show_name和desc\n1. 向 ‘搜索事件名称’框中输入 name, 查询\n2. 点击  svg class包含arco-icon-plus-circle 的第2个元素\n3. 查找div class包含textAreaContainer的元素 ele\n4. 向元素 ele中输入 text内容，回车，\n5. 校验页面包含 ‘修改事件展示名成功’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击确定 button\nClickElem | button:contains(确定)",
        "output": "点击确定 button"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 调用abc关键字，参数为name value\nabc  name  value",
        "output": "调用 abc 关键字，参数为 name  value"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面是否存在class包含slideRight-enter-done的元素，如果不存在，就点击 '图表配置'\n${exist}  IsElemExisting | [class*=slideRight-enter-done]\nIF  not ${exist}\n    Click  图表配置\nEND",
        "output": "判断页面是否存在 class包含slideRight-enter-done 的元素，如果不存在，就点击 ‘图表配置’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "主账号登录\n    [Arguments]  ${DLADMIN}  ${DLADMIN_PWD}\n    OpenUrl  ${HOST}\n    Click | 请输入用户名\n    SendText | ${DLADMIN}\n    Click | 请输入登录密码\n    SendText | ${DLADMIN_PWD}\n    Click | 立即登录\n    WaitText | 大数据研发治理套件",
        "output": "写一个主账号登录关键字，接受${DLADMIN}，  ${DLADMIN_PWD}参数 ,关键字先打开url${HOST},点击请输入用户名输入账号，再点击请输入登录密码输入密码然后点击立即登录，等待页面出现大数据研发治理套件，即登录成功"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 打开浏览器访问指定URL\nOpenBrowser | ${WODEQUANXIAN_PAGE_URL}\n\n# 等待页面出现获权方（类型）和华北2（北京）\nWaitText | 获权方（类型） | 华北2（北京）",
        "output": "打开浏览器${WODEQUANXIAN_PAGE_URL}，等待页面出现获权方（类型）和华北2（北京），即校验成功"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取当前日期\n${current_date}=  Get Current Date\n\n# 判断当前日期是否在date之前\n${is_before}=  Evaluate  ${current_date} < ${date}\n\n# 如果当前日期在date之前，跳过当前用例的执行\nIF  ${is_before}\n    Skip  Current test case\nEND",
        "output": "判断当前日期是否在 date 之前，如果是在 date 之前，就跳过当前用例的执行"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击新建\nClick | 新建\n\n# 点击标签分类\nClick | 标签分类\n\n# 设置“上级分类”字段为root\nSetField | 上级分类 | root\n\n# 设置“名称”字段为自动化分类\nSetField | 名称 | 自动化分类\n\n# 设置“描述”为自动化巡检测试用途\nSetField | 描述 | 自动化巡检测试用途\n\n# 点击下一步\nClick | 下一步\n\n# 点击提交\nClick | 提交\n\n# 等待页面出现操作成功\nWaitText | 操作成功",
        "output": "点击新建，点击标签分类，设置“上级分类”字段为root，设置“名称”字段为自动化分类，设置“描述”为自动化巡检测试用途，点击下一步，点击提交，等待页面出现操作成功"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "新建标签方法\n  SetField | 上级分类 | ${Tag_Directory}\n  SetField | 名称 | ${Tag}\n  SetField | 描述 | 自动化测试标签\n  SetField | 保密级别 | L3\n  Click | 下一步\n  Click | 字段名\n  SetField | 正则表达式 | 小写英文字母\n  SetField | 命中率阈值 | 100\n  Click | 下一步\n  Click | 提交\n  WaitText | 操作成功",
        "output": "写一个新建标签的方法，字段上级分类输入${Tag_Directory}，字段名称输入${Tag},字段描述输入自动化测试标签，字段保密级别输入L3，点击下一步，点击字段名，字段正则表达式输入小写英文字母，字段命中率阈值输入100，点击下一步，点击提交，等待页面出现操作成功"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面是否存在删除文本\n${exist}  IsAnyTextExisting | 删除\n# 如果存在删除文本，则调用自动审批关闭方法\nIF  $exist\n    Run Keyword | 自动审批关闭\nEND",
        "output": "判断页面有无删除文本，如果有的话则调用方法：自动审批关闭"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "CloseBrowser",
        "output": "关闭浏览器"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "IF  ${new_browser}\n    ui open browser  ${HOST}  session=not_given\nELSE\n    ui open url  ${HOST}\nEND",
        "output": "如果变量 new_browser 为真，则调用关键字 ‘ui open browser  ${HOST}   session=not_given’ 否则，就调用 ‘ui open url  ${HOST}’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Delete All Cookies",
        "output": "删除所有 cookie"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面是否有\"UI自动化测试\"\n${exist}  IsAllTextExisting | UI自动化测试\n\n# 如有则执行方法\"自定义角色删除\"\nRun Keyword If | ${exist} | 自定义角色删除",
        "output": "判断页面是否有“UI自动化测试”，如有则执行方法“自定义角色删除”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "WaitText | 运行中 | timeout=120",
        "output": "等待页面包含 “运行中”，最长120s"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击表格里文本是“aaa\"那一行的删除按钮\nClickTextOfRow | aaa | 删除",
        "output": "点击表格里文本是“aaa\"那一行的删除按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${iframe_elem}  FindElem | iframe",
        "output": "查找 iframe 元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 打开主页面\nOpenUrl | ${MAIN_PAGE_URL}",
        "output": "打开 ${MAIN_PAGE_URL}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Click | 请输入指标id/指标名称/指标英文缩写",
        "output": "点击 请输入指标id/指标名称/指标英文缩写"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "FillArea | [placeholder*=\"请输入指标id/指标名称/指标英文缩写\"] | sssssss",
        "output": "向 placeholder*=请输入指标id/指标名称/指标英文缩写 的元素中输入：‘sssssss’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${exist}  IsAnyTextExisting | 帮助中心 | 问卷调查\nIF  ${exist}\n    Click  不再提示\nEND",
        "output": "如果页面存在 '帮助中心' 或 '问卷调查'，那就点击 '不再提示'"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置“业务别名”字段值为’业务别名更新‘\nSetField | 业务别名 | 业务别名更新",
        "output": "更新“业务别名”字段值为’业务别名更新‘"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "检查页面包含\n    [Arguments]  @{name}\n    FOR  ${element}  IN  @{name}\n      ${element}  Strip String  ${element}  # 去掉 name 前后的空格\n      CheckHasText  ${element}  # 校验页面包含 name\n    END",
        "output": "写一个名为：“检查页面包含”的关键字，接受参数 name，name可以是多个，作用是去掉 name 前后的空格，然后校验页面包含 name，name可以为多个"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 '登录'，不包括 '验证码登录'\nClick | 登录 | exclude=验证码登录",
        "output": "点击 ‘登录’，不包括 ‘验证码登录’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Execute Javascript  window.scrollTo(0, document.body.scrollHeight)",
        "output": "滚到最底部"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面是否存在文字'指南'\n${exist}  IsAnyTextExisting | 指南\n\n# 如果存在文字'指南'，则点击该文字\nIF  $exist\n    Click  指南\nEND",
        "output": "如果页面存在文字'指南'，则点击该文字"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待url中不再包含login\nWaitURLNotContains | login",
        "output": "等待 url 中不再包含 login"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击添加数据集\nClick | 添加数据集\n\n# 输入表单Dataset Name和Description\nSetField | Dataset Name | testDataset\nSetField | Description | testDescription",
        "output": "点击添加数据集，表单Dataset Name输入testDataset，Description输入testDescription"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "TOB登录\n    [Arguments]  ${user}=${USER}  ${password}=${PW}\n    OpenBrowser  https://console.volcengine.com/auth/login/\n    SetField  用户名  ${user}\n    SetField  密码  ${password}\n    Click  立即登录\n    WaitURLNotContains  login\n    OpenUrl  ${HOST}\n    WaitLoading\n    ClickIfElemExists  .arco-notification-close-btn\n    ClickIfExists  全局搜索支持API",
        "output": "写一个名为：“TOB登录” 的关键字，接受 user, password 参数，默认值分别为 ${USER}, ${PW} 作用是：\n1. 打开浏览器访问页面：https://console.volcengine.com/auth/login/\n2. 输入用户名、密码，然后点击 ‘立即登录’，并等待 url 中不在包含 login\n3. 然后访问页面 ${HOST}，等页面加载完成后，尝试点击 class包含arco-notification-close-btn的元素\n4. 最后，如果页面存在 ‘全局搜索支持API’ 就点击"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 ${metric_group} 之前的复选框\nClickElemToTheDirectionOf | ${metric_group} | left | input[type='checkbox']",
        "output": "点击 ${metric_group} 之前的复选框"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 读取文件 data.py 中的内容\n${file_content}    Get File    data.py\nLog    ${file_content}",
        "output": "读取文件 data.py 中的内容"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 '监控数据' 下方的元素\nClickElemToTheDirectionOf | 监控数据 | bottom",
        "output": "点击 ‘监控数据’ 下方的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${file_content}    Get File    Library/data.py",
        "output": "读取文件 Library/data.py 中的内容"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 class 包含 view-lines 的元素\nClickElem | [class*=view-lines]\n\n# 读取文件 Library/data.py 的内容\n${file_content}=  Get File  Library/data.py\n\n# 将文件内容粘贴到光标处\nPaste | ${EMPTY} | ${file_content}",
        "output": "点击 class包含view-lines 的元素，然后读取文件 Library/data.py 的内容，并将其粘贴到光标处"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击搜索图标\nClickIcon | search",
        "output": "点击搜索icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 '达人数据'\nClick | 达人数据\n# 等待页面加载完成\nWaitLoading\n# 鼠标移动到 '自定义时间' 上并点击\nMoTo | 自定义时间\nMClick",
        "output": "点击 ‘达人数据’，等页面加载好后，鼠标移动到 ‘自定义时间’ 上点击"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 视频合作达人表格截图\nTableScreen | tbl=视频合作达人",
        "output": "视频合作达人表格截图"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 截取current_id为Module_8的元素的图片\nElemScreen| [__current_id=Module_8]",
        "output": "截取 __current_id=Module_8 的元素的图片"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 class包含view-lines 的元素\nClickElem | [class*=view-lines]\n\n# 发送 ctrl+a\nSendCtrlA",
        "output": "点击 class包含view-lines 的元素，然后发送 ctrl+a"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置变量 ${start-date} 和 ${end-date}\n${start-date}  Set Variable  2023-12-11\n${end-date}  Set Variable  2024-01-11",
        "output": "变量 ${start-date}  ${end-date} 分别为 2023-12-11 和 2024-01-11"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 去掉变量 ${start-day} 和 ${end-day} 的前缀 ‘0’\n${start_day_without_zero}  Evaluate  '${start-day}'.lstrip('0')\n${end_day_without_zero}  Evaluate  '${end-day}'.lstrip('0')",
        "output": "去掉变量 ${start-day} 和 ${end-day} 的前缀 ‘0’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 计算19天前的日期并保存到变量 start_date\n${start_date}  Evaluate  (datetime.datetime.now() - datetime.timedelta(days=19)).strftime('%Y-%m-%d')  modules=datetime\n\n# 计算8天前的日期并保存到变量 end_date\n${end_date}  Evaluate  (datetime.datetime.now() - datetime.timedelta(days=8)).strftime('%Y-%m-%d')  modules=datetime",
        "output": "计算19天前的日期，以 ‘2022-11-01’ 的形式保存到变量 start_date 中，计算8天前的日期，以 ‘2022-11-01’ 的形式保存到变量 end_date 中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 '执行' 按钮\nClick | 执行\n# 判断是否出现 '当前有任务正在执行，无法执行'\n${exist} = IsAnyTextExisting | 当前有任务正在执行，无法执行\nIF  ${exist}\n    # 等待文案消失\n    WaitTextDisappear | 当前有任务正在执行，无法执行\n    # 再次点击 '执行' 按钮\n    Click | 执行\nEND",
        "output": "点击 ‘执行’ 按钮，如果出现文案 ‘当前有任务正在执行，无法执行’，就等待文案消失后再点击"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 定义一个全局变量，名字叫“case_name”\nSet Global Variable  ${case_name}  my_test_case",
        "output": "定义一个全局变量，名字叫“case_name”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 '行业' 为：'全部'\nSetField | 行业 | 全部",
        "output": "设置 ‘行业’ 为：‘全部’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 '城市' 为：'南京市'、'北京市'\nSetField | 城市 | 南京市 | 北京市",
        "output": "设置 ‘城市’ 为：‘南京市’、‘北京市’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "选择自定义日期\n    [Arguments]  ${start_date}  ${end_date}\n    MoTo | 自定义时间\n    操作日期控件  ${start_date}  ${end_date}",
        "output": "写一个名为：“选择自定义日期” 的关键字，接受 start_date, end_date 参数，逻辑是：\n1. 鼠标移动到 ‘自定义时间’ 上\n2. 然后以 start_date, end_date 为参数，调用关键字 ‘操作日期控件’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查变量by_what是否包含'日'\nIF  '日' in '${by_what}'\n    # 点击元素elem中class包含byted-date-picker的后代元素\n    ClickElem  | ${elem} [class*=byted-date-picker]\nEND",
        "output": "如果变量 by_what 中包含 '日', 就点击元素 elem 中 class包含byted-date-picker 的后代元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 找到 __current_id*='高级日期选择器' 的元素 elem\n${elem}  FindElem | [__current_id*='高级日期选择器']",
        "output": "找到 __current_id*=‘高级日期选择器’ 的元素 elem"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 找到表格中值为\"line_id\"所在的行\n${row}  FindByText  | line_id\n\n# 修改第二列下拉框的值为int\nFillCell  | ${row}  | 2  | int",
        "output": "找到表格中值为\"line_id\"所在的行，并修改第二列下拉框的值为int"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 时间切割 | 1 | 分",
        "output": "设置 ‘时间切割’ 为： 1  分"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向元素 ${elem} 中输入：${EMPTY} 和 '分'\nFillArea | ${elem} | ${EMPTY} | 分",
        "output": "向元素 ${elem} 中输入：${EMPTY}  和  ‘分’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 依次点击 '数据管理'、'自定义 Session'\nClickTextOneByOne | 数据管理 | 自定义 Session",
        "output": "依次点击 ‘数据管理’、‘自定义 Session’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "DAndD | ${聚合信息} | ${聚合区域}",
        "output": "将元素${聚合信息}拖入到${聚合区域}中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 先获取页面中文本为\"test\"的元素数量\n${count}=    Get Element Count    xpath://*[text()='test']\n# 校验获取到的元素数量是否大于等于2\nShould Be True    ${count} >= 2",
        "output": "校验页面中至少有两个文本为“test”的内容"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将文本为 sales 的元素拖拽到 ${elem} 中\nDAndD | sales | ${elem}",
        "output": "将文本为 sales 的元素，拖拽到 ${elem} 中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 找到文本为 ${分组信息} 且具有draggable属性的元素\n${elem}  FindElem | [draggable]:contains(${分组信息})",
        "output": "找到文本为 ${分组信息} 且具有draggable属性的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 请选择字段\nClick | 请选择字段\n\n# 选择 sum_sales 下拉选择项\nSelectOption | sum_sales",
        "output": "点击 请选择字段 ，选择 sum_sales 下拉选择项"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找第一个文本为 '请拖入字段' 的元素的父元素\n${elem}  FindByText | 请拖入字段\n${parent}  FindParentElem | ${elem}",
        "output": "查找第一个文本为 ‘请拖入字段’ 的元素的，父元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击class=\"XWO9b\"的'商品榜单'的文本\nClickElem | [class=XWO9b]:contains(商品榜单)",
        "output": "点击class=\"XWO9b\"的'商品榜单'的文本"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查是否存在__current_id=\"单选框_4\"的div元素\n${exist}  IsElemExisting | div[__current_id='单选框_4']\n\n# 如果存在，点击该元素中的'未上团商家'\nIF  ${exist}\n    Click  未上团商家  | base=div[__current_id='单选框_4']\nEND",
        "output": "检查是否存在__current_id=\"单选框_4\"的div元素，如果存在，点击该元素中的'未上团商家'"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "关闭浏览器\n    [Arguments]  @{exclude}\n    CheckErrExclude  @{exclude}\n    CloseBrowser",
        "output": "写一个名为 “关闭浏览器” 的关键字，接受 exclude 参数，作用是：先校验页面是否有错误，在exclude中的都不算错误，然后关闭浏览器"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成以 ‘标签_auto_’ 开头的随机字符串\n${rand_str}  GenerateRandomWithPrefix | 标签_auto_ | 15 | [LETTERS][NUMBERS]",
        "output": "生成以 ‘标签_auto_’ 开头的随机字符串"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 '标签名称' 为：${result}\nSetField | 标签名称 | ${result}",
        "output": "设置 ‘标签名称’ 为：${result}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "MoveIntoView  div[__current_id=\"标题_9\"]",
        "output": "向下滑动到__current_id=\"标题_9\"的div的元素展示在页面内"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "MoveIntoView  div[__current_id=\"Grid 布局_4\"]",
        "output": "向下滑动到__current_id=\"Grid 布局_4\"展示在页面内"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Execute JavaScript  window.scrollBy(0, -100)",
        "output": "向上滑动100px"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断是否存在class=\"byted-Table-Body\"的tbody下的class=\"byted-Table-Row\"的tr标签\n${exist}  IsAnyElemExisting | tbody.byted-Table-Body tr.byted-Table-Row\n\n# 如果存在，则点击'商品详情'\nIF  ${exist}\n    Click  商品详情\nEND",
        "output": "判断是否存在class=\"byted-Table-Body\"的tbody下的class=\"byted-Table-Row\"的tr标签，如果存在，则点击'商品详情'"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 对整个页面截图\nScreenshot",
        "output": "对整个页面截图"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 寻找__current_id=\"Module_6\"的div保存在element中\n${element}  FindElem | div[__current_id=Module_6]",
        "output": "寻找__current_id=\"Module_6\"的div保存在element中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断变量SSO_URL是否存在\n${exist}  IsVarExisting | SSO_URL\n\n# 如果存在变量SSO_URL，就等待页面加载完成，否则就打印 ‘1111’\nIF  ${exist}\n    WaitLoading\nELSE\n    Log  1111\nEND",
        "output": "如果存在变量 SSO_URL，就等待页面加载完成，否则就打印 ‘1111’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 打开主页面\nOpenUrl | ${MAIN_PAGE}",
        "output": "打开链接 ${MAIN_PAGE}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 屏幕向下滑动450px\nExecute Javascript | window.scrollBy(0, 450)",
        "output": "屏幕向下滑动450px"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找文本为 '资产门户' 的元素\n${elem}  FindByText | 资产门户\n\n# 将元素 ${elem} 向下滚动到 50% 处\nScrollElementUpDown | ${elem} | 50%",
        "output": "将文本为 ‘资产门户’ 的元素向下滚动 50%"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 同时运行关键字 A 和 关键字 B\nRun Keywords  A  AND  B",
        "output": "同时运行关键字 A 和 关键字 B"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 从resp中获取data字段的长度\n${data_length}=  Get Length  ${resp[\"data\"]}\n\n# 检查data字段的长度是否为1\nIF  ${data_length} == 1\n    # 获取dashboard_id字段\n    ${dashboard_id}=  Set Variable  ${resp[\"data\"][0][\"dashboard_id\"]}\nELSE\n    # 抛出异常\n    Fail  Data length is not 1\nEND",
        "output": "变量 resp 是个 JSON，如果 resp 的 data 字段，长度为 1 就取出其中的 dashboard_id 字段，否则就抛出异常"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断resp的data字段是否是列表\n${is_list}  Evaluate  isinstance(${resp['data']}, list)\n\n# 如果data是列表，查找符合条件的项\nIF  ${is_list}\n    # 初始化找到的项为None\n    ${found_item}  Set Variable  ${None}\n\n    # 遍历data列表\n    FOR  ${item}  IN  @{resp['data']}\n        # 判断列表项的children长度是否为1\n        ${length}  Evaluate  len(${item['children']})\n        IF  ${length} == 1\n            # 找到符合条件的项，退出循环\n            ${found_item}=  Set Variable  ${item}\n            Exit For Loop\n        END\n    END\n\n    # 如果找到了符合条件的项，取出dashboard_id字段\n    IF  ${found_item} != ${None}\n        ${dashboard_id}  Set Variable  ${found_item['dashboard_id']}\n    ELSE\n        # 未找到符合条件的项，抛出异常\n        Fail  未找到符合条件的列表项\n    END\nELSE\n    # resp的data字段不是列表，抛出异常\n    Fail  resp的data字段不是列表\nEND",
        "output": "变量 resp 是个 JSON，如果 resp 的 data 字段是个列表，找出data中第一个 children长度为 1的列表项， 取出其中的 dashboard_id 字段，若无符合的 则就抛出异常"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${contain}  Evaluate  'projects' in '${MAIN_PAGE}'\n#如果包含，则路径为 /datafinder/api/v1/projects/${id}\nIF  ${contain}\n    ${path}  Set Variable  /datafinder/api/v1/projects/${id}\n#否则路径为/datafinder/api/v1/${id}\nELSE\n    ${path}  Set Variable  /datafinder/api/v1/${id}\nEND",
        "output": "判断变量MAIN_PAGE是否包含projects, 如果包含，则路径为 /datafinder/api/v1/projects/${id},否则路径为/datafinder/api/v1/${id}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "组合访问地址\n    [Arguments]  ${suffix}\n    # 获取浏览器当前的url\n    ${url}  GetCurrentUrl\n    # 判断url中是否包含 projects\n    ${exist}  IsURLContains | projects\n    # 如果url中包含 projects, 那么变量 project 就等于 projects+'/'，否则就等于 ''\n    IF  ${exist}\n        ${project}  Set Variable  projects/\n    ELSE\n        ${project}  Set Variable  ''\n    END\n    # 从 url 中解析出域名 domain\n    ${domain}  Evaluate  urllib.parse.urlparse($url).netloc  modules=urllib\n    # 返回 https://domain/datafinder/api/v1/ + project + suffix\n    [Return]  https://${domain}/datafinder/api/v1/${project}${suffix}",
        "output": "写一个关键字“组合访问地址”，接受参数 suffix, 逻辑为：\n1. 获取浏览器当前的url, 如果url中包含 projects, 那么变量 project 就等于 projects+'/'，否则就等于 ''\n2. 从 url 中解析出域名 domain\n3. 返回 https://domain/datafinder/api/v1/ + project + suffix"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 发送post请求到 https://www.126.com, 参数为：id=x, name=y\n${resp_json}  UiSendRequest | POST | https://www.126.com | {\"id\": \"x\", \"name\": \"y\"}\n\n# 判断响应中的data字段是否包含x\n${exist}  Evaluate  \"x\" in $resp_json[\"data\"]\n\n# 如果包含x则成功，否则失败\nIF  ${exist}\n    Log  成功\nELSE\n    Fail  失败\nEND",
        "output": "发送 post 请求到 https://www.126.com, 参数为：id=x, name=y, 如果响应中的 data 字段中包含 x 则成功，否则就失败"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "清除统计口径\n    [Arguments]  ${name}\n    # 向 https://www.toutiao.com 发送 get 请求\n    ${resp_json}  UiSendRequest | GET | https://www.toutiao.com\n    # 获取 respJson 中的 ID \n    ${id}  GetValuesFromJson | ${resp_json} | ID\n    # 向 https://www.toutiao.com 发送 delete 请求\n    ${resp_json}  UiSendRequest | DELETE | https://www.toutiao.com",
        "output": "写一个关键字“清除统计口径”，接受参数name, 逻辑为：\n1. 发送 get 请求到 https://www.toutiao.com, 拿到请求结果为resp, resp是个JSON， 从resp中获取ID字段的内容\n2. 发送 delete 请求到 https://www.toutiao.com"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "清除统计口径\n    [Arguments]  ${name}\n    # 发送 get 请求到 https://www.toutiao.com, 拿到请求结果为 resp\n    ${resp}  UiSendRequest | GET | https://www.toutiao.com\n\n    # 获取 resp中 data字段下的name字段的内容 subject_name\n    ${subject_name}  GetValuesFromJson | ${resp} | data.name\n\n    # 如果 subject_name与name一致，则获取获取resp中 data字段下的id字段的内容；否则抛出异常\n    IF  \"${subject_name}\" == \"${name}\"\n        ${id}  GetValuesFromJson | ${resp} | data.id\n    ELSE\n        Fail  Subject name does not match.\n    END\n\n    # 发送 delete 请求到 https://www.toutiao.com\n    ${delete_resp}  UiSendRequest | DELETE | https://www.toutiao.com",
        "output": "写一个关键字“清除统计口径”，接受参数name, 逻辑为：\n1. 发送 get 请求到 https://www.toutiao.com, 拿到请求结果为resp, \n2. resp是个JSON，  获取resp中 data字段下的name字段的内容subject_name，如果 subject_name与name一致，则获取获取resp中 data字段下的id字段的内容；否则抛出异常\n3. 发送 delete 请求到 https://www.toutiao.com"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取当前URL\n${url}  GetCurrentUrl\n\n# 使用Python代码解析域名\n${domain}  Evaluate  urllib.parse.urlparse($url).netloc  modules=urllib",
        "output": "获取浏览器当前的url，从中解析出域名 domain"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击页面上三个点的icon\nClickIcon | more",
        "output": "点击页面上三个点的icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Click | 暂停实验",
        "output": "点击暂停实验按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 如果页面存在文本'失败'，则返回失败\n${exist}  IsAnyTextExisting | 失败\nIF  ${exist}\n    Fail  页面存在文本'失败'\nEND",
        "output": "如果页面存在文本'失败'，则返回失败"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面是否存在登录按钮\n${exist}  IsAnyTextExisting | 登录\n# 如果存在，则点击登录按钮\nIF  $exist\n    Click  登录\n# 如果不存在，则打印已登录\nELSE\n    Log  已登录\nEND",
        "output": "如果页面存在 ‘登录’ 按钮就点击，否则就打印：‘已登录’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将年龄设置为 25\nSetField | 年龄 | 25\n\n# 将姓名设置为李四\nSetField | 姓名 | 李四",
        "output": "将年龄设置为 25， ‘姓名’设置为 ‘李四’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 class包含clear-wrapper 和 xxx 的最后一个元素\nClickElem | [class*=clear-wrapper][class*=xxx]:eq(-1)",
        "output": "点击 class包含clear-wrapper 和 xxx  的最后一个元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断当前页面URL是否包含 'bytedance' 或 'console'\n${is_url_contain_bytedance}   IsURLContains | bytedance\n${is_url_contain_console}   IsURLContains | console\n\n# 如果当前页面URL不包含 'bytedance' 也不包含 'console' 就输入 '账号': ${user}, 密码： ${password}\nIF  \"${is_url_contain_bytedance}\" == \"False\" and \"${is_url_contain_console}\" == \"False\"\n    SetField | 账号 | ${user}\n    SetField | 密码 | ${password}\nEND",
        "output": "如果当前页面URL不包含 ‘bytedance’ 也不包含 ‘console’ 就输入 ‘账号’: ${user}, 密码： ${password}, 然后返回"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# ${value1}的值必须大于0\n${result} =  Evaluate  int(${value1}) > 0\nShould Be True  ${result}",
        "output": "${value1}的值必须大于0"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向 ${search_api} 发送 GET 请求\n${resp_json}  UiSendRequest | GET | ${search_api}\n\n# 获取 respJson 中的 data 字段值\n${data_value}  GetValuesFromJson | ${resp_json} | data\n\n# 获取 respJson 中的 status 字段值\n${status_value}  GetValuesFromJson | ${resp_json} | status\n\n# 校验 data 字段不为空\nShould Not Be Empty  ${data_value}\n\n# 校验 status 字段为 success\nShould Be Equal As Strings  ${status_value}  success",
        "output": "发送 GET 请求到 ${search_api}, 得到的响应 resp 是个 JSON，要校验 resp 中的 data 字段不为空，且 status 为 success"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验页面有无异常\nCheckErrMsg",
        "output": "校验页面有无明显报错"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取浏览器控制台变量 aaa 的值\n${aaa_value}  Execute Javascript  return window.aaa;",
        "output": "获取浏览器控制台变量 aaa 的值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 '预估数量'\nClick | 预估数量\n\n# 校验页面无异常\nCheckErrMsg\n\n# 点击 '确定'\nClick | 确定",
        "output": "点击 ‘预估数量’，并校验页面无异常，然后点击 ‘确定’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取表格的 '预估数量' 列的值\n@{column_values}  GetColValues | 预估数量\n\n# 校验预估数量大于 0\nFOR  ${value}  IN  @{column_values}\n    ${int_value}  Convert To Integer  ${value}\n    Should Be True  ${int_value} > 0  msg=预估数量应大于 0\nEND",
        "output": "获取表格的 ‘预估数量’ 列的值，并校验其大于 0"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向 https://xxx.yyy.zzz.com/faas/services/ttwy2i/invoke/query_onpremise_env_record 发送 post 请求, 请求体和请求头参看题目中curl命令\n${resp_json}  UiSendRequest | POST | https://xxx.yyy.zzz.com/faas/services/ttwy2i/invoke/query_onpremise_env_record | {\"current\":1,\"pageSize\":10,\"only_favor\":false,\"sorter\":{},\"filter\":{},\"page\":1,\"limit\":10,\"product_id\":\"61b191af4c6bd0023a2625ae\",\"current_user\":\"胡om)\"} | {\"accept\": \"application/json\", \"content-type\": \"application/json;charset=UTF-8\"}\n\n# 获取 resp_json 中的 data \n${data}  GetValuesFromJson | ${resp_json} | data\n\n# 获取 resp_json 中的 status \n${status}  GetValuesFromJson | ${resp_json} | status",
        "output": "发送请求，并获得结果中的 data 和 status 字段，请求为：curl 'https://cloudapi.byted/faas/services/ttwy2i/invoke/query_onpremise_env_record' \\\n-H 'authority: cloudapi.byted' \\\n-H 'accept: application/json' \\\n-H 'accept-language: zh-CN,zh;q=0.9,en;q=0.8' \\\n-H 'content-type: application/json;charset=UTF-8' \\\n-H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36' \\\n--data-raw '{\"current\":1,\"pageSize\":10,\"only_favor\":false,\"sorter\":{},\"filter\":{},\"page\":1,\"limit\":10,\"product_id\":\"61b191af4c6bd0023a2625ae\",\"current_user\":\"胡om)\"}' \\\n--compressed"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "\n${resp_json}  UiSendRequest | POST | https://xxx.yyy.zzz.com/faas/services/ttwy2i/invoke/query_onpremise_env_record | {\"current\":1,\"pageSize\":10,\"env_id\":\"64002434acff42002cd29798\",\"only_favor\":false,\"sorter\":{},\"filter\":{},\"page\":1,\"limit\":10,\"product_id\":\"61360660bb258b00459e2c1c\",\"current_user\":\"胡雷庭(huleiting.hlt@bytedance.com)\"} | {\"accept\": \"application/json\", \"content-type\": \"application/json;charset=UTF-8\"}",
        "output": "发送请求：curl 'https://cloudapi.bytedance.net/faas/services/ttwy2i/invoke/query_onpremise_env_record' \\\n-H 'authority: cloudapi.bytedance.net' \\\n-H 'accept: application/json' \\\n-H 'accept-language: zh-CN,zh;q=0.9,en;q=0.8' \\\n-H 'content-type: application/json;charset=UTF-8' \\\n-H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36' \\\n--data-raw '{\"current\":1,\"pageSize\":10,\"env_id\":\"64002434acff42002cd29798\",\"only_favor\":false,\"sorter\":{},\"filter\":{},\"page\":1,\"limit\":10,\"product_id\":\"61360660bb258b00459e2c1c\",\"current_user\":\"胡雷庭(huleiting.hlt@bytedance.com)\"}' \\\n--compressed"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向 https://xxx.yyy.zzz.com/faas/services/ttwy2i/invoke/query_onpremise_env_record 发送 post 请求, 请求体为给定的JSON数据\n${resp_json}  UiSendRequest | POST | https://xxx.yyy.zzz.com/faas/services/ttwy2i/invoke/query_onpremise_env_record | {\"current\":1,\"pageSize\":10,\"env_id\":\"64002434acff42002cd29798\",\"only_favor\":false,\"sorter\":{},\"filter\":{},\"page\":1,\"limit\":10,\"product_id\":\"61360660bb258b00459e2c1c\",\"current_user\":\"胡雷庭(huleiting.hlt@bytedance.com)\"} | ${None}\n\n# 校验 resp 中 status 为 success\nShould Be Equal As Strings  ${resp_json['status']}  success\n\n# 校验 data 长度大于1\n${data_length}=  Get Length  ${resp_json['data']}\nShould Be True  ${data_length} > 1\n\n# 校验 data 中第一项包含 hello\nShould Contain  ${resp_json['data'][0]}  hello",
        "output": "发送请求：curl 'https://cloudapi.bytedance.net/faas/services/ttwy2i/invoke/query_onpremise_env_record' \\\n--data-raw '{\"current\":1,\"pageSize\":10,\"env_id\":\"64002434acff42002cd29798\",\"only_favor\":false,\"sorter\":{},\"filter\":{},\"page\":1,\"limit\":10,\"product_id\":\"61360660bb258b00459e2c1c\",\"current_user\":\"胡雷庭(huleiting.hlt@bytedance.com)\"}' \\\n--compressed \n校验 resp 中 status 为 success, 且 data 长度大于1，并且 data 中第一项应该包含 hello"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "获取CSRF请求头\n    # 查找 name 为 csrf_token 的 input 元素\n    ${csrf_elem}  FindElem  | input[name='csrf_token']\n    # 获取元素的 value 值\n    ${csrf_value}  GetElemAttr  |  ${csrf_elem}  |  value\n    # 返回一个 dict 对象，{'X-Csrf-Token': value}\n    &{csrf_header}  Create Dictionary  |  X-Csrf-Token  |  ${csrf_value}\n    [Return]  ${csrf_header}",
        "output": "写一个名为：“获取CSRF请求头” 的关键字，作用是，找到 name为csrf_token的 input 元素，获取其 value 值，然后返回一个 dict 对象，{'X-Csrf-Token': value}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "关闭浏览器\n    CheckErrMsg\n    CloseBrowser",
        "output": "写一个名为：“关闭浏览器” 的关键字，作用是：校验页面无异常，然后关闭浏览器"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在输入关键词处填写输出，并回车\nSetField | 输入关键词 | 输出 | enter=True",
        "output": "在 输入关键词 处填写 输出 ，并回车"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 调用/使用/执行关键字 Hello，参数: ${w}, 返回: ${ret}\n${ret}  Hello  ${w}",
        "output": "调用/使用/执行关键字 Hello，参数: ${w}, 返回: ${ret}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 清空姓名字段\nSetField | 姓名 | ${KEY_BACKSPACE}",
        "output": "清空姓名字段"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在当前位置输入同意后回车\nSendText | 同意 | enter=True",
        "output": "在当前位置输入同意后回车"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击/输入回车\nSendText | enter=True",
        "output": "点击/输入回车"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击暂不处理右下方的class包含cancel的元素\nClickElemToTheDirectionOf | 暂不处理 | bottomRight | [class*=cancel]",
        "output": "点击暂不处理右下方的class包含cancel的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 ${elem} 左上角的name为a的元素\nClickElemToTheDirectionOf | ${elem} | topLeft | [name=a]",
        "output": "点击 ${elem} 左上角的name为a的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击验证码下方的登录\nClickTextToTheDirectionOf | 验证码 | bottom | 登录",
        "output": "点击验证码下方的登录"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击知道了上方的关闭小图标\nClickIconToTheDirectionOf | 知道了 | top | close",
        "output": "点击知道了上方的关闭小图标"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击左上角的编辑\nClickTextToTheDirectionOf | SCREEN_CENTER | topLeft | 编辑",
        "output": "点击左上角的编辑"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击屏幕下方的 id=x的元素\nClickElemToTheDirectionOf | SCREEN_CENTER | bottom | [id=x]",
        "output": "点击屏幕下方的 id=x的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击第一个用例管理右边的更多icon\nClickIconToTheDirectionOf | :contains(用例管理):eq(0) | right | more",
        "output": "点击第一个用例管理右边的更多icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击class包含y的元素前面的确定\nClickTextToTheDirectionOf | [class*=y] | left | 确定",
        "output": "点击class包含y的元素前面的确定"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击第5个name包含a且id为x且包含OK的元素\nClickElem | [id=x][name*=a]:contains(OK):eq(4)",
        "output": "点击第5个name包含a且id为x且包含OK的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击id=x的div或name=x的span\nClickElem | div[id='x'],span[name='x']",
        "output": "点击id=x的div或name=x的span"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击通过，不包括全通过\nClick | 通过 | exclude=全通过",
        "output": "点击通过，不包括全通过"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 id=a 元素中的 OK\nClick | OK | base=[id=a]",
        "output": "点击 id=a 元素中的 OK"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击取消button\nClickElem | button:contains(取消)",
        "output": "点击取消button"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击弹窗中的确认\nClick | 确认 | base=POPUP",
        "output": "点击弹窗中的确认"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击弹出层中的编辑\nClick | 编辑 | base=POPUP",
        "output": "点击弹出层中的编辑"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击下一页，然后点击删除，最后点击确定\nClickTextOneByOne | 下一页 | 删除 | 确定",
        "output": "点击下一页，然后点击删除，最后点击确定"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 先点击添加，再点击确定\nClickTextOneByOne | 添加 | 确定",
        "output": "先点击添加，再点击确定"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "获取剪切板内容\n${val}  GetCopied",
        "output": "获取剪切板内容"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "向span id=x中粘贴文本 123\nPaste | span[id=x] | 123",
        "output": "向span id=x中粘贴文本 123"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "向当前位置粘贴文本 123\nPaste | ${EMPTY} | 123",
        "output": "向当前位置粘贴文本 123"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将id=tea的元素拖拽到class=shop的元素上\nDAndD | [id=\"tea\"] | [class=\"shop\"]",
        "output": "将id=tea的元素拖拽到class=shop的元素上"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将小学拖入学历中\nDAndD | 小学 | 学历",
        "output": "将小学拖入学历中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入姓名张三\nSetField | 姓名 | 张三",
        "output": "输入姓名张三"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置第2个Age为“18”并回车\nSetField | Age | 18 | idx=1 | enter=True",
        "output": "设置第2个Age为“18”并回车"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在class包含A的div中输入\"ct\" \"=\" \"NY\"\nFillArea | div[class*=A] | ct | = | NY",
        "output": "在class包含A的div中输入\"ct\" \"=\" \"NY\""
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 选择型号small\nSetField | 型号 | small",
        "output": "选择型号small"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置弹窗中的性别为：man\nSetField | man | base=POPUP",
        "output": "设置弹窗中的性别为：man"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将学生信息下方的性别设置为：woman\nSetField | 性别 | woman | near=学生信息",
        "output": "将学生信息下方的性别设置为：woman"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 进入name为y的frame\nToFrame | iframe[name=y]",
        "output": "进入name为y的frame"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击图标more (...)\nClickIcon | more",
        "output": "点击图标more (...)"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击元素 elem 中的加号\nClickIcon | plus | base=${elem}",
        "output": "点击元素 elem 中的加号"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 如果a=3就打印yes\nIF  \"${a}\" == \"3\"\n  Log  yes\nEND",
        "output": "如果a=3就打印yes"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 截取 id=x 的元素的图片并和基准图对比，相似度为0.95\nImageDiff | [id=x] | sim=0.95",
        "output": "截取 id=x 的元素的图片并和基准图对比，相似度为0.95"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 截取 ${elem} 的图片，命名为：图1，并和基准图对比\nImageDiff | ${elem} | pic_name=图1",
        "output": "截取 ${elem} 的图片，命名为：图1，并和基准图对比"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "#判断id为x的span是否存在\n${exist}  IsAnyElemExisting | span[id='x']",
        "output": "判断id为x的span是否存在"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "#判断变量x是否存在\n${exist}  IsVarExisting | x",
        "output": "判断变量x是否存在"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 如果页面存在/出现 “Go”，就打印ok\n${exist}  IsAnyTextExisting | Go\nIF  $exist\n    Log  ok\nEND",
        "output": "如果页面存在/出现 “Go”，就打印ok"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取 respJson 中的 name \n${value}  GetValuesFromJson | ${respJson} | name",
        "output": "获取 respJson 中的 name"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找文本为删除或取消的按钮\n${elem}  FindByText | 删除 | 取消",
        "output": "查找文本为删除或取消的按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找class包含A, id=D, 文本为OK的span\n${elem}  FindElem | span[class*=A][id=D]:contains(OK)",
        "output": "查找class包含A, id=D, 文本为OK的span"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找文本为OK的div的下一个id=x的button\n${elem}  FindElem | div:contains(OK) + button[id=x]",
        "output": "查找文本为OK的div的下一个id=x的button"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找元素elem的name=a的父元素\n${parent}  FindParentElem | ${elem} | [name=a]",
        "output": "查找元素elem的name=a的父元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 访问产品页面\nOpenUrl | ${产品地址}",
        "output": "访问产品页面"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击导航栏中“通用分析”\nClickMenu | 通用分析",
        "output": "点击导航栏中“通用分析”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 进入/去到 高级分析 > 热力图页面\nClickMenu | 高级分析 | 热力图",
        "output": "进入/去到 高级分析 > 热力图页面"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标点击确定\nMClick | 确定",
        "output": "鼠标点击确定"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标点击id为ok的button\nMClick | button[id=\"ok\"]",
        "output": "鼠标点击id为ok的button"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 移动到姓名字段上方10px处\nMoTo | 姓名 | dy=-10",
        "output": "移动到姓名字段上方10px处"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 发送 ALT + 下方向键\nPress Keys | None | ALT+ARROW_DOWN",
        "output": "发送 ALT + 下方向键"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成随机数\n${num}  GenerateRandom  | 15 | [LETTERS][NUMBERS]",
        "output": "生成随机数"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成长度为7的随机小写字符串\n${low}  GenerateRandom  | 7 | [LOWER]",
        "output": "生成长度为7的随机小写字符串"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成4位16进制数\n${hex}  GenerateRandom | 4 | [NUMBERS]abcdef",
        "output": "生成4位16进制数"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成随机中英文\n${hex}  GenerateRandom | 15 | 赵钱孙李周吴郑王冯陈褚卫蒋沈韩杨朱秦尤许何吕施张孔曹严华金魏陶姜戚[LETTERS]",
        "output": "生成随机中英文"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成 autotest 开头的长度为20的随机字符串\n${rand_str}  GenerateRandomWithPrefix | auto | 20 | [LETTERS][NUMBERS]",
        "output": "生成 autotest 开头的长度为20的随机字符串"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "获取id=a的元素个数\n${cnt}  GetElemCount | [id=a]",
        "output": "获取id=a的元素个数"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向 https://ab.com 发送 post 请求, 请求体: {\"name\": \"a\"}, 请求头: {\"header1\": \"val1\"}\n${resp_json}  UiSendRequest | POST | https://ab.com | {\"name\": \"a\"} | {\"header1\": \"val1\"}",
        "output": "# 向 https://ab.com 发送 post 请求, 请求体: {\"name\": \"a\"}, 请求头: {\"header1\": \"val1\"}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向 https://ab.com 发送 get 请求, 请求头: {\"header1\": \"val1\"}\n${resp_json}  UiSendRequest | GET | https://ab.com | ${None} | {\"header1\": \"val1\"}",
        "output": "向 https://ab.com 发送 get 请求, 请求头: {\"header1\": \"val1\"}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将变量y设置为空格\n${y}  Set Variable  ${SPACE}",
        "output": "将变量y设置为空格"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 截取性别分布图\nChartScreenshot| 性别分布",
        "output": "截取性别分布图"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 截取div.section中的第二个button的图片\nElemScreenshot| div.section button:eq(1)",
        "output": "截取div.section中的第二个button的图片"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 身高表截图\nTableScreenshot | tbl=身高",
        "output": "身高表截图"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取id为a的元素截图中的文本\n${txt}  GetElemScreenshotText | [id=a]",
        "output": "获取id为a的元素截图中的文本"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向下滚动2次\nPageDown | 2",
        "output": "向下滚动2次"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 元素${elem}向右滚动到80%处\nScrollElementLeftRight | ${elem} | 80%",
        "output": "元素${elem}向右滚动到80%处"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 以|为分隔符进行字符串连接\n${args_str}  Catenate  SEPARATOR=|  @{args}",
        "output": "以|为分隔符进行字符串连接"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获体重表格第一行的值\n@{vals}  GetRowValues | 1 | tbl=体重",
        "output": "获体重表格第一行的值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取第四个表格第3行中age值\n${val}  GetCellValue | 3 | age | tbl=4",
        "output": "获取第四个表格第3行中age值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等表格变成 1 行\nWaitRowCount | 1",
        "output": "等表格变成 1 行"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验身高表格中不包含错误\nCheckTableNotHas | 错误 | tbl=身高",
        "output": "校验身高表格中不包含错误"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查表中男士所在行中包含香烟、wine\nCheckRowHas | 男士 | 香烟 | wine",
        "output": "检查表中男士所在行中包含香烟、wine"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 确认数据表中婴儿所在行中不存在巧克力\nCheckRowNotHas | 婴儿 | 巧克力",
        "output": "确认数据表中婴儿所在行中不存在巧克力"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验第二个表中李四所在行的age列中包含18\nCheckCellHas  李四  age  18  tbl=2",
        "output": "校验第二个表中李四所在行的age列中包含18"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断表格第一行中是否存在: 'Edit'\n${exist}  IsRowContainsText | 1 | Edit",
        "output": "判断表格第一行中是否存在: 'Edit'"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断 June 所在表格行中是否存在 id=a 且文本为 x 的元素\n${exist}  IsRowContainsElem | June | [id=a]:contains(x)",
        "output": "判断 June 所在表格行中是否存在 id=a 且文本为 x 的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击任务列表中Online所在表格行的OK\nClickTextOfRow | Online | OK | tbl=任务列表",
        "output": "点击任务列表中Online所在表格行的OK"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击Jack所在表格行中 id=a 且文本为 x 的元素\nClickElemOfRow | Jack | [id=a]:contains(x)",
        "output": "点击Jack所在表格行中 id=a 且文本为 x 的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置表格第5行的值为：男 25 170cm\nFillRow | 5 | 男 | 25 | 170cm",
        "output": "设置表格第5行的值为：男 25 170cm"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击第一行中的第3个编辑图标\nClickIconOfRow | 1 | edit | idx=2",
        "output": "点击第一行中的第3个编辑图标"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击单元格（row, col）中的OK\nClickTextOfCell | row | col | OK",
        "output": "点击单元格（row, col）中的OK"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击第一行状态列中的disable  #Note: 行和列确定了一个具体的单元格\nClickTextOfCell | 1 | 状态 | disable",
        "output": "点击第一行状态列中的disable  #Note: 行和列确定了一个具体的单元格"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 上传文件 http://1.cvs\nUploadFile | http://1.cvs",
        "output": "上传文件 http://1.cvs"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 上传第三个文件${file}\nUploadFile | ${file} | idx=2",
        "output": "上传第三个文件${file}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待加载，最多等1分钟\nWaitLoading | timeout=60",
        "output": "等待加载，最多等1分钟"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等页面包含姓名或年龄\nWaitText | 姓名 | 年龄",
        "output": "等页面包含姓名或年龄"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等第4个id包含A, na=C,文本为OK的span\nWaitElem | span[id*=A][na=C]:contains(OK):eq(3)",
        "output": "等第4个id包含A, na=C,文本为OK的span"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待1小时3分钟7s\nSleep  1hour3min7s",
        "output": "等待1小时3分钟7s"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置浏览器尺寸为 1920 x 5000\nSetWindowSize | 1920 | 5000",
        "output": "设置浏览器尺寸为 1920 x 5000"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "查看标签预估数量并完成创建\n    [Arguments]  ${count}=-1\n    # 点击 ‘预估数量’，并校验页面无异常\n    Click  |  预估数量\n    CheckErrMsg\n\n    # 等页面加载完成后，校验表格第一行的 ‘预估数量’ 列的值应该 > count\n    WaitLoading\n    ${val}  GetCellValue  |  1  |  预估数量\n    ${val}  Convert To Number  |  ${val}\n    Should Be True  |  ${val} > ${count}\n\n    # 然后点击 ‘确定’，接着点击 ‘创建完成’，并校验页面无异常\n    Click  |  确定\n    Click  |  创建完成\n    CheckErrMsg\n\n    # 最后校验页面包含 ‘新建标签’、‘标签预览’\n    CheckHasText  |  新建标签  |  标签预览",
        "output": "写一个名为：“查看标签预估数量并完成创建” 的关键字，接受参数 count，默认值为 -1，逻辑为：\n1. 点击 ‘预估数量’，并校验页面无异常\n2. 等页面加载完成后，校验表格第一行的 ‘预估数量’ 列的值应该 > count\n3. 然后点击 ‘确定’，接着点击 ‘创建完成’，并校验页面无异常\n4. 最后校验页面包含 ‘新建标签’、‘标签预览’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "搜索后点击\n    [Arguments]  ${placeholder}  ${name}\n    SetField | ${placeholder} | ${name}\n    Sleep  3s\n    Click | ${name}",
        "output": "写一个名为：“搜索后点击”的关键字，接受参数 placeholder ，接受参数 name，作用是先向placeholder输入文本 name，等待 3 秒后点再点击 name"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "新建角色\n    ${角色名称}  GenerateRandom  | 6 | [LETTERS]\n    Click  | 新建角色\n    WaitLoading\n    Click  | 请输入名称\n    SetField  | 名称 | ${角色名称}\n    Click  | 创建",
        "output": "写一个名为：“新建角色”的关键字，定义一个${角色名称}为6 位包含大小写的随机参数，点击新建角色并等待页面加载，然后点击请输入名称后输入${角色名称}，最后点击创建"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 发送请求\n${resp_json}  UiSendRequest | POST | https://cloudapi.bytedance.net/faas/services/ttwy2i/invoke/query_onpremise_env_record | {\"current\":1,\"pageSize\":10,\"env_id\":\"64002434acff42002cd29798\",\"only_favor\":false,\"sorter\":{},\"filter\":{},\"page\":1,\"limit\":10,\"product_id\":\"61360660bb258b00459e2c1c\",\"current_user\":\"胡雷庭(huleiting.hlt@bytedance.com)\"}\n\n# 校验 resp 中 code 为 0\nShould Be Equal As Strings  ${resp_json[\"code\"]}  0\n\n# 校验 data 长度大于等于1\nShould Be True  len(${resp_json[\"data\"]}) >= 1\n\n# 校验 data 中第一项包含 admin_account 字段\nDictionary Should Contain Key  ${resp_json[\"data\"][0]}  admin_account",
        "output": "发送请求, 校验 resp 中 code 为 0, 且 data 长度大于等于1，并且 data 中第一项包含 admin_account 字段 , 请求为：curl 'https://cloudapi.bytedance.net/faas/services/ttwy2i/invoke/query_onpremise_env_record' \\\n--data-raw '{\"current\":1,\"pageSize\":10,\"env_id\":\"64002434acff42002cd29798\",\"only_favor\":false,\"sorter\":{},\"filter\":{},\"page\":1,\"limit\":10,\"product_id\":\"61360660bb258b00459e2c1c\",\"current_user\":\"胡雷庭(huleiting.hlt@bytedance.com)\"}' \\\n--compressed"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 '申请权限'\nClick | 申请权限\n\n# 切换到新窗口\nToNewWindow\n\n# 点击 '添加资源'\nClick | 添加资源",
        "output": "点击 ‘申请权限’，并切换到新打开的窗口，然后点击 '添加资源'"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 '数据源' 为 'EMR Hive'\nSetField | 数据源 | EMR Hive",
        "output": "设置 ‘数据源’ 为 'EMR Hive'"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 请选择集群 | Dataleap-Hadoop安全模式集群",
        "output": "设置 ‘请选择集群’ 为 ‘Dataleap-Hadoop安全模式集群’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 请选择数据库 | auto_triton_db",
        "output": "设置 ‘请选择数据库’ 为 ‘auto_triton_db‘"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 '访问类型' 为 '只读'，'有效期' 为 '1天'\nSetField | 访问类型 | 只读\nSetField | 有效期 | 1天",
        "output": "设置 ‘访问类型’ 为 ‘只读’，‘有效期’ 为 ‘1天’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 '需求类型' 为：模型训练/评估\nSetField | 需求类型 | 模型训练/评估\n\n# 设置 ‘详细原因’ 为：“主要场景：自动化测试使用；使用方式：自动化测试使用”\nSetField | 详细原因 | 主要场景：自动化测试使用；使用方式：自动化测试使用\n\n# 点击 ‘提交’\nClick | 提交",
        "output": "设置 '需求类型' 为：模型训练/评估，‘详细原因’ 为：“主要场景：自动化测试使用；使用方式：自动化测试使用”，然后点击 ‘提交’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置申请人为zhengchen\nSetField | 申请人 | zhengchen",
        "output": "设置申请人为：zhengchen"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置工单ID/申请资源为：emr\nSetField | 工单ID/申请资源 | emr",
        "output": "设置工单ID/申请资源为：emr"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取变量 ${申请人用户名} 中 '@' 前面的用户名部分\n${用户名}  Evaluate  \"${申请人用户名}\".split('@')[0]\n\n# 设置申请人为： ${用户名}\nSetField | 申请人 | ${用户名}",
        "output": "获取变量 ${申请人用户名} 中 ‘@’ 前面的用户名部分，然后设置申请人为：${用户名}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 搜索姓名/账号\nClick | 搜索姓名/账号\n\n# 在当前鼠标激活位置输入 管理员${usn}\nSendText | 管理员${usn}",
        "output": "点击 搜索姓名/账号，在当前鼠标激活位置输入 管理员${usn}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击class包含'arco-btn-status-danger'的元素\nClickElem | [class*=arco-btn-status-danger]",
        "output": "点击class包含‘arco-btn-status-danger’元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 发送DELETE请求到指定URL\n${resp_json}=  UiSendRequest  DELETE  https://data.bytedance.net/nuwav2/api/v1/pro/bizMetric/directly/delete/10109922?T_BusinessId=100234\n\n# 校验响应中的status为success\nShould Be Equal As Strings  ${resp_json[\"status\"]}  success",
        "output": "发送请求，并校验响应中的stadus，为success，curl 'https://data.bytedance.net/nuwav2/api/v1/pro/bizMetric/directly/delete/10109922?T_BusinessId=100234' \\\n-X 'DELETE' \\\n--compressed"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击${申请的数据表}所在表格行中的'加签'按钮\nClickTextOfRow | ${申请的数据表} | 加签",
        "output": "点击 ${申请的数据表} 所在表格行中的 ‘加签’ 按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 '后加签'\nClick | 后加签\n\n# 设置加签人为：${加签人用户名}\nSetField | 加签人 | ${加签人用户名}\n\n# 设置原因为：“严格yes!”\nSetField | 原因 | 严格yes!\n\n# 点击确定\nClick | 确定",
        "output": "点击 ‘后加签’, 设置加签人为：${加签人用户名}，原因为：“严格yes!”，然后点击确定"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置变量的值\n${show_name}  Set Variable  ${name}展示名\n${desc}  Set Variable  ${name}描述",
        "output": "变量 ${show_name}  ${desc} 的值分别为：${name}展示名  ${name}描述"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击当前弹框中的删除按钮\nClick | 删除 | base=POPUP",
        "output": "点击当前弹框中删除按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击驳回按钮\nClick | 驳回\n\n# 在‘驳回意见’字段输入‘驳回当前审核拆解指标’\nSetField | 驳回意见 | 驳回当前审核拆解指标",
        "output": "点击驳回按钮，在‘驳回意见’字段输入‘驳回当前审核拆解指标’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击‘我负责的’左侧勾选框\nCheckBoxOn | 我负责的",
        "output": "点击‘我负责的’左侧勾选框"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取实验名称的值\n${val}  GetFieldVal | 实验名称",
        "output": "获取实验名称的值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取当前时间戳\n${timestamp}  Evaluate  int(time.time())  modules=time",
        "output": "获取当前时间戳"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置测试套件变量\nSet Suite Variable | ${规则标签-明细数据} | ${name}",
        "output": "设置测试套件变量：${规则标签-全类型}, 其值为 ${name}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "查看标签运行状态\n    [Arguments]  ${tag_name}  ${expected_status}=运行成功\n    SetField | 搜索标签名 | ${tag_name} | enter=True\n    WaitLoading\n    ClickElem | [class*=arco-tree-node-title-text]:contains(${tag_name})\n    WaitLoading\n    Click | 运行记录\n    CheckRowHas | 1 | ${expected_status}",
        "output": "写一个名为：“查看标签运行状态” 的关键字，接受 tag_name, expected_status 参数，expected_status 默认值为：“运行成功”，逻辑是：\n1. 在 ‘搜索标签名’ 中输入 tag_name, 然后回车\n2. 点击 class为arco-tree-node-title-text，且文本包含 tag_name 的元素，并等待加载完成\n3. 点击 ‘运行记录’，然后校验表格第一行中包含 expected_status"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置页面高度为2000\nSetWindowHeight | 2000",
        "output": "设置页面高度为 2000"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "添加产品授权\n    [Arguments]  @{license}\n    ${exist}  IsAnyTextExisting | 授权许可\n    Run Keyword If  not ${exist}  Click | 添加产品授权\n    FOR  ${item}  IN  @{license}\n        SetField | product | ${item}[product]\n        SetField | value | ${item}[value]\n    END\n    Click | 确定\n    Sleep | 3\n    CheckHasText | 正常 | 授权许可",
        "output": "写一个名为：“添加产品授权”的关键字，接受参数 license，业务逻辑为如果页面不包含 授权许可，就点击 添加产品授权，license 中有一系列 product 和 value ，先将每一个 value值输入 product字段中，然后点击点击确定，sleep3 秒后校验页面包含 正常 授权许可"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找class=\"gl-okee-measure-value\"的元素并将值放入列表\n@{elems}  FindElem | [class=gl-okee-measure-value] | multiple=True\n\n# 判断列表元素个数大于0\n${elem_count}  Get Length  ${elems}\nShould Be True  ${elem_count} > 0\n\n# 校验列表中的每个值大于0\nFOR  ${elem}  IN  @{elems}\n    ${value}  Get Text  ${elem}\n    ${value}  Convert To Number  ${value}\n    Should Be True  ${value} > 0\nEND",
        "output": "找到元素 class=“gl-okee-measure-value” 的值放进列表，列表里的元素个数应该大于0，而且其中每个值应大于0"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${index}  Evaluate  ${group_no} - 1",
        "output": "变量 group_no - 1 赋值给 index"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetWindowSize | 4000 | 2000",
        "output": "将分辨率设置为 4000 * 2000"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 先获取页面截图中的文本\n${txt}  GetPageScreenshotText\n\n# 然后校验 ${txt} 中不包含 ${TASK_NAME}\nShould Not Contain  ${txt}  ${TASK_NAME}",
        "output": "通过ocr检查页面不包含 ${TASK_NAME}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 先获取页面截图中的文本\n${txt}  GetPageScreenshotText\n\n# 然后校验 ${txt} 中不包含 ${TASK_NAME}\nShould Not Contain  ${txt}  ${TASK_NAME}",
        "output": "校验页面截图中不包含${TASK_NAME}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "导入\n    [Arguments]  ${name}  ${file_path}=\n    IF  '${file_path}' != ''\n        UploadFile  ${file_path}\n    ELSE\n        UploadFile  files/${name}.csv\n    END",
        "output": "写一个关键字为：“导入”,接受name，file_path参数，file_path参数默认为空，\n1. 如果 file_path 非空，就上传 file_path 指定的文件，否则就上传 files/${name}.csv 文件"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 切换到原窗口\nToPrevWindow",
        "output": "切换到原窗口"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击更多icon\nClickIcon | more",
        "output": "点击更多icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 按enter键\nPress Key | None | ENTER",
        "output": "按enter键"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 按下 TAB 键\nPress Key | None | TAB",
        "output": "按tab键"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查页面包含文本name的个数是否大于等于2\n${count}=  Get Matching Xpath Count  //*[contains(text(), 'name')]\nShould Be True  ${count} >= 2",
        "output": "检查页面包含中至少两个文本name的"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 定义一个关键字用于计算页面中${xx}出现的次数\n${count}  Get Element Count  xpath=//*[text()=\"${xx}\"]\n\n# 检查页面中${xx}出现的次数至少为2\nShould Be True  ${count} >= 2",
        "output": "检查页面包含中至少有2个${xx}文本"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SSO登录\n    [Arguments]  ${url}  ${user}  ${password}\n    OpenUrl  ${url}\n    SetField  账号  ${user}\n    SetField  密码  ${password}\n    Click  登录",
        "output": "新建关键字：SSO登陆\n入参：{url} {user} {password}\n功能：进入{url},输入账号为{user},密码为{password}，点击登陆"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 滑动页面到底部\nPageDown | 5",
        "output": "滑动页面到底部"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickIcon | filter",
        "output": "点击漏斗符号"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 展示名 | ${EMPTY}",
        "output": "展示名修改为空"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击表格头\"展示名\"列的筛选框\nClickElem | th:contains(展示名) input[type='checkbox']",
        "output": "点击表头\"展示名\"列的筛选框"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查看表格的第7列\n@{col_values}  GetColValues | 7",
        "output": "查看表格的第7列的值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击表头“属性名称”列里的checkbox\nClickElem | th:contains(属性名称) input[type='checkbox']",
        "output": "点击表头“属性名称”列里的checkbox"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 选择自定义日期 2024-01-01 2024-01-31\nSetField | 自定义日期 | 2024-01-01 | 2024-01-31",
        "output": "选择自定义日期 2024-01-01 2024-01-31"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "添加自定义产品\n    [Arguments]  ${keyword}\n    ${exist}  IsAnyElemExisting | button:contains(添加自定义产品):not(:disabled)\n    IF  $exist\n        Click  添加自定义产品\n        FOR  ${key}  ${value}  IN  @{keyword}\n            SetField  ${key}  ${value}\n        END\n        Click  保存基本信息\n        CheckColHas  类型  自定义\n        CheckColHas  唯一键  CDP\n        CheckColHas  产品名称-中文  客户数据平台\n    END",
        "output": "写一个名为：“添加自定义产品”的关键字，接受参数keyword，业务逻辑为：如果 添加自定义产品 按钮没有置灰展示，就点击添加自定义产品，keyword中有一系列key和value ，将每一个value值输入key字段中，然后点击保存基本信息，检查名为类型的列名中包含 自定义、唯一键的列名中包含 CDP、产品名称-中文中包含 客户数据平台"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取当前时间\n${current_time}  Evaluate  datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")  modules=datetime",
        "output": "获取现在时间"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取今天日期\n${today}  Evaluate  datetime.date.today().strftime('%Y-%m-%d')  datetime",
        "output": "获取今天日期"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 上传文件event_params_xg.csv\nUploadFile | event_params_xg.csv",
        "output": "上传文件event_params_xg.csv"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入指标搜索并回车\nSetField | 指标搜索 | 直播体裁puUwTLX1 | enter=True",
        "output": "在‘指标搜索’输入‘直播体裁puUwTLX1’回车"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入'域内自动化一级分类_updata'到'分类名称'字段\nSetField | 分类名称 | 域内自动化一级分类_updata",
        "output": "在‘分类名称’输入‘域内自动化一级分类_updata’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Click | 管理分类",
        "output": "点击管理分类"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面元素中是否包含“确定”按钮\n${exist}  IsAnyTextExisting | 确定\n# 如果存在，则点击\nIF  ${exist}\n    Click  确定\nEND",
        "output": "如果页面元素中包含“确定”按钮，那么则点击，如果未查找到则跳过不报错误"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在请搜索添加责任人中输入tianyu_test并回车\nSetField | 请搜索添加责任人 | tianyu_test | enter=True",
        "output": "在请搜索添加责任人中输入tianyu_test并回车"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击表格第一行字典列中的上传\nClickElemOfCell | 1 | 字典 | :contains(上传)",
        "output": "点击表格第一行字典列中的上传"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击表格第一行 \"字典\" 列中的上传按钮\nClickElemOfCell | 1 | 字典 | button:contains(上传)",
        "output": "点击表格第一行，“字典”列中的上传按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击张三所在行中，\"字典\" 列中的 上传\nClickElemOfCell | 张三 | 字典 | :contains(上传)",
        "output": "点击 张三 所在行中，字典列中的 上传"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 app_channel 所在行中，“字典” 所在列中的文本：上传\nClickElemOfCell | app_channel | 字典 | :contains(上传)",
        "output": "# 点击 app_channel 所在行中，“字典” 所在列中的文本：上传"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面上 ${name} 文本出现至少2次\n${count}=  Get Matching Xpath Count  //*[contains(text(),'${name}')]\nShould Be True  ${count} >= 2",
        "output": "判断 ${name} 出现至少2次"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetWindowWidth | 3000",
        "output": "设置窗口宽度为 3000"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "#点击 app_channel 所在行中 下载\nClickTextOfRow | app_channel | 下载",
        "output": "点击 app_channel 所在行中 下载"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 test_zd 所在行中，“字典” 所在列中的删除按钮\nClickElemOfCell | test_zd | 字典 | button:contains(删除)",
        "output": "点击 test_zd 所在行中，“字典” 所在列中的删除按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击test_zd所在行中，\"字典\"所在列中的下载按钮\nClickElemOfCell | test_zd | 字典 | button:contains(下载)",
        "output": "点击 test_zd 所在行中，“字典” 所在列中的下载按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验表格的第一行包含${name}\nCheckRowHas | 1 | ${name}\n# 校验表格的第二行包含${name}\nCheckRowHas | 2 | ${name}",
        "output": "判断表格的第一行 包含 ${name}\n判断表格的第二行 包含 ${name}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 先获取div class包含bodyclass元素的文本\n${elem_text}  GetElemText  | div[class*=\"bodyclass\"]\n\n# 使用RF内建关键字校验文字aaa在获取到的元素文本中出现过至少2次\n${count}  Evaluate  ${elem_text}.count('aaa')\nShould Be True  ${count} >= 2",
        "output": "判断文字aaa 再div class包含 bodyclass 出现过至少2次"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击表格${AUTO_UI_DB}行的设置按钮\nClickTextOfRow | ${AUTO_UI_DB} | 设置",
        "output": "点击表格${AUTO_UI_DB}行的设置按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待页面加载完成\nWaitLoading\n\n# 点击表格(auto_ui_las_db)中操作列的删除\nClickTextOfCell | auto_ui_las_db | 操作 | 删除",
        "output": "等待页面加载完，然后点击表格单元格（auto_ui_las_db，操作）中的删除"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待页面加载完成\nWaitLoading\n\n# 点击表格(auto_ui_las_db)中操作列的删除\nClickTextOfCell | ${row} | 操作 | 删除",
        "output": "等待页面加载完，然后点击单元格（${row}，操作）中的删除"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击“创建虚拟属性”按钮\nClick | 创建虚拟属性\n\n# 选择属性类型“事件属性”\nSetField | 属性类型 | 事件属性\n\n# 输入属性名称test\nSetField | 属性名称 | test\n\n# 选择数据类型int\nSetField | 数据类型 | int\n\n# 输入sql表达式为user_profiles.user_param_a\nSetField | sql表达式 | user_profiles.user_param_a\n\n# 关联方式选择“全部都有值才关联”\nSetField | 关联方式 | 全部都有值才关联\n\n# 点击“确定”按钮\nClick | 确定",
        "output": "点击“创建虚拟属性”按钮,属性类型选择事件属性，输入属性名称test，选择数据类型int，sql表达式为user_profiles.user_param_a，关联方式选择“全部都有值才关联，点击“确定”按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击右上角的关闭按钮\nClickIconToTheDirectionOf | SCREEN_CENTER | topRight | close",
        "output": "点击右上角的关闭按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验页面弹出‘提交审核成功’\nCheckHas | 提交审核成功",
        "output": "校验页面弹出‘提交审核成功’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击单元格（app_channel， 字典）中的上传\nClickTextOfCell | app_channel | 字典 | 上传",
        "output": "点击单元格（app_channel， 字典）中的上传"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击单元格（app_channel， 字典）中的上传\nClickTextOfCell | app_channel | 字典 | 上传",
        "output": "点击单元格（行：app_channel， 列：字典）中的上传"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Skip  \"跳过后续步骤\"",
        "output": "跳过不执行这条用例"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 清空\"请输入项目描述\"字段\nSetField | 请输入项目描述 | ${KEY_BACKSPACE}\n\n# 在\"请输入项目描述\"字段输入\"tianyu\"\nSetField | 请输入项目描述 | tianyu",
        "output": "清除请输入项目描述中的内容后再次输入tianyu"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 调用关键字 ‘判断数据集文件夹是否存在’\n${exist}  判断数据集文件夹是否存在\n\n# 判断结果，如果为false，执行关键字 ‘创建数据集文件夹’\nIF  \"${exist}\" == \"False\"\n    创建数据集文件夹\nEND",
        "output": "调用关键字 判断数据集文件夹是否存在 如果返回false，执行关键字 创建数据集文件夹"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成随机字符串\n${random_str}  GenerateRandom | 15 | [LETTERS][NUMBERS]\n\n# 在属性名中输入生成的随机字符串\nSetField | 属性名 | ${random_str}",
        "output": "随机生成一个字符串，属性名中输入该字符串"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击${result}该行的删除按钮\nClickTextOfRow | ${result} | 删除",
        "output": "点击${result}该行的删除按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 “审批流设置”\nClick | 审批流设置\n\n# 等待页面加载完成\nWaitLoading\n\n# 点击页面第一个元素为 “class=arco-icon-plus-circle”\nClickElem | [class=arco-icon-plus-circle]:eq(0)",
        "output": "点击“审批流设置”，等待页面加载完成，然后点击页面第一个元素为“class=arco-icon-plus-circle”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找文本为 '数据类型' 的表格头\n${elem}  FindElem | th:contains(数据类型)\n\n# 将此元素向右滚动\nScrollElementLeftRight | ${elem} | 100%",
        "output": "查找文本为 ‘数据类型’ 的表格头，将此元素向右滚动"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取第一行\"字典\"列的值\n${value}  GetCellValue | 1 | 字典\n\n# 校验值应该是 \"string\"\nShould Be Equal As Strings  ${value}  string",
        "output": "判断表格第一行，“字典”的值是不是 “string”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入数据类型\"Float\"\nSetField | 数据类型 | Float",
        "output": "在‘数据类型’输入‘Float’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入审核ID/审核名称并回车\nSetField | 请输入审核ID/审核名称 | ${fuhezhibiao} | enter=True",
        "output": "在‘请输入审核ID/审核名称’输入${fuhezhibiao}回车"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickElem | input[type='checkbox']:eq(0)",
        "output": "点击第一个checkbox"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetWindowSize | 2000 | 1000",
        "output": "将分辨率设置为2000 1000"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击数据类型右边的请选择\nClickTextToTheDirectionOf | 数据类型 | right | 请选择",
        "output": "点击数据类型右边的请选择"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验表格行 'auto_triton_table01' 中包含：审批中 和 自动化测试使用\nCheckRowHas | auto_triton_table01 | 审批中 | 自动化测试使用",
        "output": "校验表格行 ‘auto_triton_table01’ 中包含：审批中 和 自动化测试使用"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入时间周期为最近1天\nSetField | 时间周期 | 最近1天",
        "output": "在‘时间周期’输入‘最近1天’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${resource_name}  Set Variable  auto_triton_table01\nOpenUrl | ${我的权限页面}\nClickMenu | 审批中心 | 审批工单 | 申请记录\nSetField | 搜索 | ${resource_name} | enter=True\nClickTextOfRow | ${resource_name} | 重新申请\nToNewWindow\nClick | 提交\nCheckRowHas | ${resource_name} | 审批中 | 自动化测试使用",
        "output": "创建变量 resource_name, 值为：auto_triton_table01\n访问 ${我的权限页面}\n依次点击：审批中心-审批工单-申请记录\n在 ‘搜索’ 中输入 resource_name，然后回车\n点击包含 resource_name 的表格行中的：重新申请\n切换到新窗口，然后点击：提交\n校验 resource_name 表格行中包含：审批中 和 自动化测试使用"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验表格第一行，'属性名称'列包含文本 ${name}\n${val}  GetCellValue | 1 | 属性名称 \nShould Contain  ${val}  ${name}",
        "output": "表格第一行，属性名称列应该包含 ${name}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断表格行 ${resource_name} 中是否包含 ‘审批中’\n${exist}  IsRowContainsText | ${resource_name} | 审批中\n\n# 如果包含 '审批中'，就结束用例，并打印日志，当前在审批中状态，无法重新申请\nIF  $exist\n  Log  当前在审批中状态，无法重新申请\n  Fail  当前在审批中状态，无法重新申请\nEND",
        "output": "如果表格行 ${resource_name} 中包含 ‘审批中’，就结束用例，并打印日志，当前在审批中状态，无法重新申请"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入原因\nSetField | 输入原因 | 就让你过一次吧\n\n# 点击确定\nClick | 确定",
        "output": "在输入原因中输入：就让你过一次吧，然后点击确定"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击审批记录\nClick | 审批记录\n\n# 校验表格行包含全部通过\nCheckRowHas | ${申请的数据表} | 全部通过",
        "output": "点击 ‘审批记录’，校验表格行 ${申请的数据表} 中包含：全部通过"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickIcon | menu",
        "output": "点击菜单icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入数据安全到搜索产品与服务字段\nSetField | 搜索产品与服务 | 数据安全",
        "output": "在搜索产品与服务中输入：数据安全"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 切换到新窗口\nToNewWindow\n\n# 点击申请权限\nClick | 申请权限",
        "output": "切换到新窗口，点击申请权限"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入EMR到选择数据库\nSetField | 选择数据库 | EMR",
        "output": "在选择数据库中输入：EMR"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "登录火山引擎\n    [Arguments]  ${user}  ${password}  ${sub_user}\n    OpenBrowser  https://console.volcengine.com/\n    Click  子用户登录\n    SetField  主账号  ${user}\n    SetField  子账号  ${sub_user}\n    SetField  密码  ${password}\n    Click  立即登录\n    WaitURLNotContains  login",
        "output": "写一个名为：“登录火山引擎” 的关键字，接受 user, password, sub_user 参数，逻辑是：\n1. 打开浏览器访问：https://console.volcengine.com/ \n2. 点击 ‘子用户登录’\n3. 然后在 主账号、子账号、密码中分别输入：user, sub_user, password\n4. 最后点击 ‘立即登录’，并等页面url不再包含 login"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 访问火山ECS云主机页面\nOpenUrl | https://console.volcengine.com/ecs/region:ecs+cn-beijing/instance",
        "output": "访问火山ECS云主机页面链接：https://console.volcengine.com/ecs/region:ecs+cn-beijing/instance"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击awfeaew行的编辑\nClickTextOfRow | awfeaew | 编辑",
        "output": "点击awfeaew该行的编辑"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置超时时间为60秒\n${timeout}=  Set Variable  60\nFOR  ${i}  IN RANGE  1  ${timeout}\n    # 获取表格行proxy_user_password_test的内容\n    @{vals}  GetRowValues  proxy_user_password_test\n    # 判断表格行中是否包含：运行中\n    ${exist}  Evaluate  '运行中' in ${vals}\n    IF  ${exist}\n        # 如果包含，跳出循环\n        Exit For Loop\n    ELSE\n        # 如果不包含，等3秒后再次检查\n        Sleep  3s\n    END\nEND\n# 如果超过60秒都不包含，那就失败用例\nShould Be True  ${exist}  msg=表格行proxy_user_password_test中未出现：运行中",
        "output": "写一个循环，先获取表格行proxy_user_password_test的内容，然后判断其中是否包含：运行中，如果不包含，就等3s后再次检查，最多等一分钟，如果都不包含，那就失败用例"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 访问火山ECS云主机页面\nOpenUrl | https://console.volcengine.com/ecs/region:ecs+cn-beijing/instance\n\n# 在筛选条件中输入：proxy_user_password_test，然后回车\nSetField | 筛选条件 | proxy_user_password_test | enter=True\n\n# 点击包含 proxy_user_password_test 的表格行中的：启动\nClickTextOfRow | proxy_user_password_test | 启动\n\n# 点击确定\nClick | 确定\n\n# 校验表格行proxy_user_password_test中包含：运行中\nCheckRowHas | proxy_user_password_test | 运行中",
        "output": "访问火山ECS云主机页面链接：https://console.volcengine.com/ecs/region:ecs+cn-beijing/instance\n在筛选条件中输入：proxy_user_password_test，然后回车\n点击包含 proxy_user_password_test 的表格行中的：启动\n点击确定，然后校验表格行proxy_user_password_test中包含：运行中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成八位长的随机小写字母字符串\n${random_str}  GenerateRandom  | 8 | [LOWER]",
        "output": "创建一个八位长的随机字母字符串，全小写"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查页面表格第一行是否有${key_name}\n${exist}  IsRowContainsText | 1 | ${key_name}\n\n# 如果存在${key_name}，打印\"找到了\"\nIF  $exist\n    Log  找到了\nEND",
        "output": "检查页面表格第一行是否有${key_name}, 如果有就打印：“找到了”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "立即创建标签\n    [Arguments]  ${标签类型}\n    ${index}=  Set Variable  ${None}\n    ${mapping}=  Create Dictionary  自定义标签=0  具体特征=1  SQL=2  D上传文件=3\n    ${index}=  Get From Dictionary  ${mapping}  ${标签类型}\n    ClickElem  |  div[class*=TagCreateButton__item--]:eq(${index})\n    Sleep  1s",
        "output": "写一个关键字：“立即创建标签”， 接受 标签类型, 主要逻辑：\n1. 将立即创建映射成index, 映射关系为：自定义标签:0, 具体特征:1, SQL:2, D上传文件:3\n2. 点击第index个 div class包含TagCreateButton__item--的元素elem1,等待1s"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置自定义标签基本信息\n    [Arguments]  ${show_name}  ${name}  ${period}  ${desc}\n    SetField  展示名  ${show_name}\n    SetField  标签名  ${name}\n    IF  \"${desc}\" != \"\"\n        SetField  标签描述  ${desc}\n    ELSE\n        SetField  标签描述  ${name}的标签描述\n    END\n    IF  \"${period}\" != \"\"\n        SetField  计算周期  ${period}\n    END",
        "output": "写一个名为：“设置自定义标签基本信息” 的关键字，接受 show_name、name、period、desc 四个参数，业务逻辑是：\n1. 设置 ‘展示名’ 为 show_name\n1. 设置 ‘标签名’ 为 name\n2. 如果 desc 不为空，就把 ‘标签描述’ 设置为 desc，否则就把 ‘标签描述’ 设置为 name + '的标签描述'\n3. 如果 period 不为空，就把 ‘计算周期’ 设置为 period"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${random_str}  GenerateRandom  | 7 | [LETTERS][NUMBERS]",
        "output": "生成随机的7位字符串"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 先点击用户头像\nClickElem | [class*=avatar]\n\n# 再点击退出登录\nClick | 退出登录",
        "output": "先点击用户[class*=avatar]，然后再点击退出登录"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "登录用户\n    # 鼠标移动到class包含wrapper的元素上\n    MoToElem | [class*=wrapper]\n    # 输入用户名 zhangli_mail\n    SetField | 用户名 | zhangli_mail\n    # 输入密码 123456\n    SetField | 密码 | 123456\n    # 点击登录\n    Click | 登录",
        "output": "写一个关键字登录用户，主要完成：鼠标移动到class包含wrapper的元素上，然后输入用户名zhangli_mail，输入密码123456，点击“登录”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "登录用户\n    # 点击用户名输入框并输入用户名\n    ClickElem  |  input[name=\"Identity\"]\n    SendText  |  zhangli_mail\n\n    # 点击密码输入框并输入密码\n    ClickElem  |  input[type=\"password\"]\n    SendText  |  123456\n\n    # 点击'登录'按钮\n    Click  |  登录\n\n    # 等待页面上出现'快捷导航'\n    WaitText  |  快捷导航",
        "output": "写一个关键字登录用户，\n主要完成：\n点击input包含name=\"Identity\"的元素上，输入用户名zhangli_mail，\n点击input包含type=\"password\"的元素上，然后输入密码123456，点击“登录”\n等待页面出现 ‘快捷导航’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在'英文名称'输入'weidudanbiao'\nSetField | 英文名称 | weidudanbiao",
        "output": "在‘英文名称’输入‘weidudanbiao’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在‘业务定义’输入‘维度单表业务定义’\nSetField | 业务定义 | 维度单表业务定义",
        "output": "在‘业务定义’输入‘维度单表业务定义’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验表格行中包含交还和申请人用户名\nCheckRowHas | ${申请的数据表} | 交还 | ${申请人用户名}",
        "output": "校验表格行 ${申请的数据表} 中包含：交还 和 ${申请人用户名}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找文本为zhengchengyu的元素elem\n${elem}  FindByText  |  zhengchengyu\n\n# 打印元素信息\nPrintElemRect  |  ${elem}",
        "output": "查找文本为：zhengchengyu 的元素 elem，然后打印元素信息"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查name所在的行的状态列的内容为禁用\nCheckCellHas | name | 状态 | 禁用",
        "output": "检查 name 所在的行的 状态列 的内容为禁用"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击查询出发方式右边的按钮\nClickElemToTheDirectionOf | 查询出发方式 | right | button",
        "output": "点击查询出发方式右边的按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击第三个赋值\nClick | 赋值 | idx=2",
        "output": "点击第三个赋值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "等待标签人数计算完毕\n    [Arguments]  ${name}\n    ${count}=  Set Variable  0  # 初始化计数器\n    FOR  ${i}  IN RANGE  15  # 最多重复15次\n       ${exist}=  IsAnyTextExisting  |  计算中  #检查页面是否包含\"计算中\"\n       Exit For Loop If  '${exist}'=='False'  #若没有\"计算中\"，则结束循环\n       Sleep  5s  # 等待5秒\n       RefreshPage  # 刷新页面\n       WaitLoading  # 等待页面加载完成\n       ${count}=  Evaluate  ${count}+1  # 计数器+1\n       Exit For Loop If  '${count}'=='15'  # 如果计数器达到15，结束循环\n    END",
        "output": "写一个名为“等待标签人数计算完毕”的关键字；接受参数：name,操作逻辑为：\n查看当前页面是否包含：“计算中”，若有，就等待5s后刷新页面，等待页面加载好，重复此过程，最多15次，若没有就结束"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击文本值包含autotest_且具有title属性的第一个元素\nClickElem | :contains(autotest_)[title]:eq(0)",
        "output": "点击文本值包含autotest_且具有title属性的第一个元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 '埋点入库校验' 右侧的开关按钮\nClickElemToTheDirectionOf | :contains(埋点入库校验) | right | [class*=switch]",
        "output": "点击 '埋点入库校验' 右侧的开关按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击finder_001后面的取消\nClickTextToTheDirectionOf | finder_001 | right | 取消",
        "output": "点击finder_001后面的取消"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查表格第一行应该包含 name\nCheckRowHas | 1 | name",
        "output": "检查表格第一行应该包含 name"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetWindowHeight | 3000",
        "output": "设置窗口高度为3000"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击表格中nxZDpTv行的删除\nClickTextOfRow | nxZDpTv | 删除",
        "output": "点击表格中nxZDpTv行的删除"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击文本‘页面访问 (predefine_pageview)’前面的checkbox\nClickElemToTheDirectionOf | 页面访问 (predefine_pageview) | left | [type=checkbox]",
        "output": "点击文本‘页面访问 (predefine_pageview)’前面的checkbox"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 验证表格中角色名称列不包含管理员\nCheckColNotHas | 角色名称 | 管理员",
        "output": "验证表格中角色名称列不包含管理员"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Should Be Equal As Integers  ${a}  30",
        "output": "判断a等于30"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 计算两个日期 start_date=2021-09-01， end_date=2021-09-10 之间相差多少天\n${days_difference}  Evaluate  (datetime.strptime($end_date, '%Y-%m-%d') - datetime.strptime($start_date, '%Y-%m-%d')).days  modules=datetime\nLog  ${days_difference}",
        "output": "计算两个日期 start_date=2021-09-01， end_date=2021-09-10 之间相差多少天"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取开始日期的值\n${start_date_value}  GetFieldVal  placeholder=开始日期\n\n# 获取结束日期的值\n${end_date_value}  GetFieldVal  placeholder=结束日期\n\n# 计算两个值之间的时间差天数\n${days_diff}  Evaluate  (datetime.datetime.strptime(${end_date_value}, '%Y-%m-%d') - datetime.datetime.strptime(${start_date_value}, '%Y-%m-%d')).days  datetime\n\n# 校验时间差天数为30\nShould Be Equal As Integers  ${days_diff}  30",
        "output": "计算两个时间差多少天\n获取input 的placeholder=开始日期的value. 获取input placeholder=结束日期的value  计算两个value之间的时间差天数 ；需要校验时间差天数为30 就执行通过"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "创建TEA指标组\n    # 点击 创建指标组 按钮\n    Click | 创建指标组\n    # 填写 TEA产品 Libra\n    SetField | TEA产品 | Libra\n    # 点击确定按钮\n    Click | 确定\n    # 等待新页面加载 并 转换的新窗口\n    WaitLoading | timeout=30\n    ToNewWindow\n    # 点击 保存指标组 按钮\n    Click | 保存指标组\n    # 将 ${tea_metric_name} 开头加上 Libra_autotest_ 并存回 ${tea_metric_name}\n    ${tea_metric_name}  GenerateRandomWithPrefix | Libra_autotest_ | 8 | [LOWER]\n    # 填写 名称 ${tea_metric_name}\n    SetField | 名称 | ${tea_metric_name}\n    # 填写 描述 ${tea_metric_name}\n    SetField | 描述 | ${tea_metric_name}\n    # 点击 确定 按钮创建TEA指标组\n    Click | 确定\n    [Return]  ${tea_metric_name}",
        "output": "按照以下步骤创建 关键字，关键字命名为 创建TEA指标组，返回参数${tea_metric_name} ：\n1.点击 创建指标组 按钮\n2.填写 TEA产品 Libra\n3.点击确定按钮\n4.等待新页面加载 并 转换的新窗口\n5.点击 保存指标组 按钮\n6.生成八位的全小写随机字符串，存在变量 ${tea_metric_name} 里\n7.将 ${tea_metric_name} 开头加上 Libra_autotest_ 并存回 ${tea_metric_name}\n8.填写 名称 ${tea_metric_name}\n9.填写 描述 ${tea_metric_name}\n10.点击 确定 按钮创建TEA指标组"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击\"数据来源\"后面的\"第一个\"请选择\nClickTextToTheDirectionOf | 数据来源 | right | 请选择",
        "output": "点击\"数据来源“后面的”第一个\"请选择\""
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击弹框里的确定\nClick | 确定 | base=POPUP",
        "output": "点击弹框里的确定"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置'操作系统'行的'脱敏方式'列的值为'不可过滤和分组'\nFillCell | 操作系统 | 脱敏方式 | 不可过滤和分组",
        "output": "‘操作系统’行的‘脱敏方式’列的值设置为‘不可过滤和分组’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击name后的删除icon\nClickIconToTheDirectionOf | name | right | delete",
        "output": "点击name后的删除icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验表格中 $_vp_nxZDpTv 行包含 用户属性 int 脱敏显示\nCheckRowHas | $_vp_nxZDpTv | 用户属性 | int | 脱敏显示",
        "output": "表格中 $_vp_nxZDpTv 行包含  用户属性  int  脱敏显示"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击包含\"xiongcui\"的表格行的第一个单元格\nClickElemOfCell | xiongcui | 1 | *",
        "output": "点击页面表格包含 xiongcui 的那一行的第一个单元格"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取页面表格第一行第一列内的文本\n${val}  GetCellValue | 1 | 1",
        "output": "获取页面表格第一行第一列内的文本"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取剪切板的内容\n${clipboard_content}  GetCopied\n\n# 将剪贴板内容设置为地址字段的值\nSetField | 地址 | ${clipboard_content}",
        "output": "将地址的值设置为粘贴板的内容"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击Http API右边的接入\nClickTextToTheDirectionOf | Http API | right | 接入",
        "output": "点击Http API右边的接入"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickElemToTheDirectionOf | ${elem} | right | button:contains(接入)",
        "output": "点击文本‘Http API’右侧的文本为‘接入’的按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置时段\n    [Arguments]  @{args}\n    FillArea | div[class*=PeriodRangeInput__container] | @{args}",
        "output": "写一个关键字：“设置时段”，接受参数 args, 主要逻辑是向class包含PeriodRangeInput__container中输入给定的一个或多个参数"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到距离 ${filtered_elems} 元素 x 轴方向的 -1 处\nMoToElem | ${filtered_elems} | dx=-1",
        "output": "鼠标移动到距离 ${filtered_elems}[0] 元素 x 轴方向的 -1 处"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向__current_id为高级日期的元素中输入日维度\nFillArea | [__current_id=高级日期] | 日维度",
        "output": "向 __current_id 为 高级日期 的元素中输入 日维度"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "获取APPID\n    [Arguments]  ${url}=${MAIN_PAGE}\n    ${appid}  Evaluate  re.findall(r'\\\\d+', '${url}')[0]  modules=re\n    [Return]  ${appid}",
        "output": "写一个名为 “获取APPID” 的关键字，接受参数 url, 默认值为变量 MAIN_PAGE, 逻辑是从 url 中取出路径中纯数字的部分，如从 https://console.volcengine.com/datafinder/project/2190650/event-analysis 中取出 2190650 这个作为返回值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${match}  Evaluate  re.search(r'/\\\\d+/', $current_url) is not None  re\nIF   $match\n    Log  exist\nELSE\n    Log  not exist\nEND",
        "output": "判断变量 ${current_url} 中是否包含 '/数字/' 这样的正则匹配字符串，如果有就打印 exist 否则打印 not exist"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "进入${menu}页面\n    [Arguments]\n    ${menu}  Evaluate  $menu.strip()\n    @{items}  Evaluate  re.split(r'\\\\s+|>', '${menu}')\n    ${item}  Set Variable  ${items}[-1]\n    ${value}  Get From Dictionary  ${URL_MAPPING}  ${item}\n    ${prefix}  获取URL前缀\n    ${url}  Evaluate  '${prefix}' + '${value}'\n    OpenUrl | ${url}\n    WaitLoading",
        "output": "写一个关键字：“进入${menu}页面”，主要逻辑是：\n1. 先删除变量menu前后的空白字符, 然后使用空格或>作为分隔符对menu进行分隔，取出分割后的最后一项 item\n2. 然后到字典 URL_MAPPING 中查找 item 所对应的值 value\n3. 接着调用关键字 ‘获取URL前缀’，将得到的 prefix 和 value 相加得到一个完整的 url\n4. 访问该URL, 并等待页面加载好"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${regex}  Set Variable  ^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\\\.[a-zA-Z0-9_-]+)+$\nShould Match Regexp  ${email}  ${regex}",
        "output": "生成校验邮件正则表达式"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "CheckRowCount | 10",
        "output": "验证表格中有10条数据"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成八位全小写字符串\n${random_string}  GenerateRandom  | 8 | [LOWER]\n\n# 将生成的字符串与 result_template 拼接\n${template_name}  Catenate  | SEPARATOR= |  result_template  ${random_string}",
        "output": "生成八位字符串，全小写，并与 result_template 拼接， 存入${template_name}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "测试初始化\n    Set Global Variable  ${主账号名}  ${USER}\n    Set Global Variable  ${申请人用户名}  ${SHENQIN_SUB_USER}\n    Set Global Variable  ${申请人密码}  ${SHENQIN_SUB_PASSWORD}",
        "output": "写一个名为：“测试初始化” 的关键字，作用是：\n1. 创建全局变量 ‘主账号名’, 值为变量 USER\n2. 创建全局变量 ‘申请人用户名’，'申请人密码', 值分别为变量 SHENQIN_SUB_USER, SHENQIN_SUB_PASSWORD"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面是否存在文本：‘以下权限无法申请’\n${exist}=  IsAnyTextExisting | 以下权限无法申请\n# 如果存在，点击 ${申请的数据表} 所在表格行中的 删除 icon\nIF  ${exist}\n    ClickIconOfRow | ${申请的数据表} | delete\nEND",
        "output": "如果页面存在文本：‘以下权限无法申请’，就点击 ${申请的数据表} 所在表格行中的 删除 icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 发送请求并获取响应JSON\n${resp_json}  UiSendRequest | GET | https://xxx.yyy.zzz.com/cn-beijing/security-api/api/v1/privileges/obtained?cluster=cn-beijing&limit=20&keyword=&auth_type=person,team,user_group&ds=las&offset=0&sort_field=expire_time&sort_order=asc\n\n# 从响应JSON中获取 data 字段\n${data}=  Set Variable  ${resp_json[\"data\"]}\n\n# 检验 data 的 size 大于 13\nShould Be True  ${data[\"size\"]} > 13\n\n# 获取 data 中的 auth_data 字段的第一个列表项中的 name 字段\n${name}=  Set Variable  ${data[\"auth_data\"][0][\"name\"]}\n\n# 检验 name 字段包含 \"xxx\"\nShould Contain  ${name}  xxx",
        "output": "发送一个接口请求，拿到响应中的 data 字段，然后检验其中的 size > 13, data中的 auth_data 字段的第一个列表项中的 name 字段包含 xxx, 请求信息如下：curl 'https://dataleap-api.console.volcengine.com/cn-beijing/security-api/api/v1/privileges/obtained?cluster=cn-beijing&limit=20&keyword=&auth_type=person,team,user_group&ds=las&offset=0&sort_field=expire_time&sort_order=asc' \\\n--compressed"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 定位到__current_id*=高级日期的元素\n${elem}  FindElem  |  *[__current_id*=高级日期]\n# 向找到的元素中输入2024-01-01 ～ 2024-01-31\nFillArea  |  ${elem}  |  2024-01-01 ～ 2024-01-31",
        "output": "向__current_id*=高级日期的元素中输入：2024-01-01 ～ 2024-01-31"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击单元格（abc, 操作）中的设置\nClickTextOfCell | abc | 操作 | 设置",
        "output": "点击单元格（abc, 操作）中的设置"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "登录林客\n    [Arguments]  ${phone}  ${code}\n    OpenBrowser | https://www.life-partner.cn/login\n    SetField | 请输入手机号码 | ${phone}\n    SetField | 验证码 | ${code}\n    Click | 发送验证码\n    CheckBoxOn | 我已阅读同意\n    Click | 登录\n    WaitURLContainsAll | home",
        "output": "写一个名为： “登录林客”的关键字，接受phone，code参数，逻辑是：\n1. 打开浏览器访问 https://www.life-partner.cn/login，\n2. 然后在 请输入手机号码 里输入 phone, 在验证码里输入code\n3. 然后点击 发送验证码\n4. 然后勾选我已阅读同意\n5. 最后点击登录按钮，并等页面url中含有home"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "关闭浏览器\n    # 先校验页面无错误信息\n    CheckErrMsg\n    # 然后关闭浏览器\n    CloseBrowser",
        "output": "写一个名为 “关闭浏览器” 的关键字，作用是先校验页面无错误信息，然后再关闭浏览器"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 发送POST请求\n${resp_json}  UiSendRequest | POST | https://e168-6-28finder.datarangers-onpremise.volces.com/datafinder/api/v1/projects/4/metrics | ${content}",
        "output": "发送post请求给 https://e168-6-28finder.datarangers-onpremise.volces.com/datafinder/api/v1/projects/4/metrics，携带参数为content"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 发送 post 请求到指定的URL, 请求体为给定的JSON数据\n${resp_json}  UiSendRequest | POST | https://xxx.yyy.zzz.com/datafinder/api/v1/projects/4/metrics | {\"name\":\"tmp1\",\"show_name\":\"\",\"description\":\"\",\"metric_type\":1,\"visible\":0,\"showNameArray\":[],\"descriptionArray\":[],\"dsl\":{\"queries\":[[{\"indicator_show_name\":\"总人数（UV）\",\"measure_info\":{},\"event_indicator\":\"event_users\",\"show_name\":\"任意事件\",\"show_label\":\"A\",\"event_name\":\"any_event\",\"event_type\":\"origin\",\"filters\":[{\"expression\":{\"logic\":\"and\",\"expressions\":[]}}],\"groups_v2\":[],\"extra\":{}}]]}}",
        "output": "发送如下请求：curl 'https://e168-6-28finder.datarangers-onpremise.volces.com/datafinder/api/v1/projects/4/metrics' \\\n--data-raw '{\"name\":\"tmp1\",\"show_name\":\"\",\"description\":\"\",\"metric_type\":1,\"visible\":0,\"showNameArray\":[],\"descriptionArray\":[],\"dsl\":{\"queries\":[[{\"indicator_show_name\":\"总人数（UV）\",\"measure_info\":{},\"event_indicator\":\"event_users\",\"show_name\":\"任意事件\",\"show_label\":\"A\",\"event_name\":\"any_event\",\"event_type\":\"origin\",\"filters\":[{\"expression\":{\"logic\":\"and\",\"expressions\":[]}}],\"groups_v2\":[],\"extra\":{}}]]}}' \\\n--compressed"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击第一个带有 ‘auto_triton_db’所在行中设置审批流程button\nClickElemOfRow | auto_triton_db | button:contains('设置审批流程')",
        "output": "点击第一个带有 ‘auto_triton_db’所在行中设置审批流程button"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取当前页面URL\n${url}  GetCurrentUrl\n\n# 使用python的urlparse库解析url，并获取网络位置部分（域名）\n${domain}  Evaluate  urllib.parse.urlparse($url).netloc  modules=urllib",
        "output": "接受domain参数，作用为获取当前页面 URL，然后截取URL中 的网络位置部分并存储到domain中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在编辑器中输入：就是等放假了\nFillEditor | 就是等放假了",
        "output": "在编辑器中输入：就是等放假了"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在编辑器中输入：记得少放辣椒啊收快递放假啊\nFillEditor | 记得少放辣椒啊收快递放假啊",
        "output": "在编辑器中输入：记得少放辣椒啊收快递放假啊"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 上传第三个文件 https://yyyy\nUploadFile | https://yyyy | idx=2",
        "output": "上传第三个文件 https://yyyy"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入账号并点击查询\nSetField | 请输入账号 | wangkaipeng_2023\nClick | 查询",
        "output": "输入 请输入账号：wangkaipeng_2023，并点击 查询"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查单元格（emr-8104106a502ad0c58203-auto_triton_db1/auto_triton_table01，工单状态）为：已撤销\nCheckCellHas | emr-8104106a502ad0c58203-auto_triton_db1/auto_triton_table01 | 工单状态 | 已撤销",
        "output": "检查单元格（emr-8104106a502ad0c58203-auto_triton_db1/auto_triton_table01，工单状态）为：已撤销"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 定位到placeholder=结束日期的input元素\n${elem}  FindElem  | input[placeholder=\"结束日期\"]\n\n# 获取元素的value属性值\n${val}  GetElemAttr | ${elem} | value",
        "output": "获取input placeholder=结束日期的value"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待页面加载完成\nWaitLoading\n\n# 判断页面是否存在 class为tree-node-name 且文本包含 ${task_name} 的元素\n${exist}  IsElemExisting | [class*=tree-node-name]:contains(${task_name})\n\n# 如果存在，运行关键字 '删除未上线任务_V2'，参数为 ${task_name}\nIF  ${exist}\n    删除未上线任务_V2  ${task_name}\nEND",
        "output": "等待页面加载完成后，判断如果页面存在 class为tree-node-name 且文本包含 ${task_name} 的元素，就运行关键字 ‘删除未上线任务_V2’，参数为 ${task_name}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待页面加载完成\nWaitLoading\n\n# 判断页面是否存在 class为tree-node-name 且文本包含 ${task_name} 的元素\n${exist}  IsAnyElemExisting | [class=tree-node-name]:contains(${task_name})\n\n# 如果存在，就把鼠标移动到满足此条件的最后一个元素上\nIF  ${exist}\n    MoToElem | [class=tree-node-name]:contains(${task_name}):eq(-1)\nEND",
        "output": "等待页面加载完成后，判断如果页面存在 class为tree-node-name 且文本包含 ${task_name} 的元素，就把鼠标移动到满足此条件的最后一个元素上"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将A元素移动到视野内\nMoveIntoView | ${A}",
        "output": "将A元素移动页面中间"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${one_day_ago}    Evaluate    (datetime.datetime.now() - datetime.timedelta(days=1)).strftime(\"%Y-%m-%d\")    datetime",
        "output": "获取1天前的年-月-日"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${date_time}    Evaluate    (datetime.datetime.now() - dateutil.relativedelta.relativedelta(months=2)).strftime(\"%Y-%m-%d %H:%M\")    modules=datetime,dateutil\nLog    ${date_time}",
        "output": "获取2月前的年-月-日 时:分"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成八位随机字符串\n${random_str}  GenerateRandom  | 8 | [LETTERS][NUMBERS]\n\n# 与libra_autotest_拼接\n${monitor_name}  Catenate  SEPARATOR=  libra_autotest_  ${random_str}",
        "output": "生成八位随机字符串，与libra_autotest_拼接，传入${monitor_name}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 ${elem} 右侧 class包含icon-branch 的元素\nClickElemToTheDirectionOf | ${elem} | right | [class*=icon-branch]",
        "output": "点击 ${elem} 右侧 class包含icon-branch 的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 读取文件内容\n${file_content}   Get File | Resources/Dorado/emr-hsql语句\n\n# 填写到编辑器中\nFillEditor | ${file_content}",
        "output": "读取文件 Resources/Dorado/emr-hsql语句 的内容，然后将其填写到编辑器中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${id_in_main_page}  Evaluate  \"${ID}\" in \"${MAIN_PAGE}\"\n# 如果ID不在MAIN_PAGE中，使用正则表达式找出 '/数字/' 部分，并去掉前后的 '/'\nIF  not ${id_in_main_page}\n    ${matched}  Evaluate  re.search(r'/(\\\\d+)/', '${MAIN_PAGE}')\n    # 如果找到匹配，将匹配值赋给全局变量ID\n    IF  ${matched} is not None\n        Set Global Variable  {ID}  ${matched.group(1)}\n    END\nEND",
        "output": "判断变量 ID 是否在变量 MAIN_PAGE 中，如果不在其中，就使用正则匹配，找出变量 MAIN_PAGE 中的 ‘/数字/’ 部分，然后去掉其前后的 ‘/’，最后把它赋值给全局变量 ID"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查变量ID是否存在\n${exist}  IsVarExisting | ID\nIF  not ${exist}\n    # 创建全局变量ID并设置值为xxx\n    Set Global Variable | ${ID} | xxx\nEND",
        "output": "如果变量 ID 不存在，就创建全局变量 ID,并设置其值为 xxx"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将页面向上滑动\nPageUp | 1",
        "output": "将页面向上滑动"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 先生成一些随机文本\n${random_text}  GenerateRandom  | 20 | [LETTERS][NUMBERS]\n\n# 然后在编辑器中输入随机文本\nFillEditor | ${random_text}",
        "output": "在编辑器中输入一些文本"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检测页面中__current_id为指标卡_1的元素里面是否含有class为core-trend-measure-card的元素\n${elem}  FindElem | [__current_id=指标卡_1]\n${exist}  IsAnyElemExisting | ${elem} [class=core-trend-measure-card]\nIF  $exist\n    Log  存在\nELSE\n    Log  不存在\nEND",
        "output": "检测页面中__current_id为指标卡_1的元素里面是否含有class为core-trend-measure-card的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 创建选择器\n${selector}  Set Variable  |  div[__current_id='日历'] div[class='abc-go']\n\n# 检测页面中__current_id='日历' 的div 里面是否含有class='abc-go'的div\n${exist}  IsElemExisting | ${selector}",
        "output": "检测页面中__current_id='日历' 的div 里面是否含有class='abc-go'的div"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 截取id=789的元素图片\nElemScreenshot| [id=789]\n\n# 获取id=789元素截图中的文本\n${txt}  GetElemScreenshotText | [id=789]\n\n# 校验图片中包含：张三\nShould Contain  ${txt}  张三",
        "output": "截取id=789的元素图片，校验图片中包含：张三"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取__current_id='Grid 布局_2' 的div元素\n${elem}  FindElem | div[__current_id='Grid 布局_2']\n\n# 截取该元素的图片\nElemScreenshot| ${elem}",
        "output": "获取__current_id='Grid 布局_2' 的div元素并截图"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取最近2天的时间\n${today} =  Evaluate  datetime.date.today()  datetime\n${yesterday} =  Evaluate  datetime.date.today() - datetime.timedelta(days=1)  datetime\n${formatted_range} =  Set Variable  ${yesterday.strftime('%Y-%m-%d')} ~ ${today.strftime('%Y-%m-%d')}\n\n# 把时间格式输入到演出时间中\nSetField | 演出时间 | ${formatted_range}",
        "output": "获取最近2天的时间，按照 2024-11-12 ~ 2024-11-13 的格式返回，然后把他们输入到演出时间中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 定义td元素的jquery选择器\n${td_selector}=  Set Variable  td[class='art-table-cell lock-left.cell']\n\n# 查找td元素中的第一个div元素\n${elem}=  FindElem  ${td_selector} > div:eq(0)\n\n# 获取元素elem中的文本\n${text}=  Get Text  ${elem}",
        "output": "查询页面所有类型为 td 元素, class 的值为 \"art-table-cell lock-left cell\" 中第一个 div 元素所包含的字符串"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击核心指标那一行的switch开关\nClickElemOfRow | 核心指标 | [class*=switch]",
        "output": "点击核心指标那一行的switch开关"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 返回前一个页面\nPageBack",
        "output": "返回前一个页面"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断是否存在placeholder为“抖音短视频”的input元素\n${exist1}  IsAnyElemExisting | input[placeholder='抖音短视频']\n# 判断是否存在placeholder为“TikTok”的input元素\n${exist2}  IsAnyElemExisting | input[placeholder='TikTok']\n\n# 如果存在任一元素，选择Libra\nIF  $exist1 or $exist2\n    Click| Libra\nEND",
        "output": "如果存在input的placeholder是“抖音短视频”或者“TikTok”，就选择Libra"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面是否存在 placeholder*=‘请选择’ 或 ‘选择属性’ 的元素\n${exist}  IsAnyElemExisting | [placeholder*='请选择'],[placeholder='选择属性']",
        "output": "判断页面是否存在 placeholder*=‘请选择’ 或 ‘选择属性’ 的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验表格第一行的超管审计列中包含：审批工地信息不完成\nCheckCellHas | 1 | 超管审计 | 审批工地信息不完成",
        "output": "校验表格第一行的超管审计列中包含：审批工地信息不完成"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验单元格（1，超管审计）中包含：审批工地信息不完成\nCheckCellHas | 1 | 超管审计 | 审批工地信息不完成",
        "output": "校验单元格（1，超管审计）中包含：审批工地信息不完成"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${resp_data}  GetValuesFromJson  ${resp_json}  data\n${exist}  Evaluate  $name in $resp_data\nIF   $exist\n    Log  存在\nELSE\n    Log  不存在\nEND",
        "output": "判断${name} 是否在 ${resp_json[\"data\"]}里"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "IF  '${report_id}' == ''\n    Fail  'report_id 为空'\nEND",
        "output": "如果  ${report_id} 为空，就跑出异常"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 发送POST请求到'https://xxx.yyy.zzz.com/datafinder/api/v1/projects/2190650/reports/list'，请求体为指定的JSON数据\n${resp_json}  UiSendRequest | POST | https://xxx.yyy.zzz.com/datafinder/api/v1/projects/2190650/reports/list | {\"pagination\":{\"limit\":10,\"page\":1},\"sorting\":{\"field\":\"created_at\",\"direction\":\"descend\"},\"with\":[\"dashboards\",\"user_info\"],\"filter\":{}} | ${None}",
        "output": "发送请求：curl 'https://console.volcengine.com/datafinder/api/v1/projects/2190650/reports/list' \\\n--data-raw '{\"pagination\":{\"limit\":10,\"page\":1},\"sorting\":{\"field\":\"created_at\",\"direction\":\"descend\"},\"with\":[\"dashboards\",\"user_info\"],\"filter\":{}}'"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 读取文件内容\n${file_content}=  Get File  Resources/Dorado/emr-hsql语句\n\n# 将文件内容填写到编辑器中\nFillEditor  ${file_content}",
        "output": "读取文件·Resources/Dorado/emr-hsql语句·的内容,然后将其填写到编辑器中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击左侧的创建任务\nClickTextToTheDirectionOf | SCREEN_CENTER | left | 创建任务",
        "output": "点击左侧的创建任务"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 YARN队列为 root.default\nSetField | YARN队列 | root.default",
        "output": "选择 YARN队列：root.default"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 保存icon\nClickIcon | save",
        "output": "点击 保存icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待页面加载完成\nWaitLoading\n\n# 找到 class含有lp-study-center-page的元素\n${elem}  FindElem | [class*=lp-study-center-page]\n\n# 截图此元素 对比像素差为0.98\nImageDiff | ${elem} | sim=0.98",
        "output": "等待页面加载完成\n找到 class含有lp-study-center-page的元素\n截图此元素 对比像素差为0.98"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Execute Javascript  window.scrollTo(0,document.body.scrollHeight)",
        "output": "浏览器滚动到最底部"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将A元素拖拽到B元素右侧 5px\nDAndD | ${A} | ${B} | dx=5",
        "output": "将A元素拖动到B元素右侧 5px"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击第二个span class包含AnalysisTimezoneSelectCore的元素\nClickElem | span[class*=AnalysisTimezoneSelectCore]:eq(1)",
        "output": "点击span class包含AnalysisTimezoneSelectCore的第二个元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取变量 ${elem} 中第一个 div\n${div}  FindElem | ${elem}  div:eq(0)",
        "output": "获取变量 ${elem} 中第一个 div "
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取变量 ${elem} 所有 div\n${div_elems}  FindElem  ${elem} div",
        "output": "获取变量 ${elem} 所有 div"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 找到 id 是 @life-partner/platform-reach/StudyCenter 的元素\n${elem}  FindElem  | [id='@life-partner/platform-reach/StudyCenter']\n\n# 找到 class 含有 lp-study-center-page 的元素\n${elem}  FindElem  | [class*=lp-study-center-page]",
        "output": "找到 id 是 @life-partner/platform-reach/StudyCenter 的元素\n找到 class 含有 lp-study-center-page 的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${elem}  FindElem | [class*=okee-lp-form]",
        "output": "找到含有class okee-lp-form 的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击订单管理\nClick | 订单管理\n\n# 等待页面加载完成\nWaitLoading\n\n# 输入订单号 7322576859361839148\nSetField | 订单号 | 7322576859361839148\n\n# 点击查询\nClick | 查询\n\n# 点击列表里的查看详情按钮\nClick | 查看详情\n\n# 等待页面加载完成\nWaitLoading\n\n# 点击佣金设置\nClick | 佣金设置\n\n# 点击table里的第一条数据中的设置佣金按钮\n# 点击表格第一行数据中的设置佣金按钮\nClickElemOfRow | 1 | button:contains(设置佣金)\n\n# 查找到class含有 okee-lp-modal-show 的元素\n${elem}  FindElem | [class*=okee-lp-modal-show]",
        "output": "点击订单管理\n等待页面加载完成\n输入订单号 7322576859361839148\n点击查询\n点击 列表里的 查看详情按钮\n等待页面加载完成\n点击佣金设置\n点击table里的第一条数据中的设置佣金按钮\n查找到class含有 okee-lp-modal-show 的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetWindowWidth | 5000",
        "output": "设置浏览器宽度 5000"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 拼接\"New Annotation Task\"和当前日期\n${TASK_NAME}  Catenate  SEPARATOR=  New Annotation Task  ${CURRENT_DATE}\n\n# 更新Suite级别变量${TASK_NAME}\nSet Suite Variable  ${TASK_NAME}",
        "output": "拼接New Annotation Task 和${CURRENT_DATE}，更新到Suite variable ${TASK_NAME} 中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 创建变量 name = 转化分析\n${name}  Set Variable  转化分析",
        "output": "变量 name =转化分析"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找id以test开头的元素\n${elem}  FindElem | [id^=test]\n\n# 将元素移动到窗口内\nMoveIntoView  ${elem}",
        "output": "将id以test开头的元素移动到屏幕窗口内"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickElem | [id=EMR]:contains(HSQL):eq(0)",
        "output": "点击id为EMR的元素中的第一个包含HSQL的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在任务ID/名称中输入emr_modify\nSetField | 任务ID/名称 | emr_modify",
        "output": "在任务ID/名称中输入：emr_modify"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查 emr_modify 所在表格中的状态列是：开启\nCheckCellHas | emr_modify | 状态 | 开启",
        "output": "检查 emr_modify 所在表格中的状态是：开启"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查单元格（emr_modify，状态）中的文本包含：开启\nCheckCellHas | emr_modify | 状态 | 开启",
        "output": "单元格（emr_modify，状态）中的文本应该包含：开启"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向 class包含ConditionItemsWrapper的元素中依次输入：任务名称、包含、emr_modify\nFillArea | 【class*=ConditionItemsWrapper] | 任务名称 | 包含 | emr_modify",
        "output": "向 class包含ConditionItemsWrapper的元素中，分别输入：任务名称、包含和emr_modify"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置复查人为dorado_test\nSetField | 复查人 | dorado_test",
        "output": "设置复查人：dorado_test"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置保存至为：任务开发 > dorado_test\nSetField | 保存至 | 任务开发 > dorado_test",
        "output": "设置保存至为：任务开发 > dorado_test"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 依次点击：项目控制台，复查配置\nClickTextOneByOne | 项目控制台 | 复查配置",
        "output": "点击项目控制台，点击复查配置"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击表格第一行中的checkbox元素\nClickElemOfRow | 1 | :checkbox",
        "output": "点击表格第一行中的checkbox"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickElemOfRow | 1 | input[type=checkbox]",
        "output": "勾选表格第一行"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 选中PR2408040100所在的表格行\nClickElemOfRow | PR2408040100 | input[type=checkbox]",
        "output": "勾选PR2408040100所在的表格行"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 勾选PR2408040100表格行中的复选框\nClickElemOfRow | PR2408040100 | :checkbox",
        "output": "勾选PR2408040100表格行中的复选框"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 PR2408040100-1 表格行中的本次下单数量为：5\nFillCell | PR2408040100-1 | 本次下单数量 | 5",
        "output": "设置 PR2408040100-1 表格行中的本次下单数量为：5"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置弹窗中 PR2408040100-1 表格行中的本次下单数量为：5\nFillCell | PR2408040100-1 | 本次下单数量 | 5 | base=POPUP",
        "output": "设置弹窗中 PR2408040100-1 表格行中的本次下单数量为：5"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击弹窗中表格第三行的取消\nClickTextOfRow | 3 | 取消 | base=POPUP",
        "output": "点击弹窗中表格第三行的取消"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 勾选弹窗中的 PR2408040100-1 表格行\nClickElemOfRow | PR2408040100-1 | :checkbox | base=POPUP\n\n# 设置此行中的本次下单数量为：5，其实就是填写这行中的 ‘本次下单数量’ 单元格\nFillCell | PR2408040100-1 | 本次下单数量 | 5 | base=POPUP",
        "output": "勾选弹窗中的 PR2408040100-1 表格行，然后设置此行中的本次下单数量为：5"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成5天前的时间，采用2020-03-04 这种格式输出\n${date} =  Evaluate  datetime.datetime.now() - datetime.timedelta(days=5)  modules=datetime\n${date} =  Convert Date  ${date}  result_format=%Y-%m-%d",
        "output": "生成5天前的时间：2020-03-04 这种格式的"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置商品明细表格第一行的税率为：1%\nFillCell | 1 | 税率 | 1% | tbl=商品明细",
        "output": "设置商品明细表格第一行的税率为：1%"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置全局变量‘StartTime’为上月1号的日期，格式为：2024/07/21 10:00\n${StartTime}  Evaluate  (datetime.datetime.now() - dateutil.relativedelta.relativedelta(months=1)).replace(day=1).strftime(\"%Y/%m/%d %H:%M\")",
        "output": "设置全局变量‘StartTime’为上月1号的日期，格式为：2024/07/21 10:00"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 如果今天日期(例如：2023-11-16)是大于本月的4号，就打印xx,否则打印yy\n${date}  Get Current Date  result_format=%Y-%m-%d\n@{date_list}  Split String  ${date}  -\n${day}  Set Variable  ${date_list}[2]\n# 将 ${day} 转化成 int\n${day}      Evaluate    int($day)\nIF   $day > 4\n    Log  xx\nELSE\n    Log  yy\nEND",
        "output": "如果今天日期(例如：2023-11-16)是大于本月的4号，就打印xx,否则打印yy"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置全局变量‘StartTime’为本月1号的日期，格式为：2024/07/21 10:00\n${month_start}  Evaluate  datetime.date.today().replace(day=1).strftime('%Y/%m/%d')  modules=datetime\n${StartTime}  Set Variable  ${month_start} 10:00",
        "output": "设置全局变量‘StartTime’为本月1号的日期，格式为：2024/07/21 10:00"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置全局变量‘PAGE_ACCOUNT’，值为变量ACCOUNT，SUB_ACCOUNT，StartTime 采用 下划线拼接\n${PAGE_ACCOUNT}  Catenate  SEPARATOR=_  ${ACCOUNT}  ${SUB_ACCOUNT}  ${StartTime}\nSet Global Variable  ${PAGE_ACCOUNT}",
        "output": "设置全局变量‘PAGE_ACCOUNT’，值为变量ACCOUNT，SUB_ACCOUNT，StartTime 采用 下划线拼接"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "填写字段并等待加载\n    [Arguments]  &{kwargs}\n    FOR  ${key}  ${value}  IN  &{kwargs}\n        SetField  |  ${key}  |  ${value}\n    END\n    WaitLoading",
        "output": "写一个名称 “填写字段并等待加载” 的关键字，接受 kwargs 参数，作用是对 kwargs 中的每一个 key, value 设置页面字段key的值为value，并等待页面加载完成"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "填写寻源结果\n    [Arguments]  ${src}\n    # 设置寻源结果为：src\n    SetField | 寻源结果 | ${src}\n    # 判断页面是否存在 ‘寻源结果已失效’\n    ${exist}  IsAnyTextExisting | 寻源结果已失效\n    IF  $exist\n        # 如果页面存在 ‘寻源结果已失效’ 就点击暂不处理\n        Click  暂不处理\n    END",
        "output": "# 写一个名为：“填写寻源结果” 的关键字，接受 src 参数，操作逻辑是：\n# 1. 设置寻源结果为：src\n# 2. 如果页面存在 ‘寻源结果已失效’ 就点击暂不处理"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 云资源 | 授权码 | xxxxx",
        "output": "设置云资源为：授权码、xxxxx"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置主办单位负责人下面的证件类型为：身份证\nSetField | 证件类型 | 身份证 | near=主办单位负责人",
        "output": "设置主办单位负责人下面的证件类型为：身份证"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击649853右边的编辑\nClickTextToTheDirectionOf | 649853 | right | 编辑",
        "output": "点击649853右边的编辑"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击项目控制台\nClick | 项目控制台\n\n# 切换至新窗口\nToNewWindow\n\n# 点击复查配置\nClick | 复查配置",
        "output": "点击项目控制台，并切换至新窗口，再点击复查配置"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 emr_离线任务复查所在表格行中的移除button\nClickElemOfRow | emr_离线任务复查 | button:contains('移除')",
        "output": "点击 emr_离线任务复查所在表格行中的移除button"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查页面不存在：校验emr_离线任务复查\nCheckNotHasText | emr_离线任务复查",
        "output": "检查页面不存在：校验emr_离线任务复查"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入姓名张三\nSetField | 姓名 | 张三\n\n# 输入年龄18\nSetField | 年龄 | 18\n\n# 将国籍设置为中国\nSetField | 国籍 | 中国\n\n# 确认页面包含王五或李四\nCheckHasAnyText | 王五 | 李四\n\n# 检查角色成员后面有 admin\nCheckHasText | 角色成员 | admin\n\n# 设置保存至为：\"任务开发 > dora\"\nSetField | 保存至 | 任务开发 > dora",
        "output": "输入姓名张三，年龄18，将国籍设置为中国，确认页面包含王五或李四, 检查角色成员后面有 admin，设置保存至为：\"任务开发 > dora\""
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 创建文件abc并写入内容xxx\nCreate File | abc | xxx",
        "output": "将 xxx 写入文件 abc"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击表管理\nClickMenu | 表管理\n\n# 点击快速建表\nClick | 快速建表\n\n# 切换到新窗口\nToNewWindow\n\n# 检查url为：${快速建表页面}，且页面包含文本：基础信息\n${url_check}   IsURLContains | ${快速建表页面}\n${text_check}   IsAllTextExisting | 基础信息\n\n# 如果检查url为：${快速建表页面}，且页面包含文本：基础信息，打开${数据开发页面}\nIF  ${url_check} and ${text_check}\n    OpenUrl | ${数据开发页面}\nEND",
        "output": "点击表管理，点击快速建表，切换到新窗口，如果检查url为：${快速建表页面}，且页面包含文本：基础信息，打开${数据开发页面}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 发送请求\n${resp_json}  UiSendRequest | POST | https://vengine-console.bytedance.net/datarangers/api/projects/2113476/events:batchOperate | {\"operation_type\": 7, \"events\": [{\"name\": \"event2OIfKc9pl9\"}]}",
        "output": "发送请求：curl 'https://vengine-console.bytedance.net/datarangers/api/projects/2113476/events:batchOperate' \\\n--data-raw '{\"operation_type\":7,\"events\":[{\"name\":\"event2OIfKc9pl9\"}]}'"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 发送请求到https://vengine-console.bytedance.net/datarangers/api/projects/2113476/user_dims:batchOperate\n${resp_json}  UiSendRequest | POST | https://vengine-console.bytedance.net/datarangers/api/projects/2113476/user_dims:batchOperate | {\"operation_type\":7,\"profiles\":[{\"name\":\"uitest_userattp_yaOFigVHwU\",\"value_type\":\"string\"}]}",
        "output": "发送请求：curl 'https://vengine-console.bytedance.net/datarangers/api/projects/2113476/user_dims:batchOperate' \\\n--data-raw '{\"operation_type\":7,\"profiles\":[{\"name\":\"uitest_userattp_yaOFigVHwU\",\"value_type\":\"string\"}]}'"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "跳转至快速创建页面\n    SetField | 搜索关键字 | ${task_name}\n    ${exist}  IsAnyTextExisting | ${task_name}\n    IF  ${exist}\n        Click | ${task_name}\n        # 依次点击：表管理，快速建表\n        ClickTextOneByOne | 表管理 | 快速建表\n        ToNewWindow\n        WaitLoading\n        ${exist2}  IsAnyTextExisting | 基础信息\n        IF  ${exist2}\n            OpenUrl | ${数据开发页面}\n            删除未上线任务_V2\n        ELSE\n            跳转至快速创建页面\n        END\n    END",
        "output": "设置关键字“跳转至快速创建页面”，作用如下：\n向搜索关键字中输入：${task_name}，如果存在${task_name}，点击${task_name}，点击表管理，点击快速建表，切换到新窗口，等待页面加载完成，如果页面包含文本：基础信息，打开${数据开发页面}，运行关键字删除未上线任务_V2，否则运行关键字 跳转至快速创建页面"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待success出现，最长等待120s\nWaitText | success | timeout=120",
        "output": "等待success出现，最长等待120s"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 手机号码正则表达式\n${phone_regex}   Set Variable  ^1[3-9]\\\\d{9}$",
        "output": "写一个手机号码正则表达式"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 双击防抖\nDClick | 防抖",
        "output": "双击：防抖"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到文本：防抖\nMoTo | 防抖\n\n# 然后双击\nDClick | 防抖",
        "output": "鼠标移动到文本：防抖，然后双击"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待文本出现\nWaitText | brbahhjejejjtder234v.dp.io | timeout=60",
        "output": "等待文本 brbahhjejejjtder234v.dp.io 出现，60s后超时"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Ui Send Text  ${EMPTY}  enter=True",
        "output": "按回车键"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到文本匹配自定义、自定义时间、自定义日期的span元素\n${elem}  FindByText | 自定义 | 自定义时间 | 自定义日期 | tag=span\nMoToElem | ${elem}",
        "output": "鼠标移动 span 文本匹配 ‘自定义’ 或 ‘自定义时间’ 或 ‘自定义日期’ 的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找 span 文本匹配 '自定义' 或 '自定义时间' 或 '自定义日期' 的元素\n${elem}  FindElem | span:contains('自定义'):contains('自定义时间'):contains('自定义日期')",
        "output": "查找 span 文本匹配 ‘自定义’ 或 ‘自定义时间’ 或 ‘自定义日期’ 的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 上传文件 https://datarangers-dev.tos-cn-beijing.volces.com/autotest_data/sxn200M.csv\nUploadFile | https://datarangers-dev.tos-cn-beijing.volces.com/autotest_data/sxn200M.csv",
        "output": "上传文件 https://datarangers-dev.tos-cn-beijing.volces.com/autotest_data/sxn200M.csv"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 计算两个日期之间相差的天数\n${days_difference}    Evaluate    (datetime.datetime.strptime($end_date, '%Y-%m-%d') - datetime.datetime.strptime($start_date, '%Y-%m-%d')).days    modules=datetime",
        "output": "计算 start_date 和 end_date 两个日期之间相差的天数"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "上传tos文件\n    [Arguments]  ${args}\n    UploadFile | https://datarangers-dev.tos-cn-beijing.volces.com/autotest_data/sxn200M.csv",
        "output": "写一个名为“上传tos文件”的关键字，接受args参数，逻辑是：上传文件https://datarangers-dev.tos-cn-beijing.volces.com/autotest_data/sxn200M.csv"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断元素A是否存在\n${exist}  IsAnyElemExisting | ${A}\n# 如果元素A不存在，就点击元素B\nIF  not ${exist}\n    ClickElem  | ${B}\nEND",
        "output": "判断元素A是否存在，如果不存在，就点击元素B"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将 求和(销售额) 拖拽到 求和(利润) 后面\n${srcElem}    Set Variable    求和(销售额)\n${targetElem}    Set Variable    求和(利润)\nDAndD | ${srcElem} | ${targetElem} | dx=20",
        "output": "将 求和(销售额) 拖拽到 求和(利润) 后面"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "清理用户标签\n    ${resp_json}  UiSendRequest | DELETE | https://console.volcengine.com/datatag/api/v1/app/573522/tag/tag_31231",
        "output": "发送一个请求：curl 'https://console.volcengine.com/datatag/api/v1/app/573522/tag/tag_31231' \\\n-X 'DELETE'"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "IF  ${status} == 'RUNNING'\n    # Kill process\nELSE IF  ${status} == 'FINISHED'\n    # ReRun process\nEND",
        "output": "如果 ${status}等于RUNNING 就走kill流程，如果FINISHED就ReRun"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 ‘数据源’ 为 'ByteHouse CDW'\nSetField | 数据源 | ByteHouse CDW\n\n# 设置 ‘请选择数据库’ 为 ${BH_CDW数据库}\nSetField | 请选择数据库 | ${BH_CDW数据库}\n\n# 设置 ‘请选择数据表’ 为 ${BH_CDW_TABLE1}\nSetField | 请选择数据表 | ${BH_CDW_TABLE1}",
        "output": "设置 ‘数据源’ 为 'ByteHouse CDW'；设置 ‘请选择数据库’ 为 ${BH_CDW数据库}；设置 ‘请选择数据表’ 为 ${BH_CDW_TABLE1}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Click | 修改佣金",
        "output": "点击修改佣金按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入订单号7337568556879448127\nSetField | 订单号 | 7337568556879448127",
        "output": "输入订单号 7337568556879448127"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 勾选 “已阅读”\nCheckBoxOn | 我已阅读",
        "output": "然后勾选我已阅读"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置自定义日期为2024-01-01  2024-01-31\nSetField | 自定义日期 | 2024-01-01 | 2024-01-31",
        "output": "选择自定义日期  2024-01-01  2024-01-31"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "选择自定义日期\n    [Arguments]  ${start_date}  ${end_date}\n    MoTo  |  自定义时间\n    操作日期控件  |  ${start_date}  |  ${end_date}",
        "output": "写一个名为：“选择自定义日期” 的关键字，接受 start_date, end_date 参数，逻辑是：\n1. 鼠标移动到 ‘自定义时间’ 上\n2. 然后以 start_date, end_date 为参数，调用关键字 ‘操作日期控件’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在 “我的快捷入口” 下面的 “Finder全量” 设置为：线上\nSetField | Finder全量 | 线上 | near=我的快捷入口",
        "output": "在 “我的快捷入口” 下面的 “Finder全量” 设置为：线上"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击火山引擎左侧的按钮\nClickElemToTheLeftOf | 火山引擎 | button",
        "output": "点击火山引擎左侧的按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击火山引擎左侧的元素\nClickElemToTheLeftOf | 火山引擎 | *",
        "output": "点击火山引擎左侧的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找class 为navi-title-logo-img-onpremise navi-title-logo-onpremise-gap的 img元素\n${elem}  FindElem | img[class='navi-title-logo-img-onpremise navi-title-logo-onpremise-gap']\n\n# 点击 ${elem} 左侧的元素\nClickElemToTheLeftOf | ${elem} | *",
        "output": "查找class 为navi-title-logo-img-onpremise navi-title-logo-onpremise-gap的 img左侧的元素，然后点击这个元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面是否存在\"任务配置恢复\"\n${exist}  IsAnyTextExisting | 任务配置恢复\nIF  ${exist}\n    # 如果存在，点击关闭icon\n    ClickIcon | close\n    # 执行关键字删除未上线任务_V2\n    ${ret}  删除未上线任务_V2  ${task_name}\nELSE\n    # 如果不存在，直接执行关键字删除未上线任务_V2\n    ${ret}  删除未上线任务_V2  ${task_name}\nEND",
        "output": "如果页面存在“任务配置恢复”，就点击关闭icon，并执行关键字删除未上线任务_V2，参数是${task_name}，否则直接执行关键字删除未上线任务_V2，参数是${task_name}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向‘资源名称/责任人’输入：emr_xsudaf_kkk\nSetField | 资源名称/责任人 | emr_xsudaf_kkk",
        "output": "向‘资源名称/责任人’输入：emr_xsudaf_kkk"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将字符串a和b拼接，SEPARATOR分隔符为空\n${args_str}  Catenate  SEPARATOR=  a  b",
        "output": "将字符串a和b拼接"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将字符串a、b和c拼接\n${result}  Catenate  SEPARATOR=  a  b  c",
        "output": "将字符串a和b和c拼接"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将字符串a和b和c用分隔符；拼接\n${args_str}  Catenate  SEPARATOR=;  a  b  c",
        "output": "将字符串a和b和c用分隔符；拼接"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "清理保存的SQL\n    ${resp_json}  UiSendRequest | DELETE | https://e168-6-35finder.datarangers-onpremise.volces.com/datafinder/api/v1/projects/15/1/editors/1 | {}",
        "output": "写一个关键字“清理保存的SQL”，逻辑为：\n1. 发送一个请求：curl 'https://e168-6-35finder.datarangers-onpremise.volces.com/datafinder/api/v1/projects/15/1/editors/1' \\\n-X 'DELETE' \\\n--data-raw '{}'"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取页面文本，校验其中包含 2 个 ‘Finder全量’\n${text}  GetPageText\n\n# 校验页面文本中包含2个'Finder全量'\n${count}  Evaluate  $text.count('Finder全量')  \nShould Be Equal As Strings  ${count}  2",
        "output": "校验页面包含 Finder全量，并且有2 个"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待页面加载完成\nWaitLoading\n\n# 判断页面是否存在class为tree-node-name且文本包含${res_name}的元素\n${exist}  IsAnyElemExisting | [class=tree-node-name]:contains(${res_name})\n\n# 如果存在，就把鼠标移动到满足class包含suffix的最后一个元素上\nIF  ${exist}\n    MoToElem | [class*=suffix]:eq(-1)\nEND",
        "output": "等待页面加载完成后，判断如果页面存在 class为tree-node-name 且文本包含${res_name} 的元素，就把鼠标移动到满足class包含suffix的最后一个元素上"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "选择菜单\n    [Arguments]  ${name}\n    # 等待页面加载完成\n    WaitLoading\n    # 点击文本 ${name}\n    Click  ${name}  timeout=30",
        "output": "写一个名为：“选择菜单” 的关键字，接受 name 参数，作用是：\n1. 等页面加载完成\n2. 点击文本 name， 超时为 30s"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 移动到class为tree-node-name 且文本包含 ${res_name} 的元素上\nMoToElem | [class=tree-node-name]:contains('${res_name}')\n\n# 点击器右侧的 class包含icon-gengduofuzhi-N 的元素\nClickElemToTheRightOf | [class=tree-node-name]:contains('${res_name}') | [class*=icon-gengduofuzhi-N]",
        "output": "移动到class为tree-node-name 且文本包含 ${res_name} 的元素上，然后点击器右侧的 class包含icon-gengduofuzhi-N 的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向 class包含kjgmvP 的元素中输入：${engine_type} 和 ${default}\nFillArea | [class*=kjgmvP] | ${engine_type} | ${default}",
        "output": "向 class包含kjgmvP 的元素中输入：${engine_type} 和 ${default}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取第一个档案名称字段的值\n${val}  GetFieldVal | 档案名称 | idx=0",
        "output": "获取第一个档案名称字段的值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断第一个tr标签下包含文本主体1，其实就是判断该元素存在\n${elem}  FindElem | tr:eq(0) :contains(主体1)",
        "output": "判断第一个tr标签下包含文本主体1"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找id为function-sider的元素\n${elem}  FindElem | #function-sider\n\n# 向找到的元素中输入${engine_type} 和 ${default}\nFillArea | ${elem} | ${engine_type} | ${default}",
        "output": "向 id=function-sider 的元素中输入：${engine_type} 和 ${default}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击第二个停止\nClick | 停止 | idx=1",
        "output": "点击页面上第二个停止"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 把鼠标移动到 ${elem} 左侧的元素上\nMoveToElemToTheDirectionOf | ${elem} | left | *",
        "output": "把鼠标移动到 ${elem} 左侧的元素上"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找文本为我的收藏的元素\n${elem}  FindByText | 我的收藏\n\n# 打印元素信息\nPrintElemRect | ${elem}",
        "output": "查找文本为我的收藏的元素，并打印其信息"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取当前URL\n${current_url}  GetCurrentUrl\n\n# 使用Python的正则表达式库re提取URL中的特定内容\n${content}  Evaluate  re.search(r'user-cohort/history(.*?)\\?lastTime', '${current_url}').group(1)  re",
        "output": "提取url中的user-cohort/history和?lastTime中间的内容"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "邮箱登录\n    [Arguments]  ${email}=${EMAIL}  ${password}=${PASSWORD}  ${url}=${LOGIN_URL}\n    OpenBrowser  ${url}\n    WaitLoading\n    SetField  邮箱  ${email}\n    SetField  密码  ${password}\n    CheckBoxOn  我已阅读\n    Click  登录\n    WaitText  首页",
        "output": "写一个名为：“邮箱登录” 的关键字，接受 email, password, url 参数, 默认值分别为全局变量 EMAIL, PASSWORD, LOGIN_URL，作用是：\n1. 打开浏览器，访问 url, 等页面加载完成后，输入邮箱，密码，然后勾选 ‘我已阅读’，最后点击登录\n2. 等待页面包含文本：首页"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 '我已阅读' 左边的 checkbox\nClickElemToTheDirectionOf | 我已阅读 | left | input[type=checkbox]",
        "output": "点击 ‘我已阅读’ 左边的 checkbox"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${exist}  IsAnyTextExisting | 您有未完成的账户开通\nIF  ${exist}\n    Click  取消\nEND",
        "output": "如果页面存在 ‘您有未完成的账户开通’，就点击取消"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "切换菜单\n    [Arguments]  @{args}\n    FOR  ${arg}  IN  @{args}\n        Click  ${arg}\n        WaitLoading\n    END",
        "output": "写一个名为：“切换菜单”的关键字，接受 args 参数，作用是依次点击 args 中给定的一个或多个文本，每次点击后需要等页面加载好"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置okr表格截止日期\n    [Arguments]  ${日期筛选}=on  ${默认值}=自定义  ${自定义日期}=2020-03-01\n    # 如果日期筛选不为空\n    IF  \"${日期筛选}\" != \"\"\n        # 如果日期筛选为on\n        IF  \"${日期筛选}\" == \"on\"\n            CheckBoxOn | 展示日期筛选\n        ELSE\n            CheckBoxOff | 展示日期筛选\n        END\n    END\n    # 如果默认值不为空\n    IF  \"${默认值}\" != \"\"\n        Click | ${默认值}\n    END\n    # 如果自定义日期不为空\n    IF  \"${自定义日期}\" != \"\"\n        SetField | 自定义日期 | ${自定义日期}\n    END",
        "output": "写一个名为:\"设置okr表格截止日期\"的关键字,接受 \"日期筛选\",\"默认值\",\"自定义日期\",默认值分别为on,自定义,2020-03-01,作用是:\n1.如果日期筛选不为空,则执行（如果日期筛选为on，设置展示日期筛选checkbox的状态为勾选；否则，设置展示日期筛选checkbox的状态为不勾选）的逻辑。\n2.如果默认值不为空，则点击默认值的radiobutton\n3.如果自定义日期不为空，设置自定义后的日期框值为自定义日期"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入线上经营 10%\nSetField | 线上经营 | 10%\n\n# 输入线下经营 5%\nSetField | 线下经营 | 5%",
        "output": "输入线上经营 10% 输入线下经营 5%"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在${elem} 元素里输入线上经营 10%\nSetField | 线上经营 | 10% | base=${elem}\n\n# 在${elem} 元素里输入线下经营 5%\nSetField | 线下经营 | 5% | base=${elem}",
        "output": "在${elem} 元素里输入线上经营 10% 输入线下经营 5%"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置第二个请选择为频率\nSetField | 请选择 | 频率 | idx=1",
        "output": "设置第二个请选择为频率"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 首先使用IsAnyTextExisting关键字检查页面中是否出现「重新加载组件」文字\n${exist}  IsAnyTextExisting | 重新加载组件\n\n# 如果页面存在「重新加载组件」，则让用例失败\nIF  $exist\n    Fail  页面出现「重新加载组件」，用例失败\nEND",
        "output": "如何检查到页面中有「重新加载组件」的文本，让用例失败"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 清空姓名字段\nSetField | 姓名 | ${KEY_BACKSPACE}",
        "output": "清空姓名字段"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 返回上一个窗口\nToPrevWindow",
        "output": "跳转回上一个窗口"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成 autotest 开头的长度为20的随机字符串\n${rand_str}  GenerateRandomWithPrefix | autotest | 20 | [LETTERS][NUMBERS]_",
        "output": "生成由字母数字下划线组成的，以autotest开头的，长度为20的随机字符串"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置接入源管理员为：maopengge\nSetField | 接入源管理员 | maopengge\n\n# 设置接入源备注为：我就测试看看\nSetField | 接入源备注 | 我就测试看看",
        "output": "设置接入源管理员为：maopengge，接入源备注为：我就测试看看"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置接入端类型为：APP、WEB\nSetField | 接入端类型 | APP | WEB",
        "output": "设置接入端类型为：APP、WEB"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置实时调用超时时长为100\nSetField | 实时调用超时时长 | 100\n\n# 设置近线调用超时时长为200\nSetField | 近线调用超时时长 | 200",
        "output": "设置实时调用超时时长，近线调用超时时长，分别为：100，200"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 如果同步频率是周级\nIF  \"${同步频率}\" == \"周级\"\n    # 每周设置为周一\n    SetField | 每周 | 周一\n# 如果同步频率是月级\nELSE IF  \"${同步频率}\" == \"月级\"\n    # 每月设置为1\n    SetField | 每月 | 1\nEND",
        "output": "如果${同步频率} 是 周级，每周 设置为周一，如果是月级，每月设置为1"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击账号登录右侧的手机号\nClickTextToTheDirectionOf | 账号登录 | right | 手机号",
        "output": "点击账号登录右侧的手机号"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 \"请输入\" 左侧的 \"+86\"\nClickTextToTheDirectionOf | 请输入 | left | +86",
        "output": "点击请输入左侧的 +86"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 ‘没有’ 右边的 ‘注册’\nClickTextToTheDirectionOf | 没有 | right | 注册",
        "output": "点击 ‘没有’ 右边的 ‘注册’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击忘记密码右边的立即登录\nClickTextToTheDirectionOf | 忘记密码 | right | 立即登录",
        "output": "点击忘记密码右边的 立即登录"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Click | 请选择项目 | timeout=20",
        "output": "点击 请选择项目 20s超时"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | ${date} | ${KEY_BACKSPACE}",
        "output": "清空\"${date}\"字段内容"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "手机登录\n    [Arguments]  ${phone_num}=${Phone_Num}  ${verification_code}=${Verification_Code}  ${url}=${Login_Url}\n    OpenBrowser  ${url}\n    WaitLoading\n    SetField  手机号  ${phone_num}\n    SetField  验证码  ${verification_code}\n    Click  发送验证码\n    CheckBoxOn  我已阅读\n    Click  登录\n    WaitText  首页",
        "output": "写一个名为：“手机登录”的关键字，接受 phone_num，verification_code, url 参数，默认值分别为变量 Phone_Num, Verification_Code, Login_Url，作用是：\n1. 打开浏览器，访问 url, 等页面加载完成后，输入手机号，验证码，然后点击发送验证码，然后勾选 ‘我已阅读’，最后点击登录\n2. 等待页面包含文本：首页"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到 las_ijk_yytt 上\nMoTo | las_ijk_yytt\n\n# 点击它右侧的元素\nClickElemToTheDirectionOf | las_ijk_yytt | right",
        "output": "鼠标移动到 las_ijk_yytt 上，然后点击它右侧的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "CheckErrMsg",
        "output": "检测页面无异常"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "CheckErrExclude | txt1 | txt2",
        "output": "检查页面中是否存在异常，但txt1和txt2不算异常"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断text=${layer}且role=menuitem的元素是否存在\n${exist}  IsAnyElemExisting | [role='menuitem']:contains(${layer})\n# 如果存在则点击该元素\nIF  ${exist}\n    ClickElem | [role='menuitem']:contains(${layer})\nEND",
        "output": "如果text=${layer}且role=menuitem的元素存在就点击"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在搜索框内输入：自动化验收用户组\nSetField | 搜索 | 自动化验收用户组 | enter=True\n\n# 如果存在自动化验收用户组，点击新建用户组\n${exist}  IsAnyTextExisting | 自动化验收用户组\nIF  ${exist}\n    Click  新建用户组\nEND",
        "output": "在搜索框内输入：自动化验收用户组，如果存在自动化验收用户组，点击新建用户组"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "ClickElem | [name='metrics']",
        "output": "点击 name 为 metrics 的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置单元格（phone_id, 状态）为不显示\nFillCell | phone_id | 状态 | 不显示",
        "output": "设置单元格（phone_id,状态）为不显示"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "FillCell | ${row} | 显示 | OFF",
        "output": "设置第${row}行的显示为：OFF"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置第二行第六列的值为 val\nFillCell | 2 | 6 | val",
        "output": "设置第二行第六列的值为 val"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击第二行第六列的单元格\nClickElemOfCell | 2 | 6 | *",
        "output": "点击第二行第六列"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向请输入内容输入：自动化测试需要\nSetField | 请输入内容 | 自动化测试需要\n\n# 勾选我已知晓\nCheckBoxOn | 我已知晓",
        "output": "向请输入内容 输入：自动化测试需要，然后勾选：我已知晓"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待300ms\nSleep  300ms\n\n# 判断页面是否存在含有class为okee-lp-modal-show的元素\n${exist}  IsAnyElemExisting | [class=okee-lp-modal-show]\n\n# 如果存在含有class为okee-lp-modal-show的元素，则点击 元素上的关闭按钮\nIF  $exist\n    ${elem}  FindElem | [class=\"okee-lp-modal-show\"]\n    ClickIcon | close | base=${elem}\nEND",
        "output": "等待300ms\n如果页面存在含有class为okee-lp-modal-show的元素\n有的话就点击 元素上的关闭按钮\n没有的话就不需要管"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面是否包含“审批工单信息不完整”\n${exist}  IsAnyTextExisting | 审批工单信息不完整\nIF  ${exist}\n    # 点击“审批工单信息不完整”右侧第一个的编辑icon\n    ClickIconToTheDirectionOf | 审批工单信息不完整 | right | edit | idx=0\nEND",
        "output": "如果检查页面包含审批工单信息不完整，点击改文本右侧第一个的编辑icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击第一个表格行的第一个编辑icon\nClickIconOfRow | 1 | edit | idx=0",
        "output": "点击第一条记录的第一个编辑icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "goto\n    [Arguments]  ${url}\n    Open Browser  ${url}",
        "output": "写一个名为：“goto” 的关键字，接受 url参数，作用是：跳转至此url"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取7天前和今天的日期，以 2022-01-11 格式输出\n    ${today}  Evaluate  datetime.date.today().strftime('%Y-%m-%d')  modules=datetime\n    ${seven_days_ago}  Evaluate  (datetime.date.today() - datetime.timedelta(days=7)).strftime('%Y-%m-%d')  modules=datetime\n    Log  ${today}\n    Log  ${seven_days_ago}",
        "output": "获取7天前和今天的日期，以 2022-01-11 格式输出"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 ui_test_xxxxxx 右边的刷新icon\nClickIconToTheDirectionOf | ui_test_xxxxxx | right | refresh",
        "output": "点击 ui_test_xxxxxx 右边的刷新小图标"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 定义选择器\n${selector}  Set Variable  [class*=preview-pic]\n\n# 使用 FOR 循环点击前5个 class包含preview-pic的元素\nFOR  ${index}  IN RANGE  5\n    ClickElem  |  ${selector}:eq(${index})\nEND",
        "output": "点击前5个 class包含preview-pic的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置可预约有效期为：${start_date} ~ ${end_date}\nSetField | 可预约有效期 | ${start_date} ~ ${end_date}",
        "output": "设置可预约有效期为：${start_date} ~ ${end_date}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 我创建的 | ON",
        "output": "打开“我创建的”开关"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取第二行第一列的文本\n${value}  GetCellValue | 2 | 1",
        "output": "获取第二行第一列的文本"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断${old_name}不等于${new_name}\nShould Not Be Equal  ${old_name}  ${new_name}",
        "output": "判断${old_name}不等于${new_name}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 我创建的 | OFF",
        "output": "关闭“我创建的”右侧的开关"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查页面包含操作成功或者暂无数据\nCheckHasAnyText | 操作成功 | 暂无数据",
        "output": "检查页面包含操作成功或者暂无数据"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "输入\n    [Arguments]  ${location}  ${content}\n    # 向location中输入content\n    SetField  |  ${location}  |  ${content}\n    # 回车\n    SendText  |  enter=True",
        "output": "写一个名为：“输入” 的关键字，接受 location content, 作用是：向location中输入content，然后回车"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "重新申请权限先设置允许\n    子账号登录  ${权限负责人用户名}  ${权限负责人密码}\n    OpenUrl | ${权限设置页面}\n    SetField | 数据源 | ${SJY}\n    FillArea | [class*=dprc-group-compact] | 数据表 | ${SQDSJB} | enter=True\n    ClickTextOfCell | ${SQDSJB} | 操作 | 设置\n    SetField | 只读 | 允许\n    Click | 保存\n    Click | 确定",
        "output": "写一个关键字名为：重新申请权限先设置允许，作用是：执行关键字子账号登录，参数是${权限负责人用户名}和${权限负责人密码}，打开${权限设置页面};设置 ‘数据源’，参数是${SJY};向 class包含dprc-group-compact 的元素中输入：数据表 和 ${SQDSJB}，然后回车; 点击单元格（${SQDSJB}，操作）中的设置;设置 只读 的规则为：允许;点击保存;点击确定"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "选择下拉\n    [Arguments]  ${location}  @{contents}\n    Click  ${location}\n    FOR  ${item}  IN  @{contents}\n        Click  ${item}\n    END",
        "output": "写一个名为：“选择下拉” 的关键字，接受 location, contents, 作用是：点击location，并依次点击 contents 中给定的一个或多个文本"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SetField | 我创建的 | 开",
        "output": "设置 ‘我创建的’ 为：开"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置接入源标识\nSetField | 接入源标识 | ${接入源标识}\n\n# 设置接入源名称\nSetField | 接入源名称 | ${接入源名称}\n\n# 设置接入源类型为实时检测\nSetField | 接入源类型 | 实时检测\n\n# 设置接入源等级为P2\nSetField | 接入源等级 | P2",
        "output": "设置接入源标识，接入源名称，接入源类型，接入源等级，分别为：${接入源标识}，${接入源名称}，实时检测，P2"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成一个 100 到 200 之间的数\n${random_number} =  Evaluate  random.randint(100, 200)  modules=random\nlog  ${random_number}",
        "output": "生成一个 100 到 200 之间的数"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成长度为5的随机中文\n${rand_ch}  GenerateRandom | 5 | 赵钱孙李周吴郑王冯陈褚卫蒋沈韩杨朱秦尤许何吕施张孔曹严华金魏陶姜戚一二三四五东西南北中",
        "output": "生成一串随机中文，长度为5"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成长度为3的中文名\n${rand_ch}  GenerateRandom | 5 | 赵钱孙李周吴郑王冯陈褚卫蒋沈韩杨朱秦尤许何吕施张孔曹严华金魏陶姜戚一二三四五东西南北中",
        "output": "生成长度为3的中文名"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成一个大于1000的随机整数，可以用 python 的random模块完成\n${num}  Evaluate  random.randint(1001, 9999)  modules=random",
        "output": "生成一个大于1000的随机整数"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取接入源标识这个字段的值\n${val}  GetFieldVal | 接入源标识",
        "output": "获取 接入源标识 这个字段的值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验 ${val} 字符串长度为 50\n${length}    Get Length    ${val}\nShould Be Equal As Integers    ${length}    50",
        "output": "校验 ${val} 字符串长度为 50"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "Sleep | 5s",
        "output": "等待5秒"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 截取id为root的元素，然后和基准图对比\nImageDiff | [id=root]",
        "output": "截取id为root的元素，然后和基准图对比"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 截取整个屏幕图片并对比，相似度取0.95\nImageDiff | sim=0.95",
        "output": "截取整个屏幕图片并对比, 相似度取 0.95"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 截图class包含table_container的元素图片并和基准图对比\nImageDiff | [class*=table_container]",
        "output": "截图class包含table_container的元素图片并和基准图对比"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 截取元素 ${elem} 的图片并保存基准图, 命名为: 图片1\nImageDiff | ${elem} | pic_name=图片1",
        "output": "截取元素 ${elem} 的图片并保存基准图, 命名为: 图片1"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SSO登录\n    [Arguments]  ${url}=${MAIN_PAGE}  ${session}=${FEISHU_SESSION}  ${company}=${COMPANY_CODE}\n    OpenBrowser\n    LoginFeiShu  ${session}\n    OpenUrl  ${url}\n    Click  SSO 登录\n    SetField  企业识别码  ${company}\n    Click  下一步\n    Click  授权\n    WaitURLNotContains  feishu",
        "output": "写一个名为：“SSO登录” 的关键字，接受 url，session, company, 默认值分别为变量 MAIN_PAGE, FEISHU_SESSION 和 COMPANY_CODE，操作逻辑为：\n1. 打开浏览器，使用 session 登录飞书，然后打开 url\n2. 先点击 ‘SSO 登录’，然后输入企业识别码, 接着点击下一步，最后点击授权，等页面url中不再包含feishu 即可"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击全部功能，然后点击网络资产，最后点击 AP\nClickTextOneByOne | 全部功能 | 网络资产 | AP",
        "output": "点击全部功能，然后点击网络资产，最后点击 AP"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "新增单个AP\n    [Arguments]  @{config}\n    Click  | 新增AP\n    Click  | 新增单个 AP\n    FOR  ${key}  ${value}  IN  @{config}\n        SetField  | ${key}  | ${value}\n    END\n    Click  | 新增",
        "output": "写一个名为：“新增单个AP” 的关键字，接受可变参数 config, 作用是：\n1. 点击新增AP, 然后点击 ‘新增单个 AP’\n2. 对于 config 中的每一个 key, value 对，将页面上名为 key 的字段的值设置为 value\n3. 最后点击 ‘新增’"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置设备型号\nSetField | 设备型号 | PM20-L20A",
        "output": "设置 设备型号=PM20-L20A"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待新增按钮消失\nWaitElemDisappear | button:contains(新增)",
        "output": "等待新增按钮消失"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 ${AP名称} 所在表格行中的删除icon\nClickIconOfRow | ${AP名称} | delete",
        "output": "点击 ${AP名称} 所在表格行中的删除icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待页面出现 '确认删除'\nWaitText | 确认删除\n\n# 点击删除\nClick | 删除",
        "output": "等待页面出现 ‘确认删除’ 后，点击删除"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 截屏并对比，相似度取 1\nImageDiff | sim=1",
        "output": "截屏并对比，相似度取 1"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 截图整个屏幕图片并对比，相似度取 0.96\nImageDiff | sim=0.96",
        "output": "截图整个屏幕图片并对比，相似度取 0.96"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "图片Diff\n    [Arguments]  ${location}  ${sim}\n    # 如果location值为全屏，执行全屏截图并和基准图进行对比\n    IF  \"${location}\" == \"全屏\"\n        ImageDiff  sim=${sim}\n    # 否则，对location指定的元素进行截图并和基准图进行对比\n    ELSE\n        ImageDiff  ${location}  sim=${sim}\n    END",
        "output": "写一个名为：“图片Diff” 的关键字，接受 location sim，作用是：当location等于全屏时，截取整个屏幕，设定相似度为sim。否则对location进行截图，设定相似度为sim"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面是否存在class包含close的svg元素\n${exist}  IsAnyElemExisting | svg[class*=close] | ignore_hidden=True\n# 如果存在，则点击close icon\nIF  ${exist}\n    ClickIcon | close\nEND",
        "output": "如果页面存在class包含close的svg元素 （隐藏元素不算），就点击close icon"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "SSO登录\n    [Arguments]  ${url}=${MAIN_PAGE}  ${session}=${FEISHU_SESSION}  ${company}=${COMPANY_CODE}\n    # 如果页面包括“全部功能”按钮，就结束\n    IF  IsElemExists | :contains(全部功能)\n        Log  页面已登录\n    ELSE\n        # 打开浏览器，使用 session 登录飞书，然后打开 url\n        OpenBrowser\n        LoginFeiShu | ${session}\n        OpenUrl | ${url}\n        # 先点击 ‘SSO 登录’，然后输入企业识别码为test, 接着点击下一步，最后点击授权\n        Click | SSO 登录\n        SetField | 企业识别码 | ${company}\n        Click | 下一步\n        Click | 授权\n        # 等页面url中不再包含feishu 即可\n        WaitURLNotContains | feishu\n    END",
        "output": "写一个名为：“SSO登录” 的关键字，接受 url，session, company, 默认值分别为变量 MAIN_PAGE, FEISHU_SESSION 和 COMPANY_CODE，操作逻辑为：\n0. 如果页面包括“全部功能”按钮，就结束，否则执行下面的步骤1和2\n1. 打开浏览器，使用 session 登录飞书，然后打开 url\n2. 先点击 ‘SSO 登录’，然后输入企业识别码, 接着点击下一步，最后点击授权，等页面url中不再包含feishu 即可"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断${cellText}是否为'计算完成'\nFOR  ${index}  IN RANGE  3\n    IF  \"${cellText}\" == \"计算完成\"\n        Log  计算已经完成\n    ELSE\n        # 如果${cellText}不是'计算完成'，则刷新页面并等待2秒\n        RefreshPage\n        Sleep  2s\n    END\nEND",
        "output": "判断${cellText}为计算完成，如果不是就刷新页面，每2秒循环一次，一共循环3次"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验页面不存在\"报告计算中\"\nCheckNotHasText | 报告计算中",
        "output": "页面不存在报告计算中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 定义变量\n${tagListInfo_header}    Set Variable    div[class=TagListInfo__header]\n${max_retry}    Set Variable    5\n${retry_count}    Set Variable    0\n\n# 使用FOR循环进行最多5次的重复判断\nFOR    ${retry_count}    IN RANGE    ${max_retry}\n    # 获取 class 为TagListInfo__header 中的文案\n    ${elem}  FindElem  ${tagListInfo_header}\n    ${text}  Get Text  ${elem}\n    # 判断文案是否包含 计算完成\n    ${contains}  Run Keyword And Return Status  Should Contain  ${text}  计算完成\n    IF    ${contains}\n        # 如果包含 计算完成，结束\n        Exit For Loop\n    ELSE\n        # 如果不包含 计算完成，等待20秒后 刷新浏览器页面\n        Sleep  20s\n        RefreshPage\n    END\nEND",
        "output": "获取 class 为TagListInfo__header 中的文案，判断是否包含 计算完成，如不包含 等待20秒后 刷新浏览器页面 后重复上面的判断规则 最多重复5次，如包含 结束"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "上报数据\n    [Arguments]  ${body}\n    ${headers}  Set Variable  {\"Content-Type\": \"application/json\", \"X-MCS-AppKey\": \"22af9aed03b00b0fbcf0c717f609ea08\"}\n    ${resp_json}  UiSendRequest | POST | https://mcs.ctobsnssdk.com/v2/event/json | ${body} | ${headers}",
        "output": "写一个关键字“上报数据”，参数为 body, 地址为：https://mcs.ctobsnssdk.com/v2/event/json, 方法：POST ，header:Content-Type：application/json,X-MCS-AppKey：22af9aed03b00b0fbcf0c717f609ea08"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取当前时间戳\n${timestamp}  Evaluate  time.time()  modules=time",
        "output": "获取当前时间戳"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "创建随机英文字符串\n    [Arguments]  ${length}  ${str_type}\n    IF  '${str_type} == '0'\n        ${result}  GenerateRandom  ${length}  [LOWER]\n    ELSE IF  '${str_type}' == '1'\n        ${result}  GenerateRandom  ${length}  [UPPER]\n    ELSE IF  '${str_type}' == '2'\n        ${result}  GenerateRandom  ${length}  [LETTERS]\n    END\n    [Return]  ${result}",
        "output": "写一个名为“创建随机英文字符串”的关键，接受两个参数：length，str_type，逻辑是：\n1、如果str_type等于0，则创建一个长度等于length的小写字母字符串\n2、如果str_type等于1，则创建一个长度等于length的大写字母字符串\n3、如果str_type等于2，则创建一个长度等于length的大写+小写字母字符串"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "创建随机中文字符串\n  [Arguments]  ${length}\n  ${chinese_characters}   Set Variable   赵钱孙李周吴郑王冯陈褚卫蒋沈韩杨朱秦尤许何吕施张孔曹严华金魏陶姜戚一二三四五东西南北中\n  ${random_string} =  GenerateRandom | ${length} | ${chinese_characters}\n  [Return]  ${random_string}",
        "output": "写一个名为“创建随机中文字符串”的关键，接受两个参数：length，逻辑是：\n1、返回一个长度等于length的由中文组成的随机字符串"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 勾选我已阅读checkbox\nCheckBoxOn | 我已阅读",
        "output": "点击我已阅读checkbox"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "${url}  Set Variable    //agent.oceanengine.com/apps/bi/new-chart?system_id=8&token=8940833a-ed9f-11ee-a367-b8599f1e9f3a\n${query}    Evaluate    urllib.parse.urlparse($url).query    modules=urllib\n${token}    Evaluate    urllib.parse.parse_qs($query)['token'][0]    modules=urllib\nLog   ${token}",
        "output": "从这个字符串中\"//agent.oceanengine.com/apps/bi/new-chart?system_id=8&token=8940833a-ed9f-11ee-a367-b8599f1e9f3a\"取出token字段"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 定位iframe元素\n${iframe}  FindElem | iframe\n\n# 获取iframe的src属性\n${src}  GetElemAttr | ${iframe} | src\n\n# 打印src属性\nLog | ${src}",
        "output": "定位iframe元素，获取src属性，并打印"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "随机IP地址\n    [Arguments]  ${type}\n    ${ip}=  Set Variable  0.0.0.0\n    IF  '${type}' == '1'\n        ${ip}=  Generate IPv4 Address\n    ELSE IF  '${type}' == '2'\n        ${ip}=  Generate IPv6 Address\n    END\n    [Return]  ${ip}\n\nGenerate IPv4 Address\n    ${seg1}=  GenerateRandom  2  [NUMBERS]\n    ${seg2}=  GenerateRandom  2  [NUMBERS]\n    ${seg3}=  GenerateRandom  2  [NUMBERS]\n    ${seg4}=  GenerateRandom  2  [NUMBERS]\n    ${ip}=  Set Variable  ${seg1}.${seg2}.${seg3}.${seg4}\n    [Return]  ${ip}\n\nGenerate IPv6 Address\n    ${seg1}=  GenerateRandom  4  [NUMBERS]abcdef\n    ${seg2}=  GenerateRandom  4  [NUMBERS]abcdef\n    ${seg3}=  GenerateRandom  4  [NUMBERS]abcdef\n    ${seg4}=  GenerateRandom  4  [NUMBERS]abcdef\n    ${seg5}=  GenerateRandom  4  [NUMBERS]abcdef\n    ${seg6}=  GenerateRandom  4  [NUMBERS]abcdef\n    ${seg7}=  GenerateRandom  4  [NUMBERS]abcdef\n    ${seg8}=  GenerateRandom  4  [NUMBERS]abcdef\n    ${ip}=  Set Variable  ${seg1}:${seg2}:${seg3}:${seg4}:${seg5}:${seg6}:${seg7}:${seg8}\n    [Return]  ${ip}",
        "output": "写一个名为“随机IP地址”关键字，接受1个参数：type，逻辑如下：\n1、如果type为1，生成一个随机的ipv4地址\n2、如果type为2，生成一个随机的ipv6地址\n3、返回生成的地址"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 开始循环\nFOR  ${i}  IN RANGE  10\n    # 获取第一行第四列的文本\n    ${txt}  GetCellValue  | 1 | 4\n    # 如果文本不是\"成功\"\n    IF  '${txt}' != '成功'\n        # 刷新页面\n        RefreshPage\n        # 等待5秒\n        Sleep  5s\n    ELSE\n        # 如果文本是\"成功\"，则跳出循环\n        Exit For Loop\n    END\nEND",
        "output": "判断第一行第四列的文本，如果不是成功，就刷新页面，每5秒循环一次，一共循环10次"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 打开指定网址\nOpenUrl | https://ecop.bytedance.net/qianchuan/advertisers",
        "output": "打开这个网址 https://ecop.bytedance.net/qianchuan/advertisers"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "随机mac地址\n    ${mac}  GenerateRandom  | 12 | [NUMBERS]abcdef\n    ${mac}  Set Variable  ${mac[0:2]}:${mac[2:4]}:${mac[4:6]}:${mac[6:8]}:${mac[8:10]}:${mac[10:12]}\n    [Return]  ${mac}",
        "output": "编写一个名为“随机mac地址”的关键字，生产一个符合mac格式要求的随机mac地址并返回"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验页面包含张三或李四或王五\nCheckHasAnyText | 张三 | 李四 | 王五",
        "output": "校验页面包含张三或李四或王五"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 定位输入控件\n${selector}   Set Variable  [class*=arco-modal-content] [class*=\"arco-form-item arco-form-layout-horizontal\"]\n\n# 输入emr_hsql\nFillArea | ${selector} | emr_hsql",
        "output": "向 class包含 arco-modal-content 的元素下class包含arco-form-item arco-form-layout-horizontal的元素输入emr_hsql"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验\"${name}\"包含\"autotest_offline_rule\"\nShould Contain  ${name}  autotest_offline_rule",
        "output": "判断\"${name}\"包含\"autotest_offline_rule\""
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找DEVICE_ID后面的span元素\n${elem}  FindElem | :contains(DEVICE_ID) + span\n\n# 获取span元素的value\n${value}  GetElemAttr | ${elem} | value",
        "output": "获取DEVICE_ID后面span的value"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 清空输入框中的内容\nSetField | 请输入 | ${KEY_BACKSPACE}",
        "output": "清空请输入中的内容"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待页面出现“新增AP”\nWaitText | 新增AP\n\n# 查找并验证页面上包含多个名称包含“AP名称”的元素\n${elems}  FindByText | AP名称\nShould Be True  |  len(${elems}) > 1",
        "output": "等待页面出现“新增AP”，然后验证页面包括多个包括名称包含“AP名称”的元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 localstorage, age 18\nLocalStorageSetItem | age | 18",
        "output": "设置 localstorage, age 18"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取 localstorage 中的 age 值，并打印\n${age_value}  LocalStorageGetItem | age\nLog  ${age_value}",
        "output": "获取 localstorage 中的 age 值，并打印"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 删除 localstorage 中age\nLocalStorageRemoveItem | age",
        "output": "删除 localstorage 中age"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 读取common.robot文件内容\n${content}    Get File    common.robot\n# 将文件内容存储到LocalStorage\nLocalStorageSetItem    content    ${content}",
        "output": "读取文件 common.robot 中的所有内容，然后写入 localstorage 中 content字段"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取 localstorage 中的 content 字段\n${content}  LocalStorageGetItem | content",
        "output": "获取 localstorage 中的 content 字段"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击父元素为A里面的第三个div\nClickElem | ${A} > div:eq(2)",
        "output": "点击父元素为A里面的第三个div"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 等待页面出现“全部功能”\nWaitText | 全部功能\n\n# 依次点击“全部功能”，“网络资产”\nClickTextOneByOne | 全部功能 | 网络资产\n\n# 等待页面出现“AP”，然后点击它\nWaitText | AP\nClick | AP\n\n# 在页面上PlaceHolde中包含“搜索AP名称”的input/textarea中输入“AP名称”，并敲回车键\nSetField | 搜索AP名称 | AP名称 | enter=True\n\n# 验证表格中存在6行数据\nCheckRowCount | 6\n\n# 判断每一个第一轮的值都包含“AP名称”\nFOR  ${i}  IN RANGE  1  7\n    @{vals}  GetRowValues | ${i}\n    Should Contain  ${vals}[0]  AP名称\nEND",
        "output": "写一段自动代码，具体的操作逻辑如下：\n1、等待页面出现“全部功能”，然后依次点击“全部功能”，“网络资产”\n2、等待页面出现“AP”，然后点击它\n3、在页面上PlaceHolde中包含“搜索AP名称”的input/textarea中输入“AP名称”，并敲回车键\n4、验证表格中存在6行数据，并判断每一个第一轮的值都包含“AP名称”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在页面上寻找PlaceHolde中包含\"搜索AP名称\"的input/textarea\n${elem}  FindElem | input[placeholder*='搜索AP名称'] , textarea[placeholder*='搜索AP名称']\n\n# 在input/textarea中输入\"AP名称\"，并敲回车键\nFillArea | ${elem} | AP名称 | enter=True",
        "output": "在页面上寻找PlaceHolde中包含“搜索AP名称”的input/textarea，在input/textarea中输入“AP名称”，并敲回车键"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击title=autotest_user_cdp下面的label\nClickElemToTheDirectionOf | [title=autotest_user_cdp] | bottom | label",
        "output": "点击title=autotest_user_cdp下面的label"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 查找${elem}元素下的所有后代元素\n${descendants}  FindElem | ${elem} *\n# 计算后代元素的数量\n${count}  GetElemCount | ${descendants}",
        "output": "计算${elem}这个元素下面的后代元素的数量"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向 https://desksharing.bytedance.com/#/shared/api/colleague/subscribe 发送 post 请求, 请求体为: {\"subscribed\": \"\"}\n${resp_json}  UiSendRequest | POST | https://desksharing.bytedance.com/#/shared/api/colleague/subscribe | {\"subscribed\": \"\"}",
        "output": "curl，curl 'https://desksharing.bytedance.com/#/shared/api/colleague/subscribe' \\\n--data-raw 'subscribed='"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "清空订阅同事\n    ${resp_json}  UiSendRequest | POST | https://desksharing.bytedance.com/#/shared/api/colleague/subscribe | {\"subscribed\": \"\"}",
        "output": "写一个名为“清空订阅同事”的关键字，执行这个 curl，\ncurl 'https://desksharing.bytedance.com/#/shared/api/colleague/subscribe' \\\n--data-raw 'subscribed='"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击名称下方的字体\nClickTextToTheDirectionOf | 名称 | bottom | 字体",
        "output": "点击名称下方字体"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取当前时间\n${create_time}  Get Current Date  result_format=%Y-%m-%d %H:%M",
        "output": "获取当前时间，以 2022-11-12 06:18 形式保存到变量 create_time"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 ${create_time} 右边的查看详情\nClickTextToTheDirectionOf | ${create_time} | right | 查看详情",
        "output": "点击 ${create_time} 右边的查看详情"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 发送GET请求至'https://infinite-boe.bytedance.net/infinite/api/giraffe/v1/file/tree?psm=n6m2en47dmrd'，请求头为Header1: value1\n${resp_json}  UiSendRequest | GET | https://infinite-boe.bytedance.net/infinite/api/giraffe/v1/file/tree?psm=n6m2en47dmrd | {} | {\"Header1\": \"value1\"}",
        "output": "发送如下请求, 请求头 Header1: value1\ncurl 'https://infinite-boe.bytedance.net/infinite/api/giraffe/v1/file/tree?psm=n6m2en47dmrd'"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成随机姓氏\n${surname}  GenerateRandom  | 1 | 赵钱孙李周吴郑王冯陈褚卫蒋沈韩杨朱秦尤许何吕施张孔曹严华金魏陶姜戚\n\n# 生成随机名字\n${name}  GenerateRandom  | 2 | 建国家修筑基地飞腾生静宽钱权泉理丽来紫萱紫棋佳慧辉一龙晓芳\n\n# 拼接随机中文姓名\n${full_name}  Catenate  | SEPARATOR= | ${surname} | ${name}",
        "output": "生成随机中文姓名"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 发送POST请求\n${resp_json}  UiSendRequest | POST | 提供的URL | 提供的请求体 | 提供的请求头",
        "output": "使用下面的curl发送post请求"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 从test_data/events.json文件中读取内容\n${event_content}  Get File  test_data/events.json\n\n# 从test_data/events_url.txt文件中读取URL\n${url}  Get File  test_data/events_url.txt\n\n# 将内容发送到此URL\n${resp_json}  UiSendRequest  |  POST  |  ${url}  |  ${event_content}",
        "output": "从文件 test_data/events.json 中读取内容，然后从 test_data/events_url.txt 中读取url，最后将内容发送到此URL"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 清空 请输入搜索关键词\nSetField | 请输入搜索关键词 | ${KEY_BACKSPACE}",
        "output": "清除 搜索关键词 内容"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "虚拟属性可用范围\n    [Arguments]  ${可用范围}\n    IF  \"${可用范围}\" == \"仅自己\"\n        ClickElem | [class*=ant-radio-input]:eq(2)\n    ELSE IF  \"${可用范围}\" == \"所有人\"\n        ClickElem | [class*=ant-radio-input]:eq(3)\n    END",
        "output": "写一个关键字：“虚拟属性可用范围”，接受参数 可用范围，业务逻辑是：\n1.当可用范围为仅自己时，点击 class包含ant-radio-input的第三个元素\n2.当可用范围为所有人时，点击 class包含ant-radio-input的第四个元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "刷新\n    # 鼠标移动到“刷新”按钮处\n    MoTo | 刷新\n    # 获取展示的 '数据更新时间' 字段的值\n    ${date1}  GetFieldVal | 数据更新时间\n    # 点击“刷新”按钮，触发查询\n    Click | 刷新\n    # 鼠标再次移动到“刷新”按钮处\n    MoTo | 刷新\n    # 获取展示的数据更新时间:${date2}\n    ${date2}  GetFieldVal | 数据更新时间\n    # 最后校验：${date2}不等于${date1}\n    Should Not Be Equal  ${date1}  ${date2}",
        "output": "写一个关键字“刷新”，主要逻辑为：\n1.鼠标移动到“刷新”按钮处，并获取展示的数据更新时间:${date1}\n2.点击“刷新”按钮，触发查询\n3.鼠标再次移动到“刷新”按钮处，并获取展示的数据更新时间:${date2}\n4.最后校验：${date2}不等于${date1}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验指标组名称表格中的23年春节_入口滲透行状态列中包含等待中\nCheckCellHas | 23年春节_入口滲透 | 状态 | 等待中 | tbl=指标组名称",
        "output": "校验 ‘指标组名称’ 表格中的 23年春节_入口滲透行 状态列 中包含 等待中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验表格 '指标组名称' 的单元格 （'23年春节_入口滲透'， '状态'）中包含 等待中\nCheckCellHas | 23年春节_入口滲透 | 状态 | 等待中 | tbl=指标组名称",
        "output": "校验表格 ‘指标组名称’ 的单元格 （‘23年春节_入口滲透’， ‘状态’）中包含 等待中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验表格 ‘指标组名称’ 的单元格 （‘23年春节_入口滲透’， ‘状态’）中包含 张三，李四，王二麻\nCheckCellHas | 23年春节_入口滲透 | 状态 | 张三 | 李四 | 王二麻 | tbl=指标组名称",
        "output": "校验表格 ‘指标组名称’ 的单元格 （‘23年春节_入口滲透’， ‘状态’）中包含 张三，李四，王二麻"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验‘指标组名称’表格第一行包含：23年春节_入口滲透 等待中\nCheckRowHas | 1 | 23年春节_入口滲透 | 等待中 | tbl=指标组名称",
        "output": "校验 ‘指标组名称’ 表格第一行包含：23年春节_入口滲透  等待中"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 清空class包含dashboard-header-title的区域值\nFillArea | [class*=dashboard-header-title] | ${KEY_BACKSPACE}",
        "output": "清空[class*=dashboard-header-title]区域值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取表格行数\n${row_count}  GetRowCount\n\n# 校验表格行数 > 0\nShould Be True  ${row_count} > 0",
        "output": "判断表格不为空"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "显微镜创建分群\n    [Arguments]  ${name}=${EMPTY}  ${desc}=${EMPTY}\n    # 点击存为用户分群\n    Click  存为用户分群\n    # 设置 '分群名称' 为 name\n    SetField  分群名称  ${name}\n    # 如果 desc 不为空，就把 '分群描述' 设置为 desc，否则就把 '分群描述' 设置为 name + '的分群描述'\n    IF  \"${desc}\" != \"${EMPTY}\"\n        SetField  分群描述  ${desc}\n    ELSE\n        SetField  分群描述  ${name}的分群描述\n    END\n    # 点击确定\n    Click  确定\n    # 检查页面应该包含“用户分群保存成功->查看分群”\n    CheckHasText  用户分群保存成功->查看分群",
        "output": "写一个名为：“显微镜创建分群”的关键字，接受 name、desc 2个参数，默认值都为空 业务逻辑是：\n1. 点击存为用户分群\n2. 设置 ‘分群名称’ 为 name\n3. 如果 desc 不为空，就把 ‘分群描述’ 设置为 desc，否则就把 ‘分群描述’ 设置为 name + '的分群描述'\n4.点击确定\n5.检查页面应该包含“用户分群保存成功->查看分群”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标悬浮到系统标签\nMoTo | 系统标签",
        "output": "鼠标悬浮到系统标签"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向\"请输入名称\"输入${tmp_name}\nSetField | 请输入名称 | ${tmp_name}",
        "output": "向请输入名称输入：${tmp_name}"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击页面上的“清除缓存”按钮\nClickElem | button:contains(清除缓存)",
        "output": "点击页面上的“清除缓存”按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 再切换回原窗口\nToPrevWindow",
        "output": "再切换回原窗口"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 给变量name赋值 分类002\n${name}  Set Variable  分类002",
        "output": "给变量name赋值 分类002"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验class=panel-card元素下存在class=arco-empty-description元素\nCheckHasElem | [class=panel-card] [class=arco-empty-description]",
        "output": "校验class=panel-card元素下存在class=arco-empty-description元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取‘${user}’前24个字符\n${user_part}  Evaluate  $user[:24]",
        "output": "获取‘${user}’前24个字符"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置class包含ps元素下的class为type的元素为：LAS\nFillArea | [class*=ps] [class*=type] | LAS",
        "output": "设置 class包含 ps 元素下的class为type的元素为：LAS"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 id为function-sider的元素下的class包含arco-select-view-value的元素为：LAS\nFillArea | [id=function-sider] [class*=arco-select-view-value] | LAS",
        "output": "设置 id为function-sider的元素下的class包含arco-select-view-value的元素为：LAS"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置 id=function-sider的元素下的class为header的元素下的class为type的元素为：LAS\n${selector} =  Set Variable  |  [id=function-sider] [class=header] [class=type]\nFillArea | ${selector} | LAS",
        "output": "设置 id=function-sider的元素下的class为header的元素下的class为type的元素为：LAS"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在搜索框中输入adv\nSetField | 搜索 | adv",
        "output": "在搜索框中输入adv"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 验证AP名称的字段的最大输入长度是50，可以先设置AP名称的字段为51个字符，然后获取AP名称的字段值长度，校验其长度为50\n# 先设置AP名称字段为51个字符\nSetField | AP名称 | ${\"a\"*51}\n\n# 获取AP名称字段值\n${ap_name}  GetFieldVal | AP名称\n\n# 校验AP名称字段值长度为50\n${ap_name_length}    Get Length | ${ap_name}\nShould Be Equal As Integers | ${ap_name_length} | 50",
        "output": "验证AP名称的字段的最大输入长度是50"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取表格行数\n${row_count}  GetRowCount ",
        "output": "返回表格一共有多少行"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击编辑icon\nClickIcon | edit\n\n# 输入123456并回车\nSendText | 123456 | enter=True",
        "output": "点击编辑icon，输入123456，并回车"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 选择企业群类型为飞书\nSetField | 企业群类型 | 飞书",
        "output": "企业群类型选择飞书"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面是否包含coral_auto_business\n${exist}  IsAnyTextExisting | coral_auto_business\nIF  $exist\n    # 点击coral_auto_business所在行的删除按钮\n    ClickElemOfRow | coral_auto_business | button:contains(删除)\n    # 点击确定\n    Click | 确定\n    # 检查页面包含删除成功\n    CheckHasText | 删除成功\nEND",
        "output": "如果页面包含coral_auto_business，就点击coral_auto_business所在行的删除按钮，点击确定，检查页面包含删除成功"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将有效期设置为 2024-04-07\nSetField | 有效期 | 2024-04-07",
        "output": "将有效期设置为 2024-04-07"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取当前日期\n${current_date}  Get Current Date  result_format=%Y-%m-%d\n\n# 设置有效期为当前日期\nSetField | 有效期 | ${current_date}",
        "output": "将有效期设置为 当前日期"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 获取文件 byte-test.key 的内容，并打印\n${file_content}  Get File  byte-test.key\nLog  ${file_content}",
        "output": "打印文件 byte-test.key 的内容"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 截图对比，相似度设置为0.98\nImageDiff | sim=0.98",
        "output": "截图对比，相似度设置为 0.98"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 截取 class包含abc的div元素的图片，并和基准图对比，相似度为0.99\nImageDiff | div[class*=abc] | sim=0.99",
        "output": "截图对比 class包含abc的div元素，相似度为 0.99"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "飞书登录\n    [Arguments]  ${url}=${MAIN_PAGE}  ${session}=${FEISHU_SESSION}\n    OpenBrowser\n    LoginFeiShu  ${session}\n    OpenUrl  ${url}",
        "output": "写一个名为：“飞书登录” 的关键字，接受 url, session 参数，表示被测页面URL以及飞书session，默认值分别为变量 MAIN_PAGE 和 FEISHU_SESSION，作用是：\n1. 打开浏览器\n2. 使用session登录飞书\n3. 访问url"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成8位随机数\n${random_num}  GenerateRandom  | 8 | [NUMBERS]\n\n# 设置SN编号为 SN+生成的随机数\nSetField | SN编号 | SN${random_num}",
        "output": "设置SN编号为 SN+生成一串8位随机数"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 生成一段8位随机数\n${rand_num}  GenerateRandom  | 8 | [NUMBERS]\n\n# 拼接资产编号\n${assetId}  Set Variable  IT${rand_num}\n\n# 输入资产编号\nSetField | 资产编号 | ${assetId}",
        "output": "输入资产编号为 IT+生成一段8位随机数 ，并记录为变量 assetId"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向class包含FilterExpressionsForm__container的元素中输入：注册时间、在今天和、过去、1、之内\nFillArea | [class*=FilterExpressionsForm__container] | 注册时间 | 在今天和 | 过去 | 1 | 之内",
        "output": "向class包含FilterExpressionsForm__container的元素中输入：注册时间、在今天和、过去、1、之内"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置请选择PO为：2024-04-05\nSetField | 请选择PO | 2024-04-05",
        "output": "设置请选择PO为：2024-04-05"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "验证搜索为空\n    [Arguments]  ${args}\n    # 点击 class包含arco-input arco-input-size-small的元素\n    ClickElem | [class*=\"arco-input arco-input-size-small\"]\n    # 向这个元素输入参数\n    SendText | ${args}\n    # 检验页面应该包含“搜索为空”的文本\n    CheckHasText | 搜索为空",
        "output": "写一个关键字：“验证搜索为空”，接受参数 args 业务逻辑是：\n1.点击 class包含arco-input arco-input-size-small的元素\n2.向这个元素输入参数\n3.检验页面应该包含“搜索为空”的文本"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面是否存在coral_auto_hive_em_table_tmp的a元素\n${exist}  IsAnyElemExisting | a:contains(coral_auto_hive_em_table_tmp)\n\n# 如果存在coral_auto_hive_em_table_tmp的a元素，就点击coral_auto_hive_em_table_tmp所在行的第一个class包含的dprc-btn-link元素\nIF  ${exist}\n    ClickElemOfRow | coral_auto_hive_em_table_tmp | [class*=dprc-btn-link]:eq(0)\nEND",
        "output": "如果页面存在文本为coral_auto_hive_em_table_tmp的a元素，就点击coral_auto_hive_em_table_tmp所在行的第一个class包含的dprc-btn-link元素"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击class包含arco-dropdown-menu-inner的元素下的移交\nClick | 移交 | base=[class*=arco-dropdown-menu-inner]",
        "output": "点击class包含arco-dropdown-menu-inner的元素下的移交"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击class包含arco-dropdown-menu-inner的元素下的class包含dearco-dropdown-menu-item的元素下的移交\nClick | 移交 | base=[class*=arco-dropdown-menu-inner] [class*=dearco-dropdown-menu-item]",
        "output": "点击class包含arco-dropdown-menu-inner的元素下的class包含dearco-dropdown-menu-item的元素下的移交"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断页面是否存在\"coral公有云自动化测试-勿动\"\n${exist}  IsAnyTextExisting | coral公有云自动化测试-勿动\n\n# 如果存在，则鼠标悬停到该文本上\nIF  $exist\n    MoTo | coral公有云自动化测试-勿动\nEND",
        "output": "如果页面存在coral公有云自动化测试-勿动，鼠标悬停该文本"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 鼠标移动到包含文本coral公有云自动化测试-勿动的右侧\nMoveToTextToTheDirectionOf | coral公有云自动化测试-勿动 | right",
        "output": "鼠标移动到包含文本coral公有云自动化测试-勿动的右侧"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置描述为：coral-UI自动化测试\nSetField | 描述 | coral-UI自动化测试",
        "output": "输入描述：coral-UI自动化测试"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "获取页面上${project_name}的个数，可以先查看文本为 ${project_name} 的元素是否存在，如果不存在，数量就是0，如果存在数量可通过查找元素并获取其len来计算\n# 检查页面上是否存在文本为 ${project_name} 的元素\n${exist}  IsAnyTextExisting | ${project_name}\n# 如果不存在，则其数量为0\nIF  ${exist} == False\n    ${cnt}  Set Variable | 0\n# 如果存在，则通过查找元素并获取其数量\nELSE\n    ${elems}  FindByText | ${project_name}\n    ${cnt}  Get Length | ${elems}\nEND\n# 输出 ${project_name} 的数量\nLog  ${cnt}",
        "output": "获取页面上${project_name}的个数"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击请选择资产型号\nClick | 请选择资产型号\n\n# 输入123\nSendText | 123\n\n# 选择钱柜123321\nClick | 钱柜 123321",
        "output": "点击请选择资产型号，输入 123，选择 “钱柜 123321”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击实物台账\nClick | 实物台账\n\n# 在搜索框输入assetId\nSetField | 搜索 | assetId",
        "output": "点击实物台账，在搜索框输入assetId"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验ITxxxx的表格行中包含：闲置、已入库\nCheckRowHas | ITxxxx | 闲置 | 已入库",
        "output": "校验ITxxxx的表格行中包含：闲置、已入库"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "期望出现 资产编号为 变量assetId 的表格行，就是校验表格中包含变量所代表的文本 ${assetId}\n# 校验表格中包含资产编号所代表的文本 ${assetId}\nCheckTableHas | ${assetId}",
        "output": "期望出现 资产编号为 变量assetId 的表格行"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验出现资产编号为变量assetId的表格行，包含闲置中、已入库、捐赠\nCheckRowHas | ${assetId} | 闲置中 | 已入库 | 捐赠",
        "output": "校验出现 资产编号为 变量assetId 的表格行，包含 闲置中、已入库、捐赠"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验表格中包含资产编号所代表的文本 ${assetId}\nCheckTableHas | ${assetId}",
        "output": "校验表格中出现 资产编号为 变量assetId 的表格行"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击取消按钮右侧的入库按钮\nClickTextToTheDirectionOf | 取消 | right | 入库",
        "output": "点击取消按钮右侧的入库按钮"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置统计周期日期为：2024-03-15 ~ 2024-03-20\nSetField | 统计周期 | 2024-03-15 ~ 2024-03-20",
        "output": "设置统计周期为：2024-03-15 ~ 2024-03-20"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向输入关键词中输入：coral_auto_hive_em_table\nSetField | 输入关键词 | coral_auto_hive_em_table \n\n# 点击搜索\nClick | 搜索",
        "output": "向输入关键词中输入：coral_auto_hive_em_table，点击搜索"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 定位iframe元素\n${iframe_elem}  FindElem | iframe\n\n# 获取iframe元素的src属性\n${src}  GetElemAttr | ${iframe_elem} | src\n\n# 使用Evaluate关键字执行Python代码，解析出 \"token=\" 后面的内容\n${token}  Evaluate | ${src}.split('token=')[-1]",
        "output": "定位iframe元素，获取src属性token中“token=”后面的内容"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 检查页面标题包含“首页”\nWaitTitleContainsAny | 首页\n\n# 鼠标移动到第二个online_script文本上\nMoTo | online_script | idx=1\n\n# 点击class包含qa-detail-header-ux1NXP的元素下的备注\nClick | 备注 | base=[class*=qa-detail-header-ux1NXP]",
        "output": "这段代码主要作用是：\n1. 检查页面标题包含“首页”\n2. 鼠标移动到第二个“online_script”文本上\n3. 点击class包含“qa-detail-header-ux1NXP”的元素下的“备注”\n\n其中用到了以下关键字：\n1. WaitTitleContainsAny\n2. MoTo\n3. Click\n\n这些关键字的用法是：\n1. `WaitTitleContainsAny | 首页`：等待页面标题包含“首页”中的任一个文本\n2. `MoTo | online_script | idx=1`：鼠标移动到第二个“online_script”文本上\n3. `Click | 备注 | base=[class*=qa-detail-header-ux1NXP]`：点击class包含“qa-detail-header-ux1NXP”的元素下的“备注”"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向'写下你的问题'输入：这是做什么的？\nSetField | 写下你的问题 | 这是做什么的？\n\n# 点击第一个 \"Mac 笔记本 高配\" 右边的 class为semi-badge的对象\nClickElemToTheDirectionOf | :contains(Mac 笔记本 高配):eq(0) | right | [class=semi-badge]",
        "output": "这段代码主要作用是：首先向名为\"写下你的问题\"的字段中输入\"这是做什么的？\"，然后点击第一个包含文本\"Mac 笔记本 高配\"的元素右边的class为semi-badge的对象。\n其中用到了以下关键字：SetField、ClickElemToTheDirectionOf\n这些关键字的用法是：\nSetField 用于操作页面字段name关联的控件区域，依次填入一个或多个值到控件中；\nClickElemToTheDirectionOf 用于点击基准元素给定方位的目标元素，必填参数the_base为基准元素，direction为点击方向，selector为目标元素的jquery选择器。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "设置业务维度事件指标\n    [Arguments]  ${name}  @{args}\n    # 设置最大重试次数为4\n    ${max_retry}=  Set Variable  4\n    # 初始化当前重试次数为0\n    ${retry}=  Set Variable  0\n    # 使用循环进行元素存在判断和点击操作\n    FOR  ${i}  IN RANGE  ${max_retry}\n        # 判断class包含single-events__style且文本包含name的元素或style文本包含name的元素是否存在\n        ${exist}  IsAnyElemExisting | [class8=single-events__style]:contains(${name}), span[style*=${name}] | timeout=1\n        # 如果元素存在，跳出循环\n        IF  ${exist}\n            Exit For Loop\n        END\n        # 如果元素不存在，点击事件指标按钮\n        Click  事件指标\n        # 更新当前重试次数\n        ${retry}=  Evaluate  ${retry} + 1\n    END\n    # 如果重试次数达到最大值，表示元素不存在，无法进行后续操作\n    IF  ${retry} == ${max_retry}\n        Fail  无法找到指定元素\n    END\n    # 如果元素存在，向字段name中输入给定的一个或多个 args\n    SetField | ${name} | @{args}",
        "output": "这段代码主要作用是：编写一个名为：“设置业务维度事件指标” 的关键字，并确保指定元素存在后进行相应输入操作。\n其中用到了以下关键字：Set Variable、FOR、IsAnyElemExisting、Exit For Loop、Click、Evaluate、Fail、SetField\n这些关键字的用法是：\n- Set Variable：设置变量的值\n- FOR：进行循环操作\n- IsAnyElemExisting：判断指定选择器的元素是否存在\n- Exit For Loop：退出循环\n- Click：点击指定文本的元素\n- Evaluate：执行Python表达式\n- Fail：报错并停止执行\n- SetField：向指定字段中输入值"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 选择第一个Macbook作为型号规格\nSetField | 型号规格 | Macbook",
        "output": "这段代码主要作用是：选择第一个Macbook作为型号规格\n其中用到了以下关键字：SetField\n这些关键字的用法是：SetField用于操作页面字段名为型号规格的控件区域，填写值为Macbook，并选择第一个Macbook选项。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入申请理由\nSetField | 申请理由 | UI自动化申请",
        "output": "这段代码主要作用是：在页面的“申请理由”字段中输入文本“UI自动化申请”。\n其中用到了以下关键字：SetField。\n这些关键字的用法是：SetField关键字用于向页面中指定名称的字段输入文本内容。在此代码中，它向“申请理由”字段输入了文本“UI自动化申请”。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 包含龚颖的第一个表格行 的 更改处理人\nClickTextOfRow | 龚颖 | 更改处理人",
        "output": "这段代码主要作用是：在表格中查找包含“龚颖”的第一行，并点击该行中的“更改处理人”文本。\n\n其中用到了以下关键字：\n- `ClickTextOfRow`\n\n这些关键字的用法是：\n- `ClickTextOfRow | 龚颖 | 更改处理人`：在表格中查找包含指定文本“龚颖”的行，并在该行中点击文本“更改处理人”。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击提交\nClick | 提交\n\n# 等待申请单号出现\nWaitText | 申请单号\n\n# 获取申请单号字段的值\n${req}  GetFieldVal | 申请单号",
        "output": "这段代码主要作用是：点击提交按钮并等待页面上出现“申请单号”文本，然后获取“申请单号”字段的值并存入变量`${req}`中。\n\n其中用到了以下关键字：\n- `Click`\n- `WaitText`\n- `GetFieldVal`\n\n这些关键字的用法是：\n- `Click | 提交`：点击页面上文本为“提交”的元素。\n- `WaitText | 申请单号`：等待页面上出现“申请单号”文本。\n- `${req}  GetFieldVal | 申请单号`：获取“申请单号”字段的值，并赋值给变量`${req}`。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 在搜索框输入变量req并回车\nSetField | 搜索 | ${req} | enter=True",
        "output": "这段代码主要作用是：在页面的搜索框中输入变量`req`的值，并模拟按下回车键来提交搜索。\n其中用到了以下关键字：SetField\n这些关键字的用法是：SetField用于在指定的页面字段中输入值，这里是在名为“搜索”的字段中输入变量`${req}`的值，并通过`enter=True`参数模拟按下回车键。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击 表格行包含 变量req 的 class包含moreIcon 的对象\nClickElemOfRow | ${req} | [class*=moreIcon]",
        "output": "这段代码主要作用是：点击表格行中包含变量`req`的元素，并且该元素的class包含`moreIcon`。\n\n其中用到了以下关键字：`ClickElemOfRow`\n\n这些关键字的用法是：`ClickElemOfRow`用于点击表格行中的元素。这里指定了行通过`req`变量进行匹配元素，该元素的选择通过jQuery选择器`[class*=moreIcon]`来实现，即class属性包含`moreIcon`的元素。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 输入REQ20240412000129并回车\nSetField | 搜索 | REQ20240412000129 | enter=True",
        "output": "这段代码主要作用是：在名为“搜索”的页面字段中输入文本“REQ20240412000129”并按下回车键以进行搜索。\n\n其中用到了以下关键字：SetField\n\n这些关键字的用法是：SetField用于向页面中特定字段输入指定文本，在本例中，它用于在“搜索”字段中输入“REQ20240412000129”并触发回车键操作。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 访问火山ECS云主机页面并等待页面加载完成\nOpenUrl | ${ECS_URL}\nWaitLoading\n\n# 在筛选条件中输入: WebUIDemo, 然后回车\nSetField | 筛选条件 | WebUIDemo | enter=True\nWaitLoading\n\n# 点击包含 WebUIDemo 的表格行中的：停止\nClickTextOfRow | WebUIDemo | 停止\n\n# 选择停机方式为：强制停机\nSetField | 停机方式 | 强制停机\n\n# 点击取消右边的停止按钮\nClickTextToTheDirectionOf | 取消 | right | 停止\n\n# 校验页面包含：停止操作提交完成\nCheckHasText | 停止操作提交完成",
        "output": "这段代码主要作用是：访问火山ECS云主机页面，筛选出名称为\"WebUIDemo\"的项目，执行停止操作，选择强制停机，并验证停止操作提交成功。\n\n其中用到了以下关键字：\n- `OpenUrl`\n- `WaitLoading`\n- `SetField`\n- `ClickTextOfRow`\n- `ClickTextToTheDirectionOf`\n- `CheckHasText`\n\n这些关键字的用法是：\n- `OpenUrl`：用于打开指定的URL地址。\n- `WaitLoading`：等待页面加载完成。\n- `SetField`：用于在指定字段中输入内容，这里使用了`enter=True`表示输入完按下回车。\n- `ClickTextOfRow`：用于点击包含特定文本的表格行内的指定文本。\n- `ClickTextToTheDirectionOf`：用于点击某个基准文本给定方向的目标文本。\n- `CheckHasText`：验证页面是否包含指定的文本。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "登录火山引擎\n    [Arguments]  ${accout}=${ACCOUNT}  ${sub_accout}=${SUB_ACCOUNT}  ${password}=${PASSWORD}\n    OpenBrowser  https://console.volcengine.com/\n    IF  \"${sub_accout}\" != \"\"\n        Click  子用户登录\n        SetField  主账号  ${accout}\n        SetField  子用户  ${sub_accout}\n        SetField  密码  ${password}\n    ELSE\n        SetField  用户名  ${accout}\n        SetField  密码  ${password}\n    END\n    Click  立即登录\n    WaitURLNotContains  login",
        "output": "这段代码的主要作用是：自动化登录火山引擎的网站。如果提供了子账户名，那么它会选择子用户登录选项并填入主账户名、子账户名和密码；如果没有提供子账户名，则填入用户名和密码进行登录。登录完成后，会等待页面跳转，确保不再停留在login页面。\n\n其中用到了以下Robot Framework的关键字：\n- `OpenBrowser`：打开一个新的浏览器窗口，并将其设置为当前活动窗口。该关键字需要提供一个url参数，表示要打开的网站。\n- `Click`：点击网页上指定的元素。该关键字需要一个参数，指定要点击的元素的文本。\n- `SetField`：设置网页上的字段。该关键字需要两个参数，一个是字段名，另一个是要设置的值。\n- `WaitURLNotContains`：等待当前的URL不包含指定的文本。该关键字需要一个参数，指定不应存在的文本。\n- `IF ELSE END`：Robot Framework的条件语句关键字，控制根据条件是否执行某些步骤。\n\n这些关键字的使用方式是：\n- `OpenBrowser`：在这里用来打开火山引擎的登录页面。\n- `Click`：在这里用来点击\"立即登录\"按钮和\"子用户登录\"选项。\n- `SetField`：在这里用来填入用户名、密码、主账户名和子账户名。\n- `WaitURLNotContains`：在这里用来确保登录成功，页面已跳转，不再是login页面。\n- `IF ELSE END`：在这里用来判断是否提供了子账户名，如果提供了就选择子用户登录，否则选择普通用户登录。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将当前页面设置为基准图\nImageDiff | mode=save",
        "output": "这段代码主要作用是：设置当前页面为基准图像。\n\n其中用到了以下关键字：ImageDiff。\n\n这个关键字的用法是：ImageDiff用于截屏对比，参数mode=save表示保存当前屏幕的截图作为基准图。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向class为dataset-input-search的div元素中输入0412\nFillArea | div[class=dataset-input-search] | 0412",
        "output": "这段代码主要作用是：向class为`dataset-input-search`的`div`元素中输入字段`0412`。\n\n其中用到了以下关键字：`FillArea`\n\n这个关键字的用法是：`FillArea`关键字用于操作页面上jquery选择器代表的控件区域，依次填入一个或多个值到控件中。在此段代码中，它被用来在class为`dataset-input-search`的`div`元素中输入`0412`。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 定位第一个class为time的div元素\n${time_elem}  FindElem | div[class=time]:eq(0)\n\n# 输入2024-04-01～2024-04-06\nFillArea | ${time_elem} | 2024-04-01～2024-04-06",
        "output": "这段代码主要的作用是：在页面上找到第一个class属性为\"time\"的div元素，并在该元素内输入日期范围\"2024-04-01～2024-04-06\"。\n\n其中用到了以下关键字：\"FindElem\"和\"FillArea\"。\n\n这些关键字的用法是： \n- \"FindElem\"：该关键字用于查找页面上的元素。在这段代码中，它被用来查找第一个class属性为\"time\"的div元素。 \"div[class=time]:eq(0)\" 是一个jquery选择器，它表示页面上第一个class属性为\"time\"的div元素。\n- \"FillArea\"：该关键字用于在指定的元素区域内填写内容。在这段代码中，将日期范围\"2024-04-01～2024-04-06\"填写到了通过\"FindElem\"关键字查找到的div元素中。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击弹窗中表格第一行的 radio\nClickElemOfRow | 1 | :radio | base=POPUP",
        "output": "这段代码主要作用是：点击弹窗中表格的第一行的 radio 按钮。\n\n其中用到了以下关键字：ClickElemOfRow\n\n这个关键字的用法是：ClickElemOfRow关键字用来在特定的表格行中点击特定的元素。在这个示例中，它被用来点击弹窗中表格的第一行的 radio 按钮。关键字的参数分别为行名或行号 (\"1\" 表示第一行)，要点击的元素的 jquery 选择器（\":radio\" 表示 radio 按钮），以及 base 参数（\"POPUP\" 表示在弹窗中进行操作）。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 判断变量GIRAFFE_PLAN_NAME是否包含字符串'冒烟'\n${contains_smoke}  Evaluate  '冒烟' in $GIRAFFE_PLAN_NAME\n\n# 如果包含'冒烟'就打印xx\nIF  $contains_smoke\n    Log  xx\nEND",
        "output": "这段代码主要作用是：先判断变量\"GIRAFFE_PLAN_NAME\"中是否含有字符串\"冒烟\"，如果包含，那么会打印出字符串\"xx\"。\n\n其中用到了以下关键字：Evaluate, IF, Log\n\n这些关键字的用法是：\n- Evaluate：执行Python语句，并返回结果。这里使用了Python的\"in\"关键字来检查变量\"GIRAFFE_PLAN_NAME\"中是否包含字符串\"冒烟\"，如果包含，返回True，否则返回False。\n- IF：Robot Framework的条件判断关键字，如果条件为真，那么执行下面的关键字，否则跳过，这里用来判断变量\"contains_smoke\"是否为True。\n- Log：打印/输出信息，这里用来打印字符串\"xx\"。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "\"设备详情\"这个下拉框选择器，选择值为1的选项，其实就是将 “设备详情” 这个页面字段设置为 1\n# 选择设备详情下拉框的值为1的选项\nSetField | 设备详情 | 1",
        "output": "这段代码主要作用是：设置页面字段“设备详情”的值为1。\n\n其中用到了以下关键字：SetField。\n\n这个关键字的用法是：SetField是用来设置页面字段值的关键字，其中第一个参数是字段名，第二个参数是待设置的值。在这个场景中，它将页面字段“设备详情”的值设置为1。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 点击弹窗中表格 cert_hosting 这一行的 radio\nClickElemOfRow | cert_hosting | :radio | base=POPUP",
        "output": "这段代码主要作用是：点击弹窗中包含\"cert_hosting\"文本的表格行中的单选按钮（radio）。\n其中用到了以下关键字：ClickElemOfRow\n这些关键字的用法是：ClickElemOfRow关键字用于点击表格行中的指定元素，这里通过参数row_name_or_id指定了包含\"cert_hosting\"文本的行，通过参数selector指定了单选按钮（:radio），参数base为POPUP表示在弹窗中进行操作。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将clase为detail-content的页面区域，保存为基准图，命名为全域推广详情页数据tab页面校验，相似度为1\nImageDiff | [class=detail-content] | pic_name=全域推广详情页数据tab页面校验 | sim=1",
        "output": "这段代码主要作用是：截取class为detail-content的页面区域的图片，将其与预先保存的名为全域推广详情页数据tab页面校验的基准图进行相似度比较，相似度要求为1。\n其中用到了以下关键字：ImageDiff\n这些关键字的用法是：使用ImageDiff关键字截取指定元素的图片（通过传入jquery选择器），并与预先保存的基准图进行相似度比较。参数中pic_name表示基准图片的名称，sim表示期望的相似度。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 将页面下拉滑动要完全可见class为lightcharts-container的页面区域, 其实就是将此元素移动到视野内\n# 将class为lightcharts-container的元素移动到视野内\nMoveIntoView | [class=lightcharts-container]",
        "output": "这段代码主要作用是：将页面下拉滑动到能够完全看见class为lightcharts-container的页面区域，也就是将此元素移动到视野内以便用户可以看到。\n\n其中用到了以下关键字：MoveIntoView。\n\n这个关键字的用法是：使用jquery选择器选择目标元素，并将此元素移动到用户视野内部。此处的jquery选择器为[class=lightcharts-container]，用于选择class为lightcharts-container的页面元素。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 校验class为qc-table的页面区域，并保存为基准图\nImageDiff | [class=qc-table] | pic_name=数据tab页面校验 | sim=0.9",
        "output": "这段代码主要作用是：校验class为 \"qc-table\" 的页面区域，并将这块区域截图保存下来，然后将保存的图像和之前的基准图像进行对比，判断二者的相似度是否达到了预设的0.9。\n\n其中用到了以下关键字：ImageDiff。\n\n这个关键字的用法是：ImageDiff 用于对指定元素区域进行截图，并将截取的图像和预设的基准图像进行对比，以判断二者是否相似。\nImageDiff 的参数中，第一个参数是用来选择指定元素的选择器，这里是 \"[class=qc-table]\"，代表选择页面上 class 为 'qc-table' 的元素；第二个参数 'pic_name=数据tab页面校验' 是指定保存的截图名称；第三个参数 'sim=0.9' 是设定相似度的阈值，如果实际的相似度低于这个值，测试将失败。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 截图整个屏幕图片并进行对比，相似度取0.92\nImageDiff | sim=0.92",
        "output": "这段代码主要作用是：对整个屏幕截图，并将截取的图片与预先保存的基准图片进行对比，设置的相似度阈值是0.92。\n\n其中用到了以下关键字：ImageDiff\n\n这个关键字的用法是：截取屏幕的图片或者指定元素的图片，并和预先保存的基准图进行对比，如果相似度低于设定的阈值，那么测试将会失败。在这段代码中，未指定具体的元素选择器，所以默认为全屏截图，并且相似度阈值是0.92。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 发送请求获取产品列表\n${resp_json}  UiSendRequest | POST | https://xxx.yyy.zzz.com/nvoke/query_product_list | {\"page\":1,\"limit\":100,\"only_favor\":true,\"current_user\":\"张三\"} | {\"accept\": \"application/json\", \"content-type\": \"application/json;charset=UTF-8\"}\n\n# 从返回的json中获取data值\n${data_list}  GetValuesFromJson | ${resp_json} | data\n\n# 循环检查每个产品的user是否都是张三\nFOR  ${product}  IN  @{data_list}\n    ${user}  GetValuesFromJson | ${product} | user\n    Should Be Equal As Strings  ${user}  张三\nEND",
        "output": "这段代码主要作用是：发送请求获取产品列表，然后检查返回的产品列表中的每个产品的用户是否都是张三。\n其中用到了以下关键字：UiSendRequest、GetValuesFromJson、FOR、Should Be Equal As Strings。\n这些关键字的用法是：\n- UiSendRequest：发送HTTP请求，例如POST请求，请求URL为https://xxx.yyy.zzz.com/nvoke/query_product_list，请求体为JSON格式的数据，请求头为JSON格式的数据，返回JSON格式的响应数据。\n- GetValuesFromJson：从JSON对象中获取指定字段的值，例如从返回的JSON数据中获取\"data\"字段的值，再从产品中获取\"user\"字段的值。\n- FOR：遍历一个数据列表，例如遍历获取到的产品列表，然后在循环体内执行一些操作。\n- Should Be Equal As Strings：比较两个字符串是否相等，例如比较获取到的用户是否等于\"张三\"。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 设置项目为：auto_test_project_qa\nSetField | 项目 | auto_test_project_qa",
        "output": "这段代码的主要作用是：在一个表单或用户界面中，设置\"项目\"字段的值为\"auto_test_project_qa\"。\n\n其中用到了以下关键字：SetField\n\n这个关键字的用法是：SetField关键字用于操作页面字段关联的控件区域，将其内容设为给定的值。在这个例子中，\"项目\"是字段名，\"auto_test_project_qa\"是要设置的值。因为没有给出idx，enter，base和near参数，所以会默认操作第一个名为\"项目\"的字段（idx=0），不会输入回车（enter=False），操作的是该字段在整个页面中的位置（base为空），并且没有指定靠近哪个文本附近（near为空）。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 模拟按下esc键\nPress Key | None | ESCAPE",
        "output": "这段代码主要作用是：模拟按下 ESCAPE 键，通常用于退出或取消操作。\n\n其中用到了以下关键字：Press Key。\n\n这个关键字的用法是：Press Key 是 RobotFramework 内置的Selenium库提供的一个关键字，用于模拟在一个指定的元素上发送键盘按键。常用的按键包括常规的字母、数字键、功能键如 F1-F12 以及特殊键如 Enter、Escape、Alt、Shift、Ctrl 等。在这里，第一个参数 None 表示没有指定具体的元素，即发送到当前活动的元素或页面，ESCAPE 是键盘上的 Esc 键的名称。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 向选择库输入：${TEST_DB}\nSetField | 选择库 | ${TEST_DB}",
        "output": "这段代码主要作用是：向一个名为选择库的输入框填入一个变量${TEST_DB}的值。\n其中用到了以下关键字：SetField\n这些关键字的用法是：SetField关键字用于操作页面上的字段，将字段关联的控件中的值设置为给定值。在这个例子中，将名为选择库的输入框的值设置为${TEST_DB}。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "验证${name}按钮是否为可用态\n  [Arguments]  ${name}\n  # 需要先判断文本为${name}的元素是否存在，如果存在，再判断此元素是否为可用状态\n  ${exist}  IsAnyTextExisting | ${name}\n  IF  ${exist}\n      ${elem}  FindByText | ${name}\n      ${status}  IsElementDisabled | ${elem}\n      IF  ${status}\n        [Return]  False\n      ELSE \n        [Return]  True\n      END\n  ELSE\n      [Return]  False\n  END",
        "output": "这段代码的主要作用是：验证名为${name}的按钮是否处于可用状态。\n\n其中用到了以下关键字：\"IsAnyTextExisting\"，\"FindByText\"，\"IsElementDisabled\"。\n\n这些关键字的用法是：\n\n\"IsAnyTextExisting\"：判断给出的一串文本中是否有任一文本出现在页面上。如果有，返回True，否则返回False。\n\n\"FindByText\"：查找页面上的元素，该元素要包含给出的文本。找到的第一个元素会被返回。\n\n\"IsElementDisabled\"：判断给定的元素是否处于禁用状态。如果处于禁用状态，返回True，否则返回False。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "# 选择售卖内容为：图书，其实就是把售卖内容字段设置为图书\nSetField | 售卖内容 | 图书",
        "output": "这段代码主要作用是：将售卖内容字段设置为“图书”\n\n其中用到了以下关键字：SetField\n\n这些关键字的用法是：SetField关键字用于操作页面字段与之关联的控件区域，填入一个或多个值到控件中。具体来说，在这段代码中，它选择了名称为“售卖内容”的字段，并将其值设置为“图书”。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": " 点击 role 为 alert 元素中的 了解更多",
        "output": "这段代码主要作用是：点击角色为\"alert\"的元素中的\"了解更多\"。\n其中用到了以下关键字：Click。\n \n这个关键字的用法是：Click用于页面中的点击操作，它需要一个参数，即需要点击的文本。在这里，它被用于点击指定元素（这里是\"了解更多\"）。\n这段代码中，\"role为alert\"用作\"base\"参数，这是一个基准元素，用于限制点击操作的范围。在这里，它限制了点击操作只能在角色为\"alert\"的元素内进行。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "等待 5s",
        "output": "这段代码主要作用是：等待 5 秒钟。\n其中用到了以下关键字：Sleep。\n这个关键字的用法是：Sleep | timeStr，用于等待指定的时间。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "在当前页面表格中，找到一个实例名称为 刘嘉诚-10-强密码 的第一个实例，选中它",
        "output": "这段代码主要作用是：在当前页面的表格中，找到并选中名为\"刘嘉诚-10-强密码\"的第一个实例。\n \n 其中用到了以下关键字：SelectTableRow\n \n 这个关键字的用法是：SelectTableRow | row_name_or_id | tbl=1 | base=，它用于在指定的表格（tbl）中，选择或选中指定名称（row_name_or_id）的表格行。如果提供了基准元素（base），则在该元素中选择或选中表格行。\n \n 在这个代码中，应用了该关键字以选中名为\"刘嘉诚-10-强密码\"的第一个实例。代码应该如下所示：\n \n SelectTableRow | 刘嘉诚-10-强密码\n \n 注意：这段代码是在假设表格中的实例名称是唯一的，并且当前页面只有一个表格的情况下编写的。如果有多个表格或同一表格中有多个实例名称相同的行，可能需要其他关键字进行定位。"
    },
    {
        "instruction": "这是使用RobotFramework标准库和EasyUILib编写的WebUI自动化脚本，请解释他的含义",
        "input": "检查表格第一行 授权编号为 ${authorization_num} 子状态为已冻结",
        "output": "这段代码主要作用是：检查表格第一行的\"授权编号\"是否为给定的值（${authorization_num}），并且\"子状态\"为\"已冻结\"。\n 其中用到了以下关键字：CheckCellHas\n 这些关键字的用法是：CheckCellHas 用于检查表格中的某个单元格是否包含给定的文本。例如，这里需要检查第一行的\"授权编号\"单元格是否包含${authorization_num}，以及\"子状态\"单元格是否包含\"已冻结\"。具体的用法为：\n \n ```robot\n CheckCellHas 1 授权编号 ${authorization_num}\n CheckCellHas 1 子状态 已冻结\n ```"
    }
]